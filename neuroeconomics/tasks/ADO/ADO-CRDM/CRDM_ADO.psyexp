<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2023.2.2">
  <Settings>
    <Param val="use prefs" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'/data/%s' % (expInfo['participant'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="" valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': 'CRDM'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="['crdm_gen_test_idx.csv', 'crdm_practice2.csv', 'crdm_practice1.csv', 'crdm_gen_trials_idx.csv', 'crdm_questplus_trials.csv', 'images/risk_red_75.bmp', 'images/crdm_screen.png', 'images/ambig_24.bmp', 'images/risk_red_25.bmp', 'images/response_box1-2.png', 'images/risk_blue_75.bmp', 'images/FB_cert.png', 'images/risk_blue_50.bmp', 'images/2key.png', 'images/ambig_74.bmp', 'images/FB_lott.png', 'images/risk_blue_13.bmp', 'images/risk_red_38.bmp', 'images/risk_red_50.bmp', 'images/risk_red_13.bmp', 'images/risk_blue_38.bmp', 'images/risk_blue_25.bmp', 'images/ambig_50.bmp', 'images/fixTarget.bmp', 'images/FB_nonresp.png', 'images/4key.png']" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="2023.2.2" valType="str" updates="None" name="Use version"/>
    <Param val="[1728, 1117]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="crdm_ado" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="Pyglet" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="crdm_instr1">
      <RoutineSettingsComponent name="crdm_instr1" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_instr1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="crdm_instr1_JS" plugin="None">
        <Param val="exp_proceed = true;&amp;#10;earnings = [];" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="var exp_proceed = true;&amp;#10;var crdm_earnings = [];" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="//function for random.random used in python&amp;#10;random = {&amp;#10;random: function(){return Math.random()}, &amp;#10;randint: function(start, end){return Math.round(Math.random() * (end - start) + start)}, &amp;#10;choices: function(items, weights){&amp;#10;    var i; &amp;#10;    for (i = 0; i &lt; weights.length; i++)&amp;#10;        weights[i] += weights[i - 1] || 0;&amp;#10;    var random = Math.random() * weights[weights.length - 1];&amp;#10;    for (i = 0; i &lt; weights.length; i++)&amp;#10;        if (weights[i] &gt; random)&amp;#10;            break;&amp;#10;    return items[i] }&amp;#10;}&amp;#10;&amp;#10;const formatter = new Intl.NumberFormat('en-US', {&amp;#10;  minimumFractionDigits: 2,&amp;#10;  maximumFractionDigits: 2,&amp;#10;});&amp;#10;&amp;#10;format = formatter.format;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="crdm_practice_loop1_name = &quot;crdm_pract1_trials&quot;;&amp;#10;crdm_questplus_loop_name = &quot;crdm_questplus_trials&quot;;&amp;#10;crdm_practice_loop2_name = &quot;crdm_pract2_trials&quot;;&amp;#10;crdm_loop_name = &quot;crdm_trials&quot;;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="crdm_instr1_JS" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="crdm_instr1_py" plugin="None">
        <Param val="###code written by Mandy Renfro (2023)###&amp;#10;import random&amp;#10;import os&amp;#10;exp_proceed = True&amp;#10;crdm_earnings = []&amp;#10;&amp;#10;import ricardo_gain as rg&amp;#10;import ricardo_loss as rl&amp;#10;#ADO Step 0&amp;#10;g_log_lik, g_ent, g_log_post, g_sets = rg.step0() #gains&amp;#10;l_log_lik, l_ent, l_log_post, l_sets = rl.step0() #losses" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="import * as random from 'random';&amp;#10;import * as os from 'os';&amp;#10;import * as rg from 'ricardo_gain';&amp;#10;import * as rl from 'ricardo_loss';&amp;#10;exp_proceed = true;&amp;#10;crdm_earnings = [];&amp;#10;[g_log_lik, g_ent, g_log_post, g_sets] = rg.step0();&amp;#10;[l_log_lik, l_ent, l_log_post, l_sets] = rl.step0();&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="subid = expInfo[&quot;participant&quot;]&amp;#10;&amp;#10;if not os.path.exists(&quot;data/{0}&quot;.format(subid)): #does subject exist&amp;#10;    os.mkdir(&quot;data/{0}&quot;.format(subid))&amp;#10;if not os.path.exists(&quot;data/{0}/session{1}&quot;.format(subid, expInfo[&quot;session&quot;])): #does session exist&amp;#10;    os.mkdir(&quot;data/{0}/session{1}&quot;.format(subid, expInfo[&quot;session&quot;]))&amp;#10;&amp;#10;def format(number):&amp;#10;    return &quot;[0:0.2f]&quot;.format(number)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="crdm_practice_loop1_name = &quot;crdm_pract1_trials&quot;;&amp;#10;crdm_practice_loop2_name = &quot;crdm_pract2_trials&quot;;&amp;#10;crdm_loop_name = &quot;crdm_trials&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#provides specific loop names for each of two interations of CRDM&amp;#10;#to provide flexibility of crdm_pract_trial and crdm_trial routines&amp;#10;practice_loop1_name = &quot;crdm_pract1_trials&quot;&amp;#10;practice_loop2_name = &quot;crdm_pract2_trials&quot;&amp;#10;loop_name = &quot;crdm_trials&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="crdm_instr1_py" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="crdm_instr1_title_txt" plugin="None">
        <Param val="0.7098, 0.2941, -0.7490" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr1_title_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="* Risk &amp; Ambiguity Task *" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_instr1_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr1_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="In this decision making task, you will be asked to make economic choices between: &amp;#10;&amp;#10;- Gaining/losing a certain amount &amp;#10;OR&amp;#10;- Playing a lottery for the chance to win a larger gain or smaller loss &amp;#10;&amp;#10;Your choice for each trial will determine how much money you could earn if randomly selected as your bonus earnings trial. " valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.25" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_instr1_space_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr1_space_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press SPACE to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="crdm_instr1_resp" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="crdm_instr1_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="crdm_instr2">
      <RoutineSettingsComponent name="crdm_instr2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_instr2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="crdm_instr2_lottname_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr2_lottname_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.2, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="*Playing the Lottery*" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_instr2_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr2_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.2, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="The lottery consists of an imaginary bag containing 100 poker chips, some red and some blue. To play, you pull a random chip from the bag.  &amp;#10;&amp;#10;The figure on the right represents the proportion of blue and red chips in the imaginary bag. &amp;#10;&amp;#10;In this example, most chips are blue (75 of 100) and fewer are red (25 of 100)." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="crdm_instr2_img" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="images/risk_blue_75.bmp" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="crdm_instr2_img" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.6, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="height" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="crdm_instr2_lott0_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr2_lott0_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.6, 0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="\$0" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_instr2_lott20_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr2_lott20_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.6, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="\$20" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_instr2_space_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr2_space_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press SPACE to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="crdm_instr2_resp" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="crdm_instr2_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="crdm_instr3">
      <RoutineSettingsComponent name="crdm_instr3" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_instr3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="crdm_instr3_lottname_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr3_lottname_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.2, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="*Playing the Lottery*" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_instr3_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr3_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.2, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Given information about the number of blue and red chips in the bag, you can decide whether you would prefer a certain monetary outcome or if you would rather play the lottery for a chance to win a different outcome&amp;#10;&amp;#10;In this example, you have a 75% chance of pulling a blue chip and winning \$20. Conversely, you have a 25% chance of pulling a red chip and receiving \$0.&amp;#10;&amp;#10;The value for each color will change from bag to bag. Read the \$ amount above the red and below the blue to know the value of each chip color." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="crdm_instr3_img" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="images/risk_blue_75.bmp" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="crdm_instr3_img" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.6, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="crdm_instr3_lott0_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr3_lott0_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.6, 0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="\$0" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_instr3_lott20_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr3_lott20_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.6, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="\$20" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_instr3_space_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr3_space_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press SPACE to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="crdm_instr3_resp" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="crdm_instr3_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="crdm_instr4">
      <RoutineSettingsComponent name="crdm_instr4" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_instr4" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="crdm_instr4_lottname_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr4_lottname_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.2, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="*Playing the Lottery*" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_instr4_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr4_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.2, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="For some lotteries, information about the contents of the bag may be partially hidden. &amp;#10;&amp;#10;In this example, the bag has at least 25 blue chips and 25 red chips. However, the color of the remaining 50 chips is unknown. The remaining 50 chips could be all red, all blue, or any combination of the two. " valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="crdm_instr4_img" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="images/ambig_50.bmp" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="crdm_instr4_img" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.6, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="crdm_instr4_lott0_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr4_lott0_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.6, 0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="\$0" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_instr4_lott20_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr4_lott20_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.6, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="\$20" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_instr4_space_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr4_space_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press SPACE to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="crdm_instr4_resp" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="crdm_instr4_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="crdm_instr5">
      <RoutineSettingsComponent name="crdm_instr5" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_instr5" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="crdm_instr5_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.035" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr5_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="The lottery bag will appear in the center of the screen. The certain dollar amount will be presented on either the right or left side of the bag. In this example, the certain \$5 would be the left option, and the lottery would be the right option:" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="crdm_instr5_img" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="images/risk_blue_75.bmp" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="crdm_instr5_img" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="crdm_instr5_lott_top_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr5_lott_top_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.25)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="\$0" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_instr5_lott_bot_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr5_lott_bot_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="\$20" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_instr5_sure_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr5_sure_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.5, -0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="\$5" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_instr5_space_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr5_space_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press SPACE to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="crdm_instr5_resp" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="crdm_instr5_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="crdm_instr6">
      <RoutineSettingsComponent name="crdm_instr6" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_instr6" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="crdm_instr6_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr6_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="When the green circle appears, use the number keys at the top of your keyboard to indicate your choice:&amp;#10;&amp;#10;Press 1 to select the left option&amp;#10;Press 2 to select the right option &amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.25" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="crdm_instr6_img" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="images/2key.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="crdm_instr6_img" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.1)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.6, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="crdm_instr6_space_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr6_space_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press SPACE to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="crdm_instr6_resp" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="crdm_instr6_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="crdm_instr7">
      <RoutineSettingsComponent name="crdm_instr7" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_instr7" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="crdm_instr7_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr7_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="After each choice, you will be asked to rate your choice confidence. &amp;#10;1 indicates you couldn't decide which option you preferred and chose at random, while 4 indicates total certainty in your choice. Use the number keys at the top of your keyboard to indicate your confidence: &amp;#10;&amp;#10;Press 1 - Not at all confident&amp;#10;Press 2 - Less confident&amp;#10;Press 3 - Somewhat confident&amp;#10;Press 4 - Very confident&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.35" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="crdm_instr7_img" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="images/4key.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="crdm_instr7_img" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.6, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="crdm_instr7_space_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr7_space_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press SPACE to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="crdm_instr7_resp" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="crdm_instr7_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="crdm_instr8">
      <RoutineSettingsComponent name="crdm_instr8" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_instr8" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="crdm_instr8_title_txt" plugin="None">
        <Param val="0.7098, 0.2941, -0.7490" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr8_title_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="* Risk &amp; Ambiguity Task *" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_instr8_warn_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr8_warn_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="You must answer both the initial question and confidence prompts to complete each trial. The experiment will end if you (1) miss more than 4 trials, or (2) provide responses which indicate you did not understand, or are not following, task instructions. If this happens, you will not be eligible to receive a *bonus earnings*. &amp;#10;&amp;#10;Please remain engaged throughout the experiment and provide earnest, sincere responses for each trial. Remember, your choices could help you walk away with an additional bonus ranging from \$2 to \$65, depending on the seleced *bonus earnings* trial!&amp;#10;&amp;#10;Thank you for your participation!" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_instr8_space_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_instr8_space_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press SPACE to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="crdm_instr8_resp" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="crdm_instr8_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="crdm_init_fix">
      <RoutineSettingsComponent name="crdm_init_fix" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_init_fix" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <PolygonComponent name="crdm_init_fix_poly" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="crdm_init_fix_poly" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.05, 0.05)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="crdm_feedback">
      <RoutineSettingsComponent name="crdm_feedback" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_feedback" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="crdm_feedback_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((crdm_key === undefined)) {&amp;#10;    crdm_msg = &quot;NO RESPONSE&quot;;&amp;#10;} else {&amp;#10;    if (crdm_sure_key) {&amp;#10;        crdm_msg = (&quot;CERTAIN $&quot; + format(crdm_sure_amt.toString()));&amp;#10;    } else {&amp;#10;        crdm_msg = &quot;LOTTERY&quot;;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if len(crdm_key) == 0: #Ss did not respond&amp;#10;    crdm_msg = &quot;NO RESPONSE&quot;&amp;#10;elif crdm_sure_key: #Ss chose sure $5&amp;#10;    crdm_msg = &quot;CERTAIN $&quot; + str(format(crdm_sure_amt))&amp;#10;else: #Ss chose lottery&amp;#10;    crdm_msg = &quot;LOTTERY&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="crdm_feedback_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="crdm_feedback_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_feedback_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$crdm_msg" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="crdm_conf">
      <RoutineSettingsComponent name="crdm_conf" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_conf" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="crdm_conf_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((crdm_key === undefined)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;conf1_color = [0, 0, 0];&amp;#10;conf2_color = [0, 0, 0];&amp;#10;conf3_color = [0, 0, 0];&amp;#10;conf4_color = [0, 0, 0];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if len(crdm_key) == 0: #Ss did not respond&amp;#10;    continueRoutine = False #do not run conf routine&amp;#10;&amp;#10;#set default gray for all four response boxes&amp;#10;conf1_color = [0, 0, 0] &amp;#10;conf2_color = [0, 0, 0]&amp;#10;conf3_color = [0, 0, 0]&amp;#10;conf4_color = [0, 0, 0]" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="crdm_conf_key = crdm_conf_resp.keys&amp;#10;if len(crdm_conf_key) == 1: #Ss responded&amp;#10;    if crdm_conf_key == &quot;1&quot;: #not at all confident&amp;#10;        #change box color to indicate selection&amp;#10;        conf1_color = &quot;darkgray&quot; &amp;#10;        conf2_color = [0,0,0]&amp;#10;        conf3_color = [0,0,0]&amp;#10;        conf4_color = [0,0,0]&amp;#10;    elif crdm_conf_key == &quot;2&quot;: #less confident&amp;#10;        conf1_color = [0,0,0]&amp;#10;        conf2_color = &quot;darkgray&quot;&amp;#10;        conf3_color = [0,0,0]&amp;#10;        conf4_color = [0,0,0]&amp;#10;    elif crdm_conf_key == &quot;3&quot;: #somewhat confident&amp;#10;        conf1_color = [0,0,0]&amp;#10;        conf2_color = [0,0,0]&amp;#10;        conf3_color = &quot;darkgray&quot;&amp;#10;        conf4_color = [0,0,0]&amp;#10;    elif crdm_conf_key == &quot;4&quot;: #very confident&amp;#10;        conf1_color = [0,0,0]&amp;#10;        conf2_color = [0,0,0]&amp;#10;        conf3_color = [0,0,0]&amp;#10;        conf4_color = &quot;darkgray&quot;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="crdm_conf_key = crdm_conf_resp.keys;&amp;#10;if (!(crdm_conf_key == undefined) &amp;&amp; (crdm_conf_key.length === 1)) {&amp;#10;    if ((crdm_conf_key === &quot;1&quot;)) {&amp;#10;        conf1_color = &quot;darkgray&quot;;&amp;#10;        conf2_color = [0, 0, 0];&amp;#10;        conf3_color = [0, 0, 0];&amp;#10;        conf4_color = [0, 0, 0];&amp;#10;    } else {&amp;#10;        if ((crdm_conf_key === &quot;2&quot;)) {&amp;#10;            conf1_color = [0, 0, 0];&amp;#10;            conf2_color = &quot;darkgray&quot;;&amp;#10;            conf3_color = [0, 0, 0];&amp;#10;            conf4_color = [0, 0, 0];&amp;#10;        } else {&amp;#10;            if ((crdm_conf_key === &quot;3&quot;)) {&amp;#10;                conf1_color = [0, 0, 0];&amp;#10;                conf2_color = [0, 0, 0];&amp;#10;                conf3_color = &quot;darkgray&quot;;&amp;#10;                conf4_color = [0, 0, 0];&amp;#10;            } else {&amp;#10;                if ((crdm_conf_key === &quot;4&quot;)) {&amp;#10;                    conf1_color = [0, 0, 0];&amp;#10;                    conf2_color = [0, 0, 0];&amp;#10;                    conf3_color = [0, 0, 0];&amp;#10;                    conf4_color = &quot;darkgray&quot;;&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="my_loop.addData(&quot;crdm_conf&quot;, crdm_conf_key);" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="my_loop.addData(&quot;crdm_conf&quot;, crdm_conf_key);" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="crdm_conf_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="crdm_conf_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_conf_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="How confident are you in your choice?" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="crdm_conf1" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$conf1_color" valType="color" updates="set every frame" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="10" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="crdm_conf1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.6, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="crdm_conf1_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_conf1_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.6, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Not at all&amp;#10;confident&amp;#10;&amp;#10;1" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="crdm_conf2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$conf2_color" valType="color" updates="set every frame" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="10" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="crdm_conf2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.2, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="crdm_conf2_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_conf2_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.2, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Less&amp;#10;confident&amp;#10;&amp;#10;2" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="crdm_conf3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$conf3_color" valType="color" updates="set every frame" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="10" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="crdm_conf3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.2, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="crdm_conf3_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_conf3_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.2, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Somewhat&amp;#10;confident&amp;#10;&amp;#10;3" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="crdm_conf4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$conf4_color" valType="color" updates="set every frame" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="10" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="crdm_conf4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.6, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="crdm_conf4_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_conf4_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.6, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Very&amp;#10;confident&amp;#10;&amp;#10;4" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="crdm_conf_resp" plugin="None">
        <Param val="'1', '2', '3', '4'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="crdm_conf_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="crdm_trial_instr">
      <RoutineSettingsComponent name="crdm_trial_instr" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_trial_instr" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="crdm_trial_instr_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="crdm_task_resps = [];&amp;#10;crdm_conf_resps = [];&amp;#10;crdm_catch_trials = [];&amp;#10;crdm_iti_list = function () {&amp;#10;    var _pj_a = [], _pj_b = util.range(144);&amp;#10;    for (var _pj_c = 0, _pj_d = _pj_b.length; (_pj_c &lt; _pj_d); _pj_c += 1) {&amp;#10;        var i = _pj_b[_pj_c];&amp;#10;        _pj_a.push(random.random());&amp;#10;    }&amp;#10;    return _pj_a;&amp;#10;}&amp;#10;.call(this);&amp;#10;crdm_s = util.sum(crdm_iti_list);&amp;#10;crdm_iti_list = function () {&amp;#10;    var _pj_a = [], _pj_b = crdm_iti_list;&amp;#10;    for (var _pj_c = 0, _pj_d = _pj_b.length; (_pj_c &lt; _pj_d); _pj_c += 1) {&amp;#10;        var i = _pj_b[_pj_c];&amp;#10;        _pj_a.push(((i * 144) / crdm_s));&amp;#10;    }&amp;#10;    return _pj_a;&amp;#10;}&amp;#10;.call(this);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="crdm_task_resps = []&amp;#10;crdm_conf_resps = []&amp;#10;crdm_catch_trials = []&amp;#10;crdm_iti_list = [random.random() for i in range(144)] #create list of random floats (0-1) which is length of trial schedule&amp;#10;crdm_s = sum(crdm_iti_list) #sum list of rnadom floats&amp;#10;crdm_iti_list = [i*144/crdm_s for i in crdm_iti_list] #for each item in iti_list: multiple by list length, then divide by list sum" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="crdm_trial_instr_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="crdm_trial_instr_title_txt" plugin="None">
        <Param val="0.7098, 0.2941, -0.7490" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_trial_instr_title_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="* Risk &amp; Ambiguity Task *" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_trial_instr_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_trial_instr_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Now that you've practiced, we'll begin the second section of the task.&amp;#10;&amp;#10;You will have 3 seconds to view and consider the certain and lottery options, and 2 seconds to choose once the green circle appears. You will then have 3 seconds to rate your confidence." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.25" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_trial_instr_space_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_trial_instr_space_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press SPACE to begin." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="crdm_trial_instr_resp" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="crdm_trial_instr_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="crdm_trial">
      <RoutineSettingsComponent name="crdm_trial" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_trial" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="crdm_trial_JS" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="//var crdm_sure_amt, crdm_sure_p, crdm_lott_top, crdm_lott_bot, crdm_lott_p, crdm_amb_lev, crdm_domain, crdm_img;&amp;#10;//var delta_time, sure_pos, sure_resp, crdm_msg, pos, resp, task_nonresp_ct, conf_nonresp_ct;&amp;#10;&amp;#10;crdm_delta_time = 0; //used in variable ITI&amp;#10;crdm_sure_pos = []; //position of certain option&amp;#10;crdm_sure_resp = []; //response key for certain option&amp;#10;crdm_msg = &quot;&quot;; //feedback message string&amp;#10;crdm_pos = [[(- 0.5), 0], [0.5, 0]]; //left/right screen locations&amp;#10;crdm_resp = [&quot;1&quot;, &quot;2&quot;]; //1 = left, 2 = right&amp;#10;crdm_task_nonresp_ct = 0;&amp;#10;crdm_conf_nonresp_ct = 0;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="my_loop = eval(crdm_loop_name);&amp;#10;crdm_stop_timer = null;&amp;#10;crdm_stopped_time = 0;&amp;#10;crdm_lott_outcome = 0;&amp;#10;crdm_conf_key = [];&amp;#10;crdm_idx = random.randint(0, 1);&amp;#10;crdm_sure_pos = crdm_pos[crdm_idx];&amp;#10;crdm_sure_resp = crdm_resp[crdm_idx];&amp;#10;&amp;#10;&amp;#10;//crdm_trials_dict = {&quot;crdm_safe_sv&quot;:[], &quot;crdm_lott_sv&quot;:[], &quot;crdm_lott&quot;:[], &quot;crdm_sure_amt&quot;:[], //#dict for trial variables&amp;#10;//                    &quot;crdm_lott_p&quot;:[], &quot;crdm_amb_lev&quot;:[], &quot;crdm_delta_sv&quot;:[], &quot;crdm_domain&quot;:[]};&amp;#10;//assign QuestPlus generated variables for trial presentation&amp;#10;crdm_sure_amt = crdm_trials_dict[&quot;crdm_sure_amt&quot;][crdm_trial_idx];&amp;#10;crdm_sure_p = 100;&amp;#10;crdm_lott_p = crdm_trials_dict[&quot;crdm_lott_p&quot;][crdm_trial_idx];&amp;#10;crdm_amb_lev = crdm_trials_dict[&quot;crdm_amb_lev&quot;][crdm_trial_idx];&amp;#10;crdm_domain = crdm_trials_dict[&quot;crdm_domain&quot;][crdm_trial_idx];&amp;#10;crdm_lott_top = &quot;&quot;;&amp;#10;crdm_lott_bot = &quot;&quot;;&amp;#10;crdm_img = &quot;&quot;;&amp;#10;&amp;#10;if (crdm_nonzero_side == &quot;top&quot;) {&amp;#10;    crdm_lott_top = crdm_trials_dict[&quot;crdm_lott&quot;][crdm_trial_idx];&amp;#10;    crdm_lott_bot = 0;&amp;#10;    if (crdm_trials_dict[&quot;crdm_amb_lev&quot;][crdm_trial_idx] != 0) { //check if ambiguity trial&amp;#10;        crdm_img = &quot;ambig_&quot; + parseInt(crdm_trials_dict[&quot;crdm_amb_lev&quot;][crdm_trial_idx] * 100) + &quot;.bmp&quot;;&amp;#10;    } else { &amp;#10;        crdm_img = &quot;risk_red_&quot; + parseInt(crdm_trials_dict[&quot;crdm_lott_p&quot;][crdm_trial_idx] * 100) + &quot;.bmp&quot;;&amp;#10;    }&amp;#10;} else {&amp;#10;    crdm_lott_top = 0 &amp;#10;    crdm_lott_bot = crdm_trials_dict[&quot;crdm_lott&quot;][crdm_trial_idx];&amp;#10;    if (crdm_trials_dict[&quot;crdm_amb_lev&quot;][crdm_trial_idx] != 0) { //check if ambiguity trial&amp;#10;        crdm_img = &quot;ambig_&quot; + parseInt(crdm_trials_dict[&quot;crdm_amb_lev&quot;][crdm_trial_idx] * 100) + &quot;.bmp&quot;;&amp;#10;    } else { &amp;#10;        crdm_img = &quot;risk_blue_&quot; + parseInt(crdm_trials_dict[&quot;crdm_lott_p&quot;][crdm_trial_idx] * 100) + &quot;.bmp&quot;;&amp;#10;    }&amp;#10;}&amp;#10;&amp;#10;//save QuestPlus generated variables to output csv&amp;#10;my_loop.addData(&quot;crdm_sure_amt&quot;, crdm_sure_amt);&amp;#10;my_loop.addData(&quot;crdm_lott_top&quot;, crdm_lott_top);&amp;#10;my_loop.addData(&quot;crdm_lott_bot&quot;, crdm_lott_bot);&amp;#10;my_loop.addData(&quot;crdm_sure_p&quot;, crdm_sure_p);&amp;#10;my_loop.addData(&quot;crdm_lott_p&quot;, crdm_lott_p);&amp;#10;my_loop.addData(&quot;crdm_amb_lev&quot;, crdm_amb_lev);&amp;#10;my_loop.addData(&quot;crdm_domain&quot;, crdm_domain);&amp;#10;my_loop.addData(&quot;crdm_img&quot;, crdm_img);" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="v" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (!(crdm_trial_resp.keys == undefined) &amp;&amp; (crdm_trial_resp.keys.length === 1)) {&amp;#10;    if ((crdm_stop_timer === null)) {&amp;#10;        crdm_stop_timer = new util.Clock();&amp;#10;    } else {&amp;#10;        if ((crdm_stop_timer.getTime() &gt;= 0.5)) {&amp;#10;            continueRoutine = false;&amp;#10;        }&amp;#10;    }&amp;#10;}" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="crdm_key = crdm_trial_resp.keys;&amp;#10;crdm_sure_key = crdm_trial_resp.corr;&amp;#10;my_loop.addData(&quot;crdm_trial_type&quot;, &quot;task&quot;);&amp;#10;lott_outcome = 0;&amp;#10;if ((((crdm_trial_resp.rt) === undefined) || (crdm_trial_resp.rt &gt;= (2 - 0.5)))) {&amp;#10;    crdm_delta_time = 0;&amp;#10;} else {&amp;#10;    crdm_delta_time = Math.max(0, (2 - (crdm_trial_resp.rt + crdm_stopped_time)));&amp;#10;}&amp;#10;if (!(crdm_key === undefined) &amp;&amp; (crdm_key.length === 1)) {&amp;#10;    if ((crdm_sure_key === 1)) {&amp;#10;        crdm_earnings.push([&quot;sure&quot;, crdm_sure_amt, crdm_sure_amt, crdm_img, crdm_lott_top, crdm_lott_bot, (- 1), crdm_nonzero_side, crdm_domain]);&amp;#10;        my_loop.addData(&quot;crdm_choice&quot;, 0);&amp;#10;        my_loop.addData(&quot;crdm_choice2&quot;, &quot;sure&quot;);&amp;#10;        my_loop.addData(&quot;crdm_lott&quot;, &quot;&quot;);&amp;#10;        my_loop.addData(&quot;crdm_lott2&quot;, &quot;&quot;);&amp;#10;    } else {&amp;#10;        lott_outcome = random.choice([0, 1], [100 - Number.parseInt(crdm_lott_p * 100), Number.parseInt(crdm_lott_p * 100)]);&amp;#10;        my_loop.addData(&quot;crdm_choice&quot;, 1);&amp;#10;        my_loop.addData(&quot;crdm_choice2&quot;, &quot;lott&quot;);&amp;#10;        my_loop.addData(&quot;crdm_lott&quot;, lott_outcome);&amp;#10;        if ((lott_outcome === 1)) {&amp;#10;            my_loop.addData(&quot;crdm_lott2&quot;, &quot;win&quot;);&amp;#10;            if ((crdm_domain === 1)) { //gain&amp;#10;                my_loop.addData(&quot;crdm_domain2&quot;, &quot;gain&quot;);&amp;#10;                if ((Number.parseInt(crdm_lott_top) !== 0)) {&amp;#10;                    crdm_earnings.push([&quot;lott&quot;, crdm_lott_top, crdm_sure_amt, crdm_img, crdm_lott_top, crdm_lott_bot, lott_outcome, crdm_nonzero_side, crdm_domain]);&amp;#10;                } else {&amp;#10;                    crdm_earnings.push([&quot;lott&quot;, crdm_lott_bot, crdm_sure_amt, crdm_img, crdm_lott_top, crdm_lott_bot, lott_outcome, crdm_nonzero_side, crdm_domain]);&amp;#10;                }&amp;#10;            } else {&amp;#10;                if ((crdm_domain === -1)) { //loss&amp;#10;                    my_loop.addData(&quot;crdm_domain2&quot;, &quot;loss&quot;);&amp;#10;                    if ((Number.parseInt(crdm_lott_top) === 0)) {&amp;#10;                        crdm_earnings.push([&quot;lott&quot;, crdm_lott_top, crdm_sure_amt, crdm_img, crdm_lott_top, crdm_lott_bot, lott_outcome, crdm_nonzero_side, crdm_domain]);&amp;#10;                    } else {&amp;#10;                        crdm_earnings.push([&quot;lott&quot;, crdm_lott_bot, crdm_sure_amt, crdm_img, crdm_lott_top, crdm_lott_bot, lott_outcome, crdm_nonzero_side, crdm_domain]);&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        } else {&amp;#10;            my_loop.addData(&quot;crdm_lott2&quot;, &quot;lose&quot;);&amp;#10;            if ((crdm_domain === 1)) { //gain&amp;#10;                my_loop.addData(&quot;crdm_domain2&quot;, &quot;gain&quot;);&amp;#10;                if ((Number.parseInt(crdm_lott_top) === 0)) {&amp;#10;                    crdm_earnings.push([&quot;lott&quot;, crdm_lott_top, crdm_sure_amt, crdm_img, crdm_lott_top, crdm_lott_bot, lott_outcome, crdm_nonzero_side, crdm_domain]);&amp;#10;                } else {&amp;#10;                    crdm_earnings.push([&quot;lott&quot;, crdm_lott_bot, crdm_sure_amt, crdm_img, crdm_lott_top, crdm_lott_bot, lott_outcome, crdm_nonzero_side, crdm_domain]);&amp;#10;                }&amp;#10;            } else {&amp;#10;                if ((crdm_domain === -1)) { //loss&amp;#10;                    my_loop.addData(&quot;crdm_domain2&quot;, &quot;loss&quot;);&amp;#10;                    if ((Number.parseInt(crdm_lott_top) &lt; 0)) {&amp;#10;                        crdm_earnings.push([&quot;lott&quot;, crdm_lott_top, crdm_sure_amt, crdm_img, crdm_lott_top, crdm_lott_bot, lott_outcome, crdm_nonzero_side, crdm_domain]);&amp;#10;                    } else {&amp;#10;                        crdm_earnings.push([&quot;lott&quot;, crdm_lott_bot, crdm_sure_amt, crdm_img, crdm_lott_top, crdm_lott_bot, lott_outcome, crdm_nonzero_side, crdm_domain]);&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="crdm_trial_JS" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="crdm_trial_py" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="delta_time = 0 #used in variable ITI&amp;#10;sure_pos = [] #position of certain option&amp;#10;sure_resp = [] #response key for certain option&amp;#10;crdm_msg = &quot;&quot; #feedback message string&amp;#10;&amp;#10;#stimuli positions and respective responses&amp;#10;pos = [[-0.5, 0], [0.5, 0]] #left/right screen locations&amp;#10;resp = [&quot;1&quot;, &quot;2&quot;] #1 = left, 2 = right" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="delta_time = 0;&amp;#10;sure_pos = [];&amp;#10;sure_resp = [];&amp;#10;crdm_msg = &quot;&quot;;&amp;#10;pos = [[(- 0.5), 0], [0.5, 0]];&amp;#10;resp = [&quot;1&quot;, &quot;2&quot;];&amp;#10;task_nonresp_ct = 0;&amp;#10;conf_nonresp_ct = 0;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="my_loop = eval(loop_name);&amp;#10;stop_timer = null;&amp;#10;stopped_time = 0;&amp;#10;lott_outcome = 0;&amp;#10;conf_key = [];&amp;#10;idx = random.randint(0, 1);&amp;#10;sure_pos = pos[idx];&amp;#10;sure_resp = resp[idx];&amp;#10;sure_amt = 5;&amp;#10;if ((idx === 0)) {&amp;#10;    lott_pos = pos[1];&amp;#10;} else {&amp;#10;    lott_pos = pos[0];&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="my_loop = eval(loop_name) #variable for saving data&amp;#10;stop_timer = None &amp;#10;stopped_time = 0&amp;#10;lott_outcome = 0&amp;#10;&amp;#10;idx = random.randint(0,1) #random index (left = 0, right = 1)&amp;#10;sure_pos = pos[idx] #idx certain amt position&amp;#10;sure_resp = resp[idx] #idx certain amt response" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if len(crdm_trial_resp.keys) == 1: #Ss responded&amp;#10;    if stop_timer == None: &amp;#10;        stop_timer = core.Clock() #get current exp time&amp;#10;    else:&amp;#10;        if stop_timer.getTime() &gt;= 0.5:&amp;#10;            continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (!(crdm_trial_resp.keys === undefined) &amp;&amp; (crdm_trial_resp.keys.length === 1)) {&amp;#10;    if ((stop_timer === null)) {&amp;#10;        stop_timer = new util.Clock();&amp;#10;    } else {&amp;#10;        if ((stop_timer.getTime() &gt;= 0.5)) {&amp;#10;            continueRoutine = false;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;key = crdm_trial_resp.keys;&amp;#10;sure_key = crdm_trial_resp.corr;&amp;#10;my_loop.addData(&quot;crdm_trial_type&quot;, &quot;task&quot;);&amp;#10;if (_pj.in_es6(key, [&quot;1&quot;, &quot;2&quot;])) {&amp;#10;    task_resps.push(key);&amp;#10;}&amp;#10;if ((((crdm_trial_resp.rt) === undefined) || (crdm_trial_resp.rt &gt;= (2.2 - 0.5)))) {&amp;#10;    delta_time = 0;&amp;#10;} else {&amp;#10;    delta_time = Math.max(0, (2 - (crdm_trial_resp.rt + stopped_time)));&amp;#10;}&amp;#10;if (!(key === undefined) &amp;&amp; (key.length === 1)) {&amp;#10;    if ((sure_key === 1)) {&amp;#10;        if ((crdm_catch_trial === 1)) {&amp;#10;            catch_trials.push(1);&amp;#10;        }&amp;#10;        earnings.push([&quot;sure&quot;, 5, crdm_img, crdm_lott_top, crdm_lott_bot, (- 1), crdm_win_side, crdm_domain]);&amp;#10;        my_loop.addData(&quot;crdm_choice&quot;, 0);&amp;#10;        my_loop.addData(&quot;crdm_choice2&quot;, &quot;sure&quot;);&amp;#10;        my_loop.addData(&quot;crdm_lott&quot;, (- 1));&amp;#10;        my_loop.addData(&quot;crdm_lott2&quot;, &quot;NA&quot;);&amp;#10;    } else {&amp;#10;        if ((crdm_catch_trial === 1)) {&amp;#10;            catch_trials.push(0);&amp;#10;        }&amp;#10;        lott_outcome = random.choices([0, 1], {&quot;weights&quot;: [(100 - Number.parseInt(crdm_lott_p)), Number.parseInt(crdm_lott_p)]})[0];&amp;#10;        my_loop.addData(&quot;crdm_choice&quot;, 1);&amp;#10;        my_loop.addData(&quot;crdm_choice2&quot;, &quot;lott&quot;);&amp;#10;        my_loop.addData(&quot;crdm_lott&quot;, lott_outcome);&amp;#10;        if ((lott_outcome === 1)) {&amp;#10;            my_loop.addData(&quot;crdm_lott2&quot;, &quot;win&quot;);&amp;#10;            if ((Number.parseInt(crdm_lott_top) !== 0)) {&amp;#10;                earnings.push([&quot;lott&quot;, crdm_lott_top, crdm_img, crdm_lott_top, crdm_lott_bot, lott_outcome, crdm_win_side, crdm_domain]);&amp;#10;            } else {&amp;#10;                earnings.push([&quot;lott&quot;, crdm_lott_bot, crdm_img, crdm_lott_top, crdm_lott_bot, lott_outcome, crdm_win_side, crdm_domain]);&amp;#10;            }&amp;#10;        } else {&amp;#10;            my_loop.addData(&quot;crdm_lott2&quot;, &quot;lose&quot;);&amp;#10;            earnings.push([&quot;lott&quot;, 0, crdm_img, crdm_lott_top, crdm_lott_bot, lott_outcome, crdm_win_side, crdm_domain]);&amp;#10;        }&amp;#10;    }&amp;#10;} else {&amp;#10;    task_nonresp_ct += 1;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="key = crdm_trial_resp.keys #variable for feedback routine&amp;#10;sure_key = crdm_trial_resp.corr #1 if certain $ selected&amp;#10;my_loop.addData(&quot;crdm_trial_type&quot;, &quot;task&quot;) #record trial identifier as &quot;task&quot;&amp;#10;&amp;#10;if type(crdm_trial_resp.rt) is list or crdm_trial_resp.rt &gt;= 2 - 0.5:&amp;#10;    delta_time = 0&amp;#10;else:&amp;#10;    delta_time = max(0, 2 - (crdm_trial_resp.rt + stopped_time))&amp;#10;&amp;#10;if len(key) == 1: #response received from Ss&amp;#10;    if sure_key == 1: #certain option&amp;#10;        #-1 is placeholder for lott_outcome&amp;#10;        earnings.append((&quot;sure&quot;, crdm_sure_amt, crdm_img, crdm_lott_top, crdm_lott_bot, -1, crdm_nonzero_side, crdm_domain)) #record info for bonus trial&amp;#10;        my_loop.addData(&quot;crdm_choice&quot;, 0) #record Ss sure amt choice (int)&amp;#10;        my_loop.addData(&quot;crdm_choice2&quot;, &quot;sure&quot;) #record Ss sure amt choice (str)&amp;#10;        my_loop.addData(&quot;crdm_lott&quot;, &quot;&quot;) #record blank for lottery (int)&amp;#10;        my_loop.addData(&quot;crdm_lott2&quot;, &quot;&quot;) #record blank for lottery (str)&amp;#10;    else: #lottery option&amp;#10;        lott_outcome = random.choices([0,1], weights=[100-int(crdm_lott_p), int(crdm_lott_p)])[0] #outcome of current lottery&amp;#10;        my_loop.addData(&quot;crdm_choice&quot;, 1) #record Ss lottery choice (int)&amp;#10;        my_loop.addData(&quot;crdm_choice2&quot;, &quot;lott&quot;) #record Ss lottery choice (str)&amp;#10;        if lott_outcome == 1: #winning lottery&amp;#10;            my_loop.addData(&quot;crdm_lott&quot;, 1) #record lottery win (int)&amp;#10;            my_loop.addData(&quot;crdm_lott2&quot;, &quot;win&quot;) #record lottery win (str)&amp;#10;            if crdm_domain == &quot;gain&quot;: #gain domain trial&amp;#10;                if int(crdm_lott_top) != 0: #top side is winner (non-0 means some money was gained)&amp;#10;                    earnings.append((&quot;lott&quot;, crdm_lott_top, crdm_img, crdm_lott_top, crdm_lott_bot, lott_outcome, crdm_nonzero_side, crdm_domain)) #record info for bonus trial&amp;#10;                else: #bottom side is winner&amp;#10;                    earnings.append((&quot;lott&quot;, crdm_lott_bot, crdm_img, crdm_lott_top, crdm_lott_bot, lott_outcome, crdm_nonzero_side, crdm_domain)) #record info for bonus trial&amp;#10;            else: #loss domain trial&amp;#10;                if int(crdm_lott_top) == 0: #top side is winner (0 means no money is lost)&amp;#10;                    earnings.append((&quot;lott&quot;, crdm_lott_top, crdm_img, crdm_lott_top, crdm_lott_bot, lott_outcome, crdm_nonzero_side, crdm_domain)) #record info for bonus trial&amp;#10;                else: #bottom side is winner&amp;#10;                    earnings.append((&quot;lott&quot;, crdm_lott_bot, crdm_img, crdm_lott_top, crdm_lott_bot, lott_outcome, crdm_nonzero_side, crdm_domain)) #record info for bonus trial&amp;#10;        else: #losing lottery&amp;#10;            my_loop.addData(&quot;crdm_lott&quot;, 0) #record lottery loss (int)&amp;#10;            my_loop.addData(&quot;crdm_lott2&quot;, &quot;lose&quot;) #record lottery loss (win)&amp;#10;            earnings.append((&quot;lott&quot;, 0, crdm_img, crdm_lott_top, crdm_lott_bot, lott_outcome, crdm_nonzero_side, crdm_domain)) #record info for bonus trial" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="crdm_trial_py" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="crdm_trial_img" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$&quot;images/&quot; + crdm_img" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="crdm_trial_img" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="crdm_trial_lott_top" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_trial_lott_top" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(&quot;$&quot;+str(format(crdm_lott_top)))" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_trial_lott_bot" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_trial_lott_bot" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(&quot;$&quot;+str(format(crdm_lott_bot)))" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_trial_sure_amt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_trial_sure_amt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="crdm_sure_pos" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(&quot;$&quot;+str(format(crdm_sure_amt)))" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="GRFX_fix" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="[0,0,0]" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="[0,0,0]" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="GRFX_fix" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(2, 2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="crdm_trial_cue" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-1.0000, 1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, 1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="crdm_trial_cue" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.04, 0.04)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <KeyboardComponent name="crdm_trial_resp" plugin="None">
        <Param val="'1', '2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$crdm_sure_resp" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="crdm_trial_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="crdm_trials_iti">
      <RoutineSettingsComponent name="crdm_trials_iti" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_trials_iti" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="crdm_trials_iti_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="crdm_iti_time = (crdm_iti_list[my_loop.thisIndex] + crdm_delta_time);&amp;#10;if (!(crdm_trials.thisTrialN == undefined) &amp;&amp; (crdm_trials.thisTrialN === 143)) {&amp;#10;    continueRoutine = false;&amp;#10;}" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="crdm_iti_time = crdm_iti_list[my_loop.thisIndex] + crdm_delta_time #variable ITI for non-practice trials&amp;#10;&amp;#10;if crdm_trials.thisTrialN == 143: #final trial (number of trials - 1)&amp;#10;    continueRoutine = False #don't present ITI fixation" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="my_loop.addData(&quot;crdm_delta_time&quot;, crdm_delta_time);&amp;#10;my_loop.addData(&quot;crdm_iti_time&quot;, crdm_iti_time);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="my_loop.addData(&quot;crdm_delta_time&quot;, crdm_delta_time) #record delta time&amp;#10;my_loop.addData(&quot;crdm_iti_time&quot;, crdm_iti_time) #record iti time" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="crdm_trials_iti_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="crdm_trials_iti_poly" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="crdm_trials_iti_poly" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.05, 0.05)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$crdm_iti_time" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="crdm_end">
      <RoutineSettingsComponent name="crdm_end" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_end" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="crdm_end_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="crdm_task_end_text = &quot;&quot;&amp;#10;crdm_space_text = &quot;&quot;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="crdm_task_end_text = &quot;&quot;;&amp;#10;crdm_space_text = &quot;&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;crdm_unique_resps = [];&amp;#10;crdm_unique_count = 0;&amp;#10;for (var i, _pj_c = 0, _pj_a = crdm_task_resps, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    i = _pj_a[_pj_c];&amp;#10;    if ((! _pj.in_es6(i, crdm_unique_resps))) {&amp;#10;        crdm_unique_count += 1;&amp;#10;        crdm_unique_resps.push(i);&amp;#10;    }&amp;#10;}&amp;#10;crdm_task_end_text = &quot;&quot;;&amp;#10;crdm_space_text = &quot;&quot;;&amp;#10;if (((crdm_task_resps.length &lt; 136) || (crdm_conf_resps.length &lt; 136))) {&amp;#10;    if ((crdm_task_resps.length &lt; 136)) {&amp;#10;        crdm_task_end_text = ((&quot;You failed to respond to &quot; + (144 - crdm_task_resps.length).toString()) + &quot; task trials and did not meet the 95% response rate requirement. \n \n The Risk &amp; Ambiguity Task will now close.&quot;);&amp;#10;    }&amp;#10;    if ((crdm_conf_resps.length &lt; 136)) {&amp;#10;        crdm_task_end_text = ((&quot;You failed to respond to both parts of &quot; + (144 - crdm_conf_resps.length).toString()) + &quot; trials and did not meet the 95% response rate requirement. \n \n The Risk &amp; Ambiguity Task will now close.&quot;);&amp;#10;    }&amp;#10;    crdm_space_text = &quot;Press SPACE to end.&quot;;&amp;#10;    exp_proceed = false;&amp;#10;    my_loop.addData(&quot;crdm_subReject1&quot;, &quot;&lt; 95% resp rate&quot;);&amp;#10;    my_loop.addData(&quot;crdm_subReject1_nonresps-task&quot;, (144 - crdm_task_resps.length));&amp;#10;    my_loop.addData(&quot;crdm_subReject1_nonresps-conf&quot;, (144 - crdm_conf_resps.length));&amp;#10;} else {&amp;#10;    if ((crdm_unique_count &lt; 2)) {&amp;#10;        crdm_task_end_text = ((&quot;You provided the same response to all &quot; + crdm_task_resps.length.toString()) + &quot; trials. \n \n You did not follow task instructions. \n \n The Risk &amp; Ambiguity Task will now close.&quot;);&amp;#10;        crdm_space_text = &quot;Press SPACE to end.&quot;;&amp;#10;        exp_proceed = false;&amp;#10;        my_loop.addData(&quot;crdm_subReject2&quot;, &quot;1key response&quot;);&amp;#10;        my_loop.addData(&quot;crdm_subReject2_key&quot;, crdm_task_resps[0]);&amp;#10;    } else {&amp;#10;        crdm_task_end_text = &quot;You have completed the Risk &amp; Ambiguity Task!&quot;;&amp;#10;        crdm_space_text = &quot;Press SPACE to continue.&quot;;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="crdm_unique_resps = []&amp;#10;crdm_unique_count = 0&amp;#10;for i in crdm_task_resps:&amp;#10;    if i not in crdm_unique_resps:&amp;#10;        crdm_unique_count += 1&amp;#10;        crdm_unique_resps.append(i)&amp;#10;&amp;#10;crdm_task_end_text = &quot;&quot;&amp;#10;crdm_space_text = &quot;&quot;&amp;#10;#filter for nonresponses&amp;#10;if len(crdm_task_resps) &lt; 136 or len(crdm_conf_resps) &lt; 136: #95% of 144 CRDM trials&amp;#10;    if len(crdm_task_resps) &lt; 136:&amp;#10;        crdm_task_end_text = &quot;You failed to respond to &quot; + str(144-len(crdm_task_resps)) + &quot; task trials and did not meet the 95% response rate requirement. \n \n The Risk &amp; Ambiguity Task will now close.&quot;&amp;#10;    if len(crdm_conf_resps) &lt; 136:&amp;#10;        crdm_task_end_text = &quot;You failed to respond to both parts of &quot; + str(144-len(crdm_conf_resps)) + &quot; trials and did not meet the 95% response rate requirement. \n \n The Risk &amp; Ambiguity Task will now close.&quot;&amp;#10;    crdm_space_text = &quot;Press SPACE to end.&quot;&amp;#10;    exp_proceed = False&amp;#10;    my_loop.addData(&quot;crdm_subReject1&quot;, &quot;&lt; 95% resp rate&quot;)&amp;#10;    my_loop.addData(&quot;crdm_subReject1_nonresps-task&quot;, 144-len(crdm_task_resps))&amp;#10;    my_loop.addData(&quot;crdm_subReject1_nonresps-conf&quot;, 144-len(crdm_conf_resps))&amp;#10;#filter for single-button responses&amp;#10;elif crdm_unique_count &lt; 2: #same for each exp&amp;#10;    crdm_task_end_text = &quot;You provided the same response to all &quot; + str(len(crdm_task_resps)) + &quot; trials. \n \n You did not follow task instructions. \n \n The Risk &amp; Ambiguity Task will now close.&quot;&amp;#10;    crdm_space_text = &quot;Press SPACE to end.&quot;&amp;#10;    exp_proceed = False&amp;#10;    my_loop.addData(&quot;crdm_subReject2&quot;, &quot;1key response&quot;)&amp;#10;    my_loop.addData(&quot;crdm_subReject2_key&quot;, crdm_task_resps[0])&amp;#10;#filter for poor performance on CRDM catch trials (10/20 catch trials -- 0.097% of random success on 10 trials)&amp;#10;#elif sum(crdm_catch_trials) &lt; 10: &amp;#10;    #crdm_task_end_text = &quot;Your performance on the previous trial block demonstrates you did not follow task instructions. \n \n The Risk &amp; Ambiguity Task will now close.&quot;&amp;#10;    #crdm_space_text = &quot;Press SPACE to end.&quot;&amp;#10;    #exp_proceed = False&amp;#10;    #my_loop.addData(&quot;crdm_subReject3&quot;, &quot;catch fail&quot;)&amp;#10;    #my_loop.addData(&quot;crdm_subReject3_fails&quot;, 20-sum(crdm_catch_trials))&amp;#10;#all CRDM task trial criterion are met&amp;#10;else:&amp;#10;    crdm_task_end_text = &quot;You have completed the Risk &amp; Ambiguity Task!&quot;&amp;#10;    crdm_space_text = &quot;Press SPACE to continue.&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="crdm_end_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="crdm_end_title_txt" plugin="None">
        <Param val="0.7098, 0.2941, -0.7490" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_end_title_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="* Risk &amp; Ambiguity Task *" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_end_txt_ON" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_end_txt_ON" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$crdm_task_end_text" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.35" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_end_space_ON" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_end_space_ON" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$crdm_space_text" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_end_txt_OFF" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_end_txt_OFF" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="You have completed the Risky &amp; Ambiguity Task!" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.35" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_end_space_OFF" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_end_space_OFF" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press SPACE to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="crdm_end_resp" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="crdm_end_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="crdm_term_check">
      <RoutineSettingsComponent name="crdm_term_check" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_term_check" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <UnknownComponent name="crdm_term_check_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_term_check_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </UnknownComponent>
      <UnknownComponent name="crdm_term_check_3" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_term_check_3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </UnknownComponent>
      <CodeComponent name="crdm_term_check_py" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((exp_proceed === false)) {&amp;#10;    psychoJS.quit();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if exp_proceed == False:&amp;#10;    core.quit()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="crdm_term_check_py" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="crdm_pract1_feedback">
      <RoutineSettingsComponent name="crdm_pract1_feedback" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_pract1_feedback" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="crdm_pract1_feedback_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((crdm_pract1_key === undefined)) {&amp;#10;    crdm_msg1 = &quot;NO RESPONSE&quot;;&amp;#10;} else {&amp;#10;    if (crdm_pract1_sure_key) {&amp;#10;        crdm_msg1 = (&quot;CERTAIN $&quot; + format(crdm_sure_amt1.toString()));&amp;#10;    } else {&amp;#10;        crdm_msg1 = &quot;LOTTERY&quot;;&amp;#10;    }&amp;#10;}" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if len(crdm_pract1_key) == 0: #Ss did not respond&amp;#10;    crdm_msg1 = &quot;NO RESPONSE&quot;&amp;#10;elif crdm_pract1_sure_key: #Ss chose sure amt&amp;#10;    crdm_msg1 = &quot;CERTAIN $&quot; + str(format(crdm_sure_amt1))&amp;#10;else: #Ss chose lottery&amp;#10;    crdm_msg1 = &quot;LOTTERY&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="crdm_pract1_feedback_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="crdm_pract1_feedback_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_pract1_feedback_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$crdm_msg1" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="crdm_pract_init_fix">
      <RoutineSettingsComponent name="crdm_pract_init_fix" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_pract_init_fix" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <PolygonComponent name="crdm_pract_init_fix_poly" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="crdm_pract_init_fix_poly" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.05, 0.05)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="crdm_questplus">
      <RoutineSettingsComponent name="crdm_questplus" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_questplus" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="crdm_questplus_JS" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="#position of certain amount option&amp;#10;sure_pos = [] &amp;#10;sure_resp = []&amp;#10;crdm_msg = &quot;&quot;&amp;#10;&amp;#10;#stimuli positions and respective responses&amp;#10;pos = [[-0.5, 0], [0.5, 0]] #left/right screen locations&amp;#10;resp = [&quot;1&quot;, &quot;2&quot;] #1 = left, 2 = right" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="crdm_sure_pos_qp = [];&amp;#10;crdm_sure_resp_qp = [];&amp;#10;crdm_msg_qp = &quot;&quot;;&amp;#10;crdm_pos_qp = [[(- 0.5), 0], [0.5, 0]];&amp;#10;crdm_resp_qp = [&quot;1&quot;, &quot;2&quot;];&amp;#10;&amp;#10;weighted_avg = function(q) {&amp;#10;    var fits = [];&amp;#10;    var weight = 0;&amp;#10;    // q.param_domain, q.posterior&amp;#10;    var i, l;&amp;#10;    l = q.param_domain[0].length;&amp;#10;    while (fits.length &lt; l) {&amp;#10;        fits.push(0);&amp;#10;    }&amp;#10;    for (i = 0; i &lt; q.posterior.length; i++) {&amp;#10;        for (l = 0; l &lt; fits.length; l++) {&amp;#10;            fits[l] += q.param_domain[i][l] * q.posterior[i];&amp;#10;        }&amp;#10;        weight += q.posterior[i];&amp;#10;    }&amp;#10;    for (l = 0; l &lt; fits.length; l++) {&amp;#10;        fits[l] /= weight;&amp;#10;    }&amp;#10;    return fits;&amp;#10;}&amp;#10;&amp;#10;// Sqrt(sum(w * (x - wm)^2) / sum(w))&amp;#10;weighted_sd = function(q) {&amp;#10;    var fits = [];&amp;#10;    var weight = 0;&amp;#10;    var i, l;&amp;#10;    var wm = weighted_avg(q);&amp;#10;    l = q.param_domain[0].length;&amp;#10;    while (fits.length &lt; l) {&amp;#10;        fits.push(0);&amp;#10;    }&amp;#10;    for (i = 0; i &lt; q.posterior.length; i++) {&amp;#10;        for (l = 0; l &lt; fits.length; l++) {&amp;#10;            fits[l] += q.posterior[i] * Math.pow((q.param_domain[i][l] - wm[l]), 2);&amp;#10;        }&amp;#10;        weight += q.posterior[i];&amp;#10;    }&amp;#10;    for (l = 0; l &lt; fits.length; l++) {&amp;#10;        fits[l] /= weight;&amp;#10;        fits[l] = Math.sqrt(fits[l])&amp;#10;    }&amp;#10;    return fits;&amp;#10;}&amp;#10;&amp;#10;crdm_value_space = [5, 8, 20, 40, 50];&amp;#10;crdm_ambiguity_space = [0, 0.24, 0.5, 0.74];&amp;#10;crdm_probability_space = [0.13, 0.25, 0.38, 0.5, 0.75];&amp;#10;crdm_value_certain = 5;&amp;#10;&amp;#10;// parameter space &amp;#10;crdm_alpha_space = arange_round(0.1, 3.1, 0.1);&amp;#10;crdm_beta_space =  arange_round(-1.3, 1.31, 0.1);&amp;#10;crdm_gamma_space =  arange_round(0.5, 5.1, 0.5);&amp;#10;&amp;#10;crdm_i = 0;&amp;#10;crdm_j = 0;&amp;#10;crdm_k = 0;&amp;#10;crdm_stim_space = []; // set for gain domain&amp;#10;for (crdm_i = 0; crdm_i &lt; crdm_value_space.length; crdm_i++) {&amp;#10;    for (crdm_j = 0; crdm_j &lt; crdm_ambiguity_space.length; crdm_j++) {&amp;#10;        for (crdm_k = 0; crdm_k &lt; crdm_probability_space.length; crdm_k++) {&amp;#10;            if (!crdm_ambiguity_space[crdm_j] || crdm_probability_space[crdm_k] == 0.5) {&amp;#10;                crdm_stim_space.push([crdm_value_space[crdm_i], crdm_ambiguity_space[crdm_j], crdm_probability_space[crdm_k], crdm_value_certain]);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;crdm_gain_stim_space = crdm_stim_space;&amp;#10;&amp;#10;crdm_stim_space = []; // reset for loss domain&amp;#10;for (crdm_i = 0; crdm_i &lt; crdm_value_space.length; crdm_i++) {&amp;#10;    for (crdm_j = 0; crdm_j &lt; crdm_ambiguity_space.length; crdm_j++) {&amp;#10;        for (crdm_k = 0; crdm_k &lt; crdm_probability_space.length; crdm_k++) {&amp;#10;            if (!crdm_ambiguity_space[crdm_j] || crdm_probability_space[crdm_k] == 0.5) {&amp;#10;                crdm_stim_space.push([-crdm_value_space[crdm_i], crdm_ambiguity_space[crdm_j], crdm_probability_space[crdm_k], -crdm_value_certain]);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;crdm_loss_stim_space = crdm_stim_space;&amp;#10;&amp;#10;crdm_params = [crdm_alpha_space, crdm_beta_space, crdm_gamma_space];&amp;#10;crdm_response = true;&amp;#10;&amp;#10;// risk and ambiguity model&amp;#10;function SV_option_RA(stimulus_values, params) {&amp;#10;    var prob;&amp;#10;    var objective_value = stimulus_values[0];&amp;#10;    var ambiguity = stimulus_values[1];&amp;#10;    var probability = stimulus_values[2];&amp;#10;    var value_certain = stimulus_values[3];&amp;#10;    var alpha_subject_risk_aversion = params[0];&amp;#10;    var beta_ambiguity_aversion = params[1];&amp;#10;    var sv_reward, sv_null, tmp;&amp;#10;    sv_reward = Math.sign(objective_value) * (probability - beta_ambiguity_aversion * (ambiguity/2)) * Math.pow(Math.abs(objective_value), alpha_subject_risk_aversion);&amp;#10;    sv_null = Math.sign(objective_value) * Math.pow(Math.abs(value_certain), alpha_subject_risk_aversion);&amp;#10;    var gamma = params[2];&amp;#10;    prob = 1. / (1 + Math.exp(-gamma * (sv_reward - sv_null)));&amp;#10;    return prob;&amp;#10;}&amp;#10;&amp;#10;// subjective value decision&amp;#10;function draw_from(stimulus_value, params, func) {&amp;#10;    var prob = func(stimulus_value, params);&amp;#10;    if (Math.random() &lt; prob)&amp;#10;        return 1;&amp;#10;    else&amp;#10;        return 0;&amp;#10;}&amp;#10;&amp;#10;// # uses contrast_idx instead of contrast for efficiency&amp;#10;crdm_contrast_idx_gain = parseInt(Math.random() * crdm_stim_space.length);&amp;#10;crdm_contrast_idx_loss = parseInt(Math.random() * crdm_stim_space.length);&amp;#10;&amp;#10;crdm_func = SV_option_RA;&amp;#10;crdm_q_gain = new QuestPlus(crdm_stim_space, crdm_params, crdm_func);&amp;#10;crdm_q_loss = new QuestPlus(crdm_stim_space, crdm_params, crdm_func);" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="my_loop = eval(crdm_questplus_loop_name);&amp;#10;crdm_idx_qp = random.randint(0, 1);&amp;#10;crdm_sure_pos_qp = crdm_pos_qp[crdm_idx_qp];&amp;#10;crdm_sure_resp_qp = crdm_resp_qp[crdm_idx_qp];&amp;#10;&amp;#10;if (crdm_domain_type == 'gain') { //GAINS - get ambiguity, probability, and lott top &amp; bottom&amp;#10;    crdm_sure_amt_qp = crdm_gain_stim_space[crdm_contrast_idx_gain][3];&amp;#10;    crdm_ambiguity = crdm_gain_stim_space[crdm_contrast_idx_gain][1];&amp;#10;    if (!crdm_ambiguity) {&amp;#10;        crdm_probability = crdm_gain_stim_space[crdm_contrast_idx_gain][2];&amp;#10;    } else {&amp;#10;        crdm_probability = 0.5;&amp;#10;    }&amp;#10;    if (crdm_nonzero_side == 'top') {&amp;#10;        crdm_lott_top_qp = crdm_gain_stim_space[crdm_contrast_idx_gain][0];&amp;#10;        crdm_lott_bot_qp = 0;&amp;#10;    } else {&amp;#10;        crdm_lott_top_qp = 0;&amp;#10;        crdm_lott_bot_qp = crdm_gain_stim_space[crdm_contrast_idx_gain][0];&amp;#10;    }&amp;#10;} else { //LOSSES - get ambiguity, probability, and lott top &amp; bottom&amp;#10;    crdm_sure_amt_qp = crdm_loss_stim_space[crdm_contrast_idx_loss][3];&amp;#10;    crdm_ambiguity = crdm_loss_stim_space[crdm_contrast_idx_loss][1];&amp;#10;    if (!crdm_ambiguity) {&amp;#10;        crdm_probability = crdm_loss_stim_space[crdm_contrast_idx_loss][2];&amp;#10;    } else {&amp;#10;        crdm_probability = 0.5;&amp;#10;    }&amp;#10;    if (crdm_nonzero_side == 'top') {&amp;#10;        crdm_lott_top_qp = crdm_loss_stim_space[crdm_contrast_idx_loss][0];&amp;#10;        crdm_lott_bot_qp = 0;&amp;#10;    } else {&amp;#10;        crdm_lott_top_qp = 0;&amp;#10;        crdm_lott_bot_qp = crdm_loss_stim_space[crdm_contrast_idx_loss][0];&amp;#10;    }&amp;#10;}&amp;#10;&amp;#10;if (crdm_ambiguity) { //set current image&amp;#10;    crdm_img_qp = 'ambig_' + parseInt(crdm_ambiguity * 100) + '.bmp';&amp;#10;} else {&amp;#10;    if (crdm_lott_top_qp != 0) {&amp;#10;        crdm_img_qp = 'risk_red_' + parseInt(crdm_probability * 100) + '.bmp'&amp;#10;    } else {&amp;#10;        crdm_img_qp = 'risk_blue_' + parseInt(crdm_probability * 100) + '.bmp'&amp;#10;    }&amp;#10;}" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="my_loop = eval(&quot;questplus_trials&quot;)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="crdm_qp_key = crdm_questplus_trial_resp.keys;&amp;#10;crdm_qp_sure_key = crdm_questplus_trial_resp.corr;&amp;#10;&amp;#10;crdm_response = !crdm_qp_sure_key;&amp;#10;if (crdm_domain_type == 'gain'){&amp;#10;    // update posterior&amp;#10;    crdm_q_gain.update(crdm_contrast_idx_gain, crdm_response);&amp;#10;    // find next contrast index&amp;#10;    crdm_contrast_idx_gain = crdm_q_gain.next_contrast();&amp;#10;    crdm_post_mean = weighted_avg(crdm_q_gain);&amp;#10;    crdm_post_sd = weighted_sd(crdm_q_gain);&amp;#10;} else {&amp;#10;    crdm_q_loss.update(crdm_contrast_idx_loss, crdm_response);&amp;#10;    crdm_contrast_idx_loss = crdm_q_loss.next_contrast();&amp;#10;    crdm_post_mean = weighted_avg(crdm_q_loss);&amp;#10;    crdm_post_sd = weighted_sd(crdm_q_loss);&amp;#10;}&amp;#10;&amp;#10;my_loop.addData(&quot;crdm_trial_type&quot;, &quot;questplus&quot;);&amp;#10;my_loop.addData(&quot;crdm_response&quot;, crdm_response);&amp;#10;my_loop.addData(&quot;crdm_mean_alpha&quot;, crdm_post_mean[0]);&amp;#10;my_loop.addData(&quot;crdm_mean_beta&quot;, crdm_post_mean[1]);&amp;#10;my_loop.addData(&quot;crdm_mean_gamma&quot;, crdm_post_mean[2]);&amp;#10;my_loop.addData(&quot;crdm_sd_alpha&quot;, crdm_post_sd[0]); &amp;#10;my_loop.addData(&quot;crdm_sd_beta&quot;, crdm_post_sd[1]);&amp;#10;my_loop.addData(&quot;crdm_sd_gamma&quot;, crdm_post_sd[2]);&amp;#10;my_loop.addData(&quot;crdm_lott_reward&quot;, crdm_lott_top_qp + crdm_lott_bot_qp);&amp;#10;my_loop.addData(&quot;crdm_lott_prob&quot;, Number.parseInt((crdm_probability * 100)));&amp;#10;my_loop.addData(&quot;crdm_ambig_level&quot;, Number.parseInt((crdm_ambiguity * 100)));" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="qp_key = crdm_questplus_trial_resp.keys&amp;#10;qp_sure_key = crdm_questplus_trial_resp.corr&amp;#10;my_loop.addData(&quot;crdm_trial_type&quot;, &quot;questplus&quot;)&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;my_loop.addData(&quot;response&quot;, cur_response)&amp;#10;my_loop.addData('mean_alpha', post_mean[0])&amp;#10;my_loop.addData('mean_beta', post_mean[1])&amp;#10;my_loop.addData('mean_gamma', post_mean[2])&amp;#10;my_loop.addData('sd_alpha', post_sd[0])&amp;#10;my_loop.addData('sd_beta', post_sd[1])&amp;#10;my_loop.addData('sd_gamma', post_sd[2])&amp;#10;my_loop.addData(&quot;lott_reward&quot;, cur_design[&quot;value_reward&quot;])&amp;#10;my_loop.addData(&quot;lott_prob&quot;, int(cur_design[&quot;p_reward&quot;]*100))&amp;#10;my_loop.addData(&quot;ambig_level&quot;, int(cur_design[&quot;amb_level&quot;]*100))" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="crdm_questplus_JS" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="crdm_questplus_py" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="#position of certain amount option&amp;#10;sure_pos = [] &amp;#10;sure_resp = []&amp;#10;crdm_msg = &quot;&quot;&amp;#10;&amp;#10;#stimuli positions and respective responses&amp;#10;pos = [[-0.5, 0], [0.5, 0]] #left/right screen locations&amp;#10;resp = [&quot;1&quot;, &quot;2&quot;] #1 = left, 2 = right" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="sure_pos = [];&amp;#10;sure_resp = [];&amp;#10;crdm_msg = &quot;&quot;;&amp;#10;pos = [[(- 0.5), 0], [0.5, 0]];&amp;#10;resp = [&quot;1&quot;, &quot;2&quot;];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="my_loop = eval(practice_loop_name);&amp;#10;idx = random.randint(0, 1);&amp;#10;sure_pos = pos[idx];&amp;#10;sure_resp = resp[idx];&amp;#10;sure_amt = 5;&amp;#10;if ((idx === 0)) {&amp;#10;    lott_pos = pos[1];&amp;#10;} else {&amp;#10;    lott_pos = pos[0];&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="my_loop = eval(&quot;questplus_trials&quot;)&amp;#10;&amp;#10;#random index for certain outcome position and response&amp;#10;idx = random.randint(0,1) &amp;#10;sure_pos = pos[idx] &amp;#10;sure_resp = resp[idx]&amp;#10;ado_lott_top = &quot;&quot;&amp;#10;ado_lott_bot = &quot;&quot;&amp;#10;ado_img = &quot;&quot;&amp;#10;&amp;#10;#setting important parameters based on domain (gain/loss)&amp;#10;if trial_type == &quot;gain&quot;:&amp;#10;    log_lik, ent, log_post, sets = g_log_lik, g_ent, g_log_post, g_sets&amp;#10;    mutual_info = rg.get_MI(log_lik, ent, log_post) #ricardo_gain.py&amp;#10;else: #losses&amp;#10;    log_lik, ent, log_post, sets = l_log_lik, l_ent, l_log_post, l_sets&amp;#10;    mutual_info = rl.get_MI(log_lik, ent, log_post) #ricardo_loss.py&amp;#10;    &amp;#10;&amp;#10;# GET_DESIGN based on maximum Mutual Information&amp;#10;idx_design = np.argmax(mutual_info)&amp;#10;cur_design = sets.choice.iloc[idx_design].to_dict()&amp;#10;&amp;#10;if nonzero_side == &quot;top&quot;: #red side of lotto&amp;#10;    ado_lott_top = cur_design[&quot;value_reward&quot;] #nonzero value on top (red)&amp;#10;    ado_lott_bot = 0&amp;#10;    if cur_design[&quot;amb_level&quot;] == 0: #risk trial&amp;#10;        ado_img = &quot;risk_red_{0}.bmp&quot;.format(int(cur_design[&quot;p_reward&quot;]*100))&amp;#10;    else: #ambiguity trial&amp;#10;        ado_img = &quot;ambig_{0}.bmp&quot;.format(int(cur_design[&quot;amb_level&quot;]*100))&amp;#10;else: #blue side of lotto&amp;#10;    ado_lott_top = 0&amp;#10;    ado_lott_bot = cur_design[&quot;value_reward&quot;] #nonzero value on bottom (blue)&amp;#10;    if cur_design[&quot;amb_level&quot;] == 0: #risk trial&amp;#10;        ado_img = &quot;risk_blue_{0}.bmp&quot;.format(int(cur_design[&quot;p_reward&quot;]*100))&amp;#10;    else: #ambiguity trial&amp;#10;        ado_img = &quot;ambig_{0}.bmp&quot;.format(int(cur_design[&quot;amb_level&quot;]*100))&amp;#10;ado_sure_amt = cur_design[&quot;value_null&quot;] #sure amount" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="key = crdm_pract_trial_resp.keys;&amp;#10;sure_key = crdm_pract_trial_resp.corr;&amp;#10;my_loop.addData(&quot;crdm_trial_type&quot;, &quot;practice&quot;);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="qp_key = crdm_questplus_trial_resp.keys&amp;#10;qp_sure_key = crdm_questplus_trial_resp.corr&amp;#10;my_loop.addData(&quot;crdm_trial_type&quot;, &quot;questplus&quot;)&amp;#10;&amp;#10;cur_response = not qp_sure_key #flips .corr convention&amp;#10;if trial_type == &quot;gain&quot;: #gain -- ricardo_gain.py&amp;#10;    mutual_info, log_post = rg.update_MI(sets.choice, sets.response, cur_design, cur_response, log_lik, ent, log_post)&amp;#10;    post_mean = rg.get_post_mean(np.exp(log_post), sets.param)&amp;#10;    post_sd = rg.get_post_sd(np.exp(log_post), sets.param)&amp;#10;    g_log_lik, g_ent, g_log_post, g_sets = log_lik, ent, log_post, sets&amp;#10;else: #loss -- ricardo_loss.py&amp;#10;    mutual_info, log_post = rl.update_MI(sets.choice, sets.response, cur_design, cur_response, log_lik, ent, log_post)&amp;#10;    post_mean = rl.get_post_mean(np.exp(log_post), sets.param)&amp;#10;    post_sd = rl.get_post_sd(np.exp(log_post), sets.param)&amp;#10;    l_log_lik, l_ent, l_log_post, l_sets = log_lik, ent, log_post, sets&amp;#10;&amp;#10;my_loop.addData(&quot;response&quot;, cur_response)&amp;#10;my_loop.addData('mean_alpha', post_mean[0])&amp;#10;my_loop.addData('mean_beta', post_mean[1])&amp;#10;my_loop.addData('mean_gamma', post_mean[2])&amp;#10;my_loop.addData('sd_alpha', post_sd[0])&amp;#10;my_loop.addData('sd_beta', post_sd[1])&amp;#10;my_loop.addData('sd_gamma', post_sd[2])&amp;#10;my_loop.addData(&quot;lott_reward&quot;, cur_design[&quot;value_reward&quot;])&amp;#10;my_loop.addData(&quot;lott_prob&quot;, int(cur_design[&quot;p_reward&quot;]*100))&amp;#10;my_loop.addData(&quot;ambig_level&quot;, int(cur_design[&quot;amb_level&quot;]*100))" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="crdm_questplus_py" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="crdm_questplus_img" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$&quot;images/&quot; + crdm_img_qp" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="crdm_questplus_img" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="crdm_questplus_trial_lott_top_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_questplus_trial_lott_top_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(&quot;$&quot;+str(format(crdm_lott_top_qp)))" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_questplus_trial_lott_bot_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_questplus_trial_lott_bot_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(&quot;$&quot;+str(format(crdm_lott_bot_qp)))" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_questplus_trial_sure_amt_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_questplus_trial_sure_amt_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="crdm_sure_pos_qp" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(&quot;$&quot;+str(format(crdm_sure_amt_qp)))&amp;#10;" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="GRFX_fix3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="[0,0,0]" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="[0,0,0]" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="GRFX_fix3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(2, 2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="crdm_questplus_trial_cue" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-1.0000, 1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, 1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="crdm_questplus_trial_cue" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.04, 0.04)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <KeyboardComponent name="crdm_questplus_trial_resp" plugin="None">
        <Param val="'1', '2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$crdm_sure_resp_qp" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="crdm_questplus_trial_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="crdm_qp_feedback">
      <RoutineSettingsComponent name="crdm_qp_feedback" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_qp_feedback" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="crdm_qp_FB_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((crdm_qp_key === undefined)) {&amp;#10;    crdm_msg_qp = &quot;NO RESPONSE&quot;;&amp;#10;} else {&amp;#10;    if (crdm_qp_sure_key) {&amp;#10;        crdm_msg_qp  = (&quot;CERTAIN $&quot; + format(crdm_sure_amt_qp.toString()));&amp;#10;    } else {&amp;#10;        crdm_msg_qp  = &quot;LOTTERY&quot;;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if len(crdm_qp_key) == 0: #Ss did not respond&amp;#10;    crdm_msg_qp  = &quot;NO RESPONSE&quot;&amp;#10;elif crdm_qp_sure_key: #Ss chose sure amt&amp;#10;    crdm_msg_qp  = &quot;CERTAIN $&quot; + str(format(cur_design[&quot;value_null&quot;]))&amp;#10;else: #Ss chose lottery&amp;#10;    crdm_msg_qp  = &quot;LOTTERY&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="crdm_qp_FB_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="crdm_qp_FB_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_qp_FB_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$crdm_msg_qp" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="crdm_qp_instr">
      <RoutineSettingsComponent name="crdm_qp_instr" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_qp_instr" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="crdm_qp_instr_title_txt" plugin="None">
        <Param val="0.7098, 0.2941, -0.7490" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_qp_instr_title_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="* Risk &amp; Ambiguity Task *" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_qp_instr_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_qp_instr_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Now that you've practiced, we'll begin the first section of the task.&amp;#10;&amp;#10;You will have 3 seconds to consider and 2 seconds to respond for each trial. Please make your choice when the green circle appears on the screen. " valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.25" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_qp_instr_space_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_qp_instr_space_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press SPACE to begin." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="crdm_qp_instr_resp" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="crdm_qp_instr_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="crdm_pract2_instr">
      <RoutineSettingsComponent name="crdm_pract2_instr" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_pract2_instr" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="crdm_pract2_instr_name_txt" plugin="None">
        <Param val="0.7098, 0.2941, -0.7490" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_pract2_instr_name_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="* Risk &amp; Ambiguity Task *" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_pract2_instr_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_pract2_instr_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="In this second section, you will now be asked to provide a confidence rating after your choice.&amp;#10;&amp;#10;When the green circle appears, indicate your decision by pressing YELLOW for the left option and GREEN for the right option. Next, you will rate your choice confidence. Please be sure to answer both the task and confidence questions!&amp;#10;&amp;#10;Let's practice!" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.25" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_pract2_instr_space_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_pract2_instr_space_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press SPACE to begin." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="crdm_pract2_instr_key" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="crdm_pract2_instr_key" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="crdm_pract1_trial">
      <RoutineSettingsComponent name="crdm_pract1_trial" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_pract1_trial" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="crdm_pract1_trial_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="#position of certain amount option&amp;#10;crdm_sure_pos1 = [] &amp;#10;crdm_sure_resp1 = []&amp;#10;crdm_crdm_msg1 = &quot;&quot;&amp;#10;&amp;#10;#stimuli positions and respective responses&amp;#10;#left/right screen locations&amp;#10;crdm_pos1 = [[-0.5, 0], [0.5, 0]] &amp;#10;crdm_resp1 = [&quot;1&quot;, &quot;2&quot;] #1 = left, 2 = right" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="crdm_sure_pos1 = [];&amp;#10;crdm_sure_resp1 = [];&amp;#10;crdm_msg1 = &quot;&quot;;&amp;#10;crdm_pos1 = [[(- 0.5), 0], [0.5, 0]];&amp;#10;crdm_resp1 = [&quot;1&quot;, &quot;2&quot;];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="my_loop = eval(crdm_practice_loop1_name);&amp;#10;&amp;#10;crdm_idx1 = random.randint(0, 1);&amp;#10;crdm_sure_pos1 = crdm_pos1[crdm_idx1];&amp;#10;crdm_sure_resp1 = crdm_resp1[crdm_idx1];" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="my_loop = eval(crdm_practice_loop1_name)&amp;#10;&amp;#10;#random index for certain outcome position and response&amp;#10;crdm_idx1 = random.randint(0,1) &amp;#10;crdm_sure_pos1 = crdm_pos1[crdm_idx1] &amp;#10;crdm_sure_resp1 = crdm_resp1[crdm_idx1]" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="crdm_pract1_key = crdm_pract1_trial_resp.keys;&amp;#10;crdm_pract1_sure_key = crdm_pract1_trial_resp.corr;&amp;#10;my_loop.addData(&quot;crdm_trial_type&quot;, &quot;practice1&quot;);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="crdm_pract1_key = crdm_pract1_trial_resp.keys&amp;#10;crdm_pract1_sure_key = crdm_pract1_trial_resp.corr&amp;#10;&amp;#10;my_loop.addData(&quot;crdm_trial_type&quot;, &quot;practice1&quot;)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="crdm_pract1_trial_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="crdm_pract1_trial_img" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$&quot;images/&quot; + crdm_img1" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="crdm_pract1_trial_img" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="crdm_pract1_trial_lott_top_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_pract1_trial_lott_top_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(&quot;$&quot;+str(format(crdm_lott_top1)))" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_pract1_trial_lott_bot_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_pract1_trial_lott_bot_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(&quot;$&quot;+str(format(crdm_lott_bot1)))" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_pract1_trial_sure_amt_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_pract1_trial_sure_amt_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="crdm_sure_pos1" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(&quot;$&quot;+str(format(crdm_sure_amt1)))&amp;#10;" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="GRFX_fix4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="[0,0,0]" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="[0,0,0]" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="GRFX_fix4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(2, 2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="crdm_pract1_trial_cue" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-1.0000, 1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, 1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="crdm_pract1_trial_cue" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.04, 0.04)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <KeyboardComponent name="crdm_pract1_trial_resp" plugin="None">
        <Param val="'1', '2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$crdm_sure_resp1" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="crdm_pract1_trial_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="BPET_setup">
      <RoutineSettingsComponent name="BPET_setup" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="BPET_setup" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="BP_start" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="import serial&amp;#10;ser = serial.Serial(&quot;COM5&quot;, 115200, timeout=1) #define serial port&amp;#10;ser.write(&quot;RR&quot;.encode()) #clear serial port&amp;#10;ser.write(&quot;02&quot;.encode()) #begin BIOPAC recording at start of experiment" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="BP_start" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="ET_start" plugin="None">
        <Param val="import os&amp;#10;import platform&amp;#10;import pylink&amp;#10;import random&amp;#10;import sys&amp;#10;import time&amp;#10;import numpy as np&amp;#10;from numpy import (sin, cos, tan, log, log10, pi, average,&amp;#10;                   sqrt, std, deg2rad, rad2deg, linspace, asarray)&amp;#10;#from numpy.random import random, randint, normal, shuffle, choice as randchoice&amp;#10;from psychopy import locale_setup&amp;#10;from psychopy import prefs&amp;#10;from psychopy import clock, colors, core, data, event, gui, layout, logging, monitors, sound, visual&amp;#10;from psychopy.constants import (NOT_STARTED, STARTED, PLAYING, PAUSED,&amp;#10;                                STOPPED, FINISHED, PRESSED, RELEASED, FOREVER)&amp;#10;from psychopy.hardware import keyboard&amp;#10;from EyeLinkCoreGraphicsPsychoPy import EyeLinkCoreGraphicsPsychoPy&amp;#10;from PIL import Image  # for preparing Host backdrop image&amp;#10;from string import ascii_letters, digits&amp;#10;&amp;#10;# Set to True to run task in full screen mode&amp;#10;# Easier to debug script in non-full screen mode&amp;#10;full_screen = True" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="var earnings;&amp;#10;earnings = [];&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="class WrapTest(object):&amp;#10;    def __init__(self, el_tracker):&amp;#10;        self.msg = False&amp;#10;        self.el_tracker = el_tracker&amp;#10;    &amp;#10;    def eyetrack_flip(self, func):&amp;#10;        def wrap():&amp;#10;            func()&amp;#10;            if self.msg:&amp;#10;                self.el_tracker.sendMessage('image_onset')&amp;#10;                self.msg = False&amp;#10;        return wrap&amp;#10;&amp;#10;# Set up EDF data file name and local data folder&amp;#10;#&amp;#10;# EDF data filename should not exceed 8 alphanumeric characters&amp;#10;# Use ONLY number 0-9, letters, &amp; _ (underscore) in filename&amp;#10;edf_fname = '{0}'.format(expInfo[&quot;participant&quot;])&amp;#10;&amp;#10;# Prompt user to specify an EDF data filename&amp;#10;# before opening fullscreen window&amp;#10;dlg_title = 'Enter EDF File Name'&amp;#10;dlg_prompt = 'Please enter a file name with 8 or fewer characters\n' + \&amp;#10;             '[letters, numbers, and underscore].'&amp;#10;&amp;#10;# Loop until a valid filename&amp;#10;while True:&amp;#10;    dlg = gui.Dlg(dlg_title)&amp;#10;    dlg.addText(dlg_prompt)&amp;#10;    dlg.addField('File Name:', edf_fname)&amp;#10;    # show dialog and wait for OK or Cancel&amp;#10;    ok_data = dlg.show()&amp;#10;    if dlg.OK:  # if ok_data is not None&amp;#10;        print('EDF data filename: {}'.format(ok_data[0]))&amp;#10;    else:&amp;#10;        print('user cancelled')&amp;#10;        core.quit()&amp;#10;        sys.exit()&amp;#10;&amp;#10;    # get string entered by experimenter&amp;#10;    tmp_str = dlg.data[0]&amp;#10;    # strip trailing characters, ignore &quot;.edf&quot; extension&amp;#10;    edf_fname = tmp_str.rstrip().split('.')[0]&amp;#10;&amp;#10;    # check if filename is valid (length &lt;= 8 &amp; no special char)&amp;#10;    allowed_char = ascii_letters + digits + '_'&amp;#10;    if not all([c in allowed_char for c in edf_fname]):&amp;#10;        print('ERROR: Invalid EDF filename')&amp;#10;    elif len(edf_fname) &gt; 8:&amp;#10;        print('ERROR: EDF filename should not exceed 8 characters')&amp;#10;    else:&amp;#10;        break&amp;#10;&amp;#10;# Set up folder to store EDF data files and associated resources&amp;#10;results_folder = 'results'&amp;#10;if not os.path.exists(results_folder):&amp;#10;    os.makedirs(results_folder)&amp;#10;&amp;#10;# Download EDF data file from EyeLink Host PC to local hard&amp;#10;# drive at end of each testing session, rename EDF to&amp;#10;# include session start date/time&amp;#10;time_str = time.strftime(&quot;_%Y_%m_%d_%H_%M&quot;, time.localtime())&amp;#10;session_identifier = edf_fname + time_str&amp;#10;&amp;#10;# Create a folder for current testing session in &quot;results&quot; folder&amp;#10;session_folder = os.path.join(results_folder, session_identifier)&amp;#10;if not os.path.exists(session_folder):&amp;#10;    os.makedirs(session_folder)&amp;#10;&amp;#10;## Step 1: Connect to EyeLink Host PC ----------------------------&amp;#10;#&amp;#10;# The Host IP address, by default, is &quot;100.1.1.1&quot;.&amp;#10;# &quot;el_tracker&quot; object created can be accessed through Pylink&amp;#10;# Set Host PC address to &quot;None&quot; (without quotes) to run script in &quot;Dummy Mode&quot;&amp;#10;el_tracker = pylink.EyeLink(&quot;100.1.1.1&quot;)&amp;#10;wrapper = WrapTest(el_tracker)&amp;#10;win.flip = wrapper.eyetrack_flip(win.flip)&amp;#10;&amp;#10;## Step 2: Open an EDF data file on Host PC ----------------------------&amp;#10;edf_file = edf_fname + &quot;.EDF&quot;&amp;#10;try:&amp;#10;    el_tracker.openDataFile(edf_file)&amp;#10;except RuntimeError as err:&amp;#10;    print('ERROR:', err)&amp;#10;    # close link if one is open&amp;#10;    if el_tracker.isConnected():&amp;#10;        el_tracker.close()&amp;#10;    core.quit()&amp;#10;    sys.exit()&amp;#10;&amp;#10;# Add header text to EDF file to identify current experiment name&amp;#10;# This is OPTIONAL. If your text starts with &quot;RECORDED BY &quot; it will be&amp;#10;# available in DataViewer's Inspector window by clicking&amp;#10;# EDF session node in the top panel and looking for &quot;Recorded By:&quot;&amp;#10;# field in the bottom panel of Inspector.&amp;#10;preamble_text = 'RECORDED BY %s' % os.path.basename(__file__)&amp;#10;el_tracker.sendCommand(&quot;add_file_preamble_text '%s'&quot; % preamble_text)&amp;#10;&amp;#10;&amp;#10;## Step 3: Configure eye-tracker ----------------------------&amp;#10;#&amp;#10;# Put eye-tracker in offline mode before changing tracking parameters&amp;#10;el_tracker.setOfflineMode()&amp;#10;&amp;#10;# Get software version:  1-EyeLink I, 2-EyeLink II, 3/4-EyeLink 1000,&amp;#10;# 5-EyeLink 1000 Plus, 6-Portable DUO&amp;#10;eyelink_ver = 6  # set version to 0, in case running in Dummy mode&amp;#10;vstr = el_tracker.getTrackerVersionString()&amp;#10;eyelink_ver = int(vstr.split()[-1].split('.')[0])&amp;#10;# print out version info in shell&amp;#10;print('Running experiment on %s, version %d' % (vstr, eyelink_ver))&amp;#10;&amp;#10;# File and Link data control&amp;#10;# Eye events to save in EDF file, include everything by default&amp;#10;file_event_flags = 'LEFT,RIGHT,FIXATION,SACCADE,BLINK,MESSAGE,BUTTON,INPUT'&amp;#10;# Eye events to make available over link, include everything by default&amp;#10;link_event_flags = 'LEFT,RIGHT,FIXATION,SACCADE,BLINK,BUTTON,FIXUPDATE,INPUT'&amp;#10;# Sample data to save in EDF data file and to make available&amp;#10;# over link, include 'HTARGET' flag to save head target sticker&amp;#10;# data for supported eye trackers&amp;#10;if eyelink_ver &gt; 3:&amp;#10;    file_sample_flags = 'LEFT,RIGHT,GAZE,HREF,RAW,AREA,HTARGET,GAZERES,BUTTON,STATUS,INPUT'&amp;#10;    link_sample_flags = 'LEFT,RIGHT,GAZE,GAZERES,AREA,HTARGET,STATUS,INPUT'&amp;#10;else:&amp;#10;    file_sample_flags = 'LEFT,RIGHT,GAZE,HREF,RAW,AREA,GAZERES,BUTTON,STATUS,INPUT'&amp;#10;    link_sample_flags = 'LEFT,RIGHT,GAZE,GAZERES,AREA,STATUS,INPUT'&amp;#10;el_tracker.sendCommand(&quot;file_event_filter = %s&quot; % file_event_flags)&amp;#10;el_tracker.sendCommand(&quot;file_sample_data = %s&quot; % file_sample_flags)&amp;#10;el_tracker.sendCommand(&quot;link_event_filter = %s&quot; % link_event_flags)&amp;#10;el_tracker.sendCommand(&quot;link_sample_data = %s&quot; % link_sample_flags)&amp;#10;&amp;#10;# Choose calibration type: H3, HV3, HV5, HV13 (HV = horizontal/vertical),&amp;#10;el_tracker.sendCommand(&quot;calibration_type = HV9&quot;)&amp;#10;# Set a gamepad button to accept calibration/drift check target&amp;#10;# Needs a supported gamepad/button box connected to Host PC&amp;#10;el_tracker.sendCommand(&quot;button_function 5 'accept_target_fixation'&quot;)&amp;#10;##when running, if issues with win, move to Begin Routine&amp;#10;# Get native screen resolution used by PsychoPy&amp;#10;scn_width, scn_height = win.size&amp;#10;&amp;#10;# Pass display pixel coordinates (left, top, right, bottom) to eye-tracker&amp;#10;# see EyeLink Installation Guide, &quot;Customizing Screen Settings&quot;&amp;#10;el_coords = &quot;screen_pixel_coords = 0 0 %d %d&quot; % (scn_width - 1, scn_height - 1)&amp;#10;el_tracker.sendCommand(el_coords)&amp;#10;&amp;#10;# Write DISPLAY_COORDS message to EDF file&amp;#10;# Data Viewer needs this info for proper visualization, see Data&amp;#10;# Viewer User Manual, &quot;Protocol for EyeLink Data to Viewer Integration&quot;&amp;#10;dv_coords = &quot;DISPLAY_COORDS  0 0 %d %d&quot; % (scn_width - 1, scn_height - 1)&amp;#10;el_tracker.sendMessage(dv_coords)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="exp_proceed = true;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="practice_loop_name = &quot;cpdm_pract_trials&quot;;&amp;#10;loop_name = &quot;cpdm_trials&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="## Configure graphics environment (genv) for tracker calibration&amp;#10;genv = EyeLinkCoreGraphicsPsychoPy(el_tracker, win)&amp;#10;#print(genv)  # print out version number of CoreGraphics library&amp;#10;# Set background and foreground colors for calibration target&amp;#10;# in PsychoPy, (-1, -1, -1)=black, (1, 1, 1)=white, (0, 0, 0)=mid-gray&amp;#10;foreground_color = (-1, -1, -1)&amp;#10;background_color = win.color&amp;#10;genv.setCalibrationColors(foreground_color, background_color)&amp;#10;&amp;#10;## Set up calibration target&amp;#10;#&amp;#10;# Target could be a &quot;circle&quot; (default), &quot;picture&quot;, &quot;movie&quot; clip,&amp;#10;# or rotating &quot;spiral&quot;. To configure type of calibration target, set&amp;#10;# genv.setTargetType to &quot;circle&quot;, &quot;picture&quot;, &quot;movie&quot;, or &quot;spiral&quot;,&amp;#10;#  e.g., genv.setTargetType('picture')&amp;#10;#&amp;#10;# Use gen.setPictureTarget() to set &quot;picture&quot; target&amp;#10;# genv.setPictureTarget(os.path.join('images', 'fixTarget.bmp'))&amp;#10;#&amp;#10;# Use genv.setMovieTarget() to set &quot;movie&quot; target&amp;#10;# genv.setMovieTarget(os.path.join('videos', 'calibVid.mov'))&amp;#10;&amp;#10;# Use picture as calibration target&amp;#10;genv.setTargetType('picture')&amp;#10;genv.setPictureTarget(os.path.join('images', 'fixTarget.bmp'))&amp;#10;&amp;#10;# Configure the size of the calibration target (in pixels)&amp;#10;# this option applies only to &quot;circle&quot; and &quot;spiral&quot; targets&amp;#10;# genv.setTargetSize(24)&amp;#10;&amp;#10;# Beeps to play during calibration, validation and drift correction&amp;#10;# parameters: target, good, error&amp;#10;#     target -- sound to play when target moves&amp;#10;#     good -- sound to play on successful operation&amp;#10;#     error -- sound to play on failure or interruption&amp;#10;# Each parameter could be ''--default sound, 'off'--no sound, or a wav file&amp;#10;genv.setCalibrationSounds('', '', '')&amp;#10;&amp;#10;# Request Pylink to use PsychoPy window opened above for calibration&amp;#10;pylink.openGraphicsEx(genv)&amp;#10;&amp;#10;## Helper functions for trial handling&amp;#10;&amp;#10;def show_msg(win, text, wait_for_keypress=True):&amp;#10;    &quot;&quot;&quot; Show task instructions on screen&quot;&quot;&quot;&amp;#10;    msg = visual.TextStim(win, text,&amp;#10;                          color=genv.getForegroundColor(),&amp;#10;                          wrapWidth=scn_width/2)&amp;#10;    msg.draw()&amp;#10;    win.flip()&amp;#10;    # wait indefinitely, terminates upon any key press&amp;#10;    if wait_for_keypress:&amp;#10;        event.waitKeys()&amp;#10;        #clear_screen(win)&amp;#10;&amp;#10;def retrieve_data():&amp;#10;    &quot;&quot;&quot; Retrieves EDF data file from Host PC&amp;#10;    file_to_retrieve: EDF on Host to download&amp;#10;    win: current window used by experimental script&amp;#10;    &quot;&quot;&quot;&amp;#10;    el_tracker = pylink.getEYELINK()&amp;#10;    if el_tracker.isConnected():&amp;#10;        # Terminate current trial first if task terminated prematurely&amp;#10;        error = el_tracker.isRecording()&amp;#10;        if error == pylink.TRIAL_OK:&amp;#10;            abort_trial()&amp;#10;        # Put tracker in Offline mode&amp;#10;        el_tracker.setOfflineMode()&amp;#10;        # Clear Host PC screen and wait for 500 ms&amp;#10;        el_tracker.sendCommand('clear_screen 0')&amp;#10;        pylink.msecDelay(500)&amp;#10;        # Close EDF data file on Host&amp;#10;        el_tracker.closeDataFile()&amp;#10;        # Show file transfer message onscreen&amp;#10;        msg = 'Transferring data...'&amp;#10;        show_msg(win, msg, wait_for_keypress=False)&amp;#10;        # Download EDF data file from Host PC to local data folder&amp;#10;        # Parameters: source_file_on_the_host, destination_file_on_local_drive&amp;#10;        local_edf = os.path.join(session_folder, session_identifier + '.EDF')&amp;#10;        try:&amp;#10;            el_tracker.receiveDataFile(edf_file, local_edf)&amp;#10;        except RuntimeError as error:&amp;#10;            print('ERROR:', error)&amp;#10;        # Close link to eye-tracker.&amp;#10;        el_tracker.close()&amp;#10;&amp;#10;def abort_trial():&amp;#10;    &quot;&quot;&quot;Ends recording &quot;&quot;&quot;&amp;#10;    el_tracker = pylink.getEYELINK()&amp;#10;    # Stop recording&amp;#10;    if el_tracker.isRecording():&amp;#10;        # add 100 ms to catch final trial events&amp;#10;        pylink.pumpDelay(100)&amp;#10;        el_tracker.stopRecording()&amp;#10;    # Send message to clear Data Viewer screen&amp;#10;    bgcolor_RGB = (116, 116, 116)&amp;#10;    el_tracker.sendMessage('!V CLEAR %d %d %d' % bgcolor_RGB)&amp;#10;    # Send message to mark trial end&amp;#10;    el_tracker.sendMessage('TRIAL_RESULT %d' % pylink.TRIAL_ERROR)&amp;#10;&amp;#10;    return pylink.TRIAL_ERROR&amp;#10;&amp;#10;## Step 5: Set up camera and calibrate eye-tracker ----------------------------&amp;#10;&amp;#10;# Show task instructions&amp;#10;task_msg = 'Press Ctrl-C to if you need to quit the task early\n'&amp;#10;task_msg = task_msg + '\nPress ENTER twice to calibrate tracker'&amp;#10;show_msg(win, task_msg)&amp;#10;&amp;#10;try:&amp;#10;    el_tracker.doTrackerSetup()&amp;#10;except RuntimeError as err:&amp;#10;    print(&quot;Error&quot;, err)&amp;#10;    el_tracker.exitCalibration()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="ET_start" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="BPET_end">
      <RoutineSettingsComponent name="BPET_end" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="BPET_end" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="BP_close" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="ser.close();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="ser.write(&quot;RR&quot;.encode()) #reset all channels&amp;#10;ser.close()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="BP_close" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="ET_close" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="## Step 7: Disconnect Eye Tracker and download EDF file ----------------------------&amp;#10;retrieve_data()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="el_tracker.closeDataFile();&amp;#10;el_tracker.receiveDataFile(&quot;.edf&quot;, &quot;.edf&quot;);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="ET_close" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="crdm_schedule_gen">
      <RoutineSettingsComponent name="crdm_schedule_gen" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_schedule_gen" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="crdm_schedule_gen_JS" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="//# because Pavlovia doesn't auto-convert append or extend to push, &amp;#10;//#  make the same functions work for any javascript array by affecting the prototype&amp;#10;Array.prototype.append = Array.prototype.push&amp;#10;Array.prototype.extend = function(arr){this.push(...arr)};&amp;#10;&amp;#10;//# avoid using the &quot;function name(){}&quot; syntax&amp;#10;//#  to account for Pavlovia's scope problems.&amp;#10;&amp;#10;range = function(start_stop, post_stop, step=1) {&amp;#10;    //# create a list sequence with a starting point, stopping point, and step size&amp;#10;    //#  the step size is assumed 1 if not provided&amp;#10;    //#  the first value is considered the stopping point if the second value is not given,&amp;#10;    //#   in which case the starting point is assumed to be 0.&amp;#10;    //#  post_stop is the non-inclusive end point.&amp;#10;    var arr = [];&amp;#10;    if (post_stop != undefined) {&amp;#10;        for (var i = start_stop; i &lt; post_stop; i += step) {&amp;#10;            arr.push(i);&amp;#10;        }&amp;#10;    } else {&amp;#10;        for (var i = 0; i &lt; start_stop; i += step) {&amp;#10;            arr.push(i);&amp;#10;        }&amp;#10;    }&amp;#10;    return arr;&amp;#10;}&amp;#10;&amp;#10;arange = function(start_stop, post_stop, step=1, rounding=2) {&amp;#10;    //# same as range(), but with rounding built-in&amp;#10;    //# create a list sequence with a starting point, stopping point, and step size&amp;#10;    //#  the step size is assumed 1 if not provided&amp;#10;    //#  the first value is considered the stopping point if the second value is not given,&amp;#10;    //#   in which case the starting point is assumed to be 0.&amp;#10;    //#  post_stop is the non-inclusive end point.&amp;#10;    var arr = [];&amp;#10;    if (post_stop != undefined) {&amp;#10;        if (post_stop &lt; start_stop) {&amp;#10;            for (var i = start_stop; i &gt; post_stop; i += step) {&amp;#10;                arr.push(round(i, rounding))&amp;#10;            } &amp;#10;        } else {&amp;#10;            for (var i = start_stop; i &lt; post_stop; i += step) {&amp;#10;                arr.push(round(i, rounding))&amp;#10;            } &amp;#10;        }&amp;#10;    } else {&amp;#10;        if (start_stop &lt; 0) {&amp;#10;            for (var i = 0; i &gt; start_stop; i += step) {&amp;#10;                arr.push(round(i, rounding))&amp;#10;            }&amp;#10;        } else {&amp;#10;            for (var i = 0; i &lt; start_stop; i += step) {&amp;#10;                arr.push(round(i, rounding))&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    return arr;&amp;#10;}&amp;#10;&amp;#10;clone = function(arr) {&amp;#10;    //# recursive function to deep copy arrays and dictionaries    &amp;#10;    var loops, tmp;&amp;#10;    //# see if it is an array&amp;#10;    //#  check a couple of things to try to avoid objects with these keys&amp;#10;    if (Array.isArray(arr)) {&amp;#10;        loops = arr;&amp;#10;        tmp = [];&amp;#10;    } else {&amp;#10;        loops = Object.keys(arr);&amp;#10;        tmp = {};&amp;#10;    }&amp;#10;    loops.forEach(function(val) {&amp;#10;        var value;&amp;#10;        //# if the looped items are the array, push() to a list&amp;#10;        if (loops === arr) {&amp;#10;            value = val;&amp;#10;            if (typeof(value) == &quot;object&quot;) {&amp;#10;                //# if the subelement is another complex object, &amp;#10;                //#  then clone it as well.&amp;#10;                tmp.push(clone(value));&amp;#10;            } else {&amp;#10;                tmp.push(value);&amp;#10;            }&amp;#10;        } else { //# if the looped items are the dictionary&amp;#10;                 //#  add them with the key&amp;#10;            value = arr[val];&amp;#10;            if (typeof(value) == &quot;object&quot;) {&amp;#10;                //# if the subelement is another complex object, &amp;#10;                //#  then clone it as well.&amp;#10;                tmp[val] = clone(value);&amp;#10;            } else {&amp;#10;                tmp[val] = value;&amp;#10;            }&amp;#10;        }&amp;#10;    })&amp;#10;    return tmp;&amp;#10;}&amp;#10;&amp;#10;sum = function(arr){return arr.reduce((partialSum, a) =&gt; partialSum + a, 0)}&amp;#10;&amp;#10;&amp;#10;random = {&amp;#10;    //# contains useful random number generation functions&amp;#10;    &quot;random&quot; : function(start_stop=1, post_stop=undefined, count=1) {&amp;#10;        var results = [];&amp;#10;        range(count).forEach(function() {&amp;#10;            if (post_stop != undefined) {&amp;#10;                if (post_stop &lt; start_stop) {&amp;#10;                    var tmp = post_stop;&amp;#10;                    post_stop = start_stop;&amp;#10;                    start_stop = tmp;&amp;#10;                }&amp;#10;                results.push((start_stop + Math.random() * (post_stop - start_stop)));&amp;#10;            } else {&amp;#10;                //# if post_stop is not defined, start_stop is the non-inclusive max value.&amp;#10;                results.push((Math.random() * start_stop));&amp;#10;            }&amp;#10;        });&amp;#10;        if (count == 1)&amp;#10;            return results[0];&amp;#10;            return results;       &amp;#10;    },&amp;#10;    &amp;#10;    &quot;randint&quot; : function(start_stop, post_stop, count=1) {&amp;#10;        var results = [];&amp;#10;        range(count).forEach(function() {&amp;#10;            //# Math.random() never gives exactly 1, so it&amp;#10;            //#  never reaches the provided max value.&amp;#10;            if (post_stop != undefined) {&amp;#10;                if (post_stop &lt; start_stop) {&amp;#10;                    var tmp = post_stop;&amp;#10;                    post_stop = start_stop;&amp;#10;                    start_stop = tmp;&amp;#10;                }&amp;#10;                results.push(parseInt(start_stop + Math.random() * (post_stop - start_stop)));&amp;#10;            } else {&amp;#10;                //# if post_stop is not defined, start_stop is non-inclusive max value&amp;#10;                results.push(parseInt(Math.random() * start_stop));&amp;#10;            }&amp;#10;        });&amp;#10;        if (count == 1)&amp;#10;            return results[0];&amp;#10;            return results;&amp;#10;    },&amp;#10;    &amp;#10;    &quot;choice&quot; : function(arr, count=1, with_replacement=true) {&amp;#10;        var results = [];&amp;#10;        if (with_replacement) {&amp;#10;            range(count).forEach(function() {&amp;#10;                results.push(arr[random.randint(arr.length)]);&amp;#10;            });&amp;#10;        } else {&amp;#10;            //# make shallow copy to choose from.&amp;#10;            //#  you can always clone returned result if you want unique copies,&amp;#10;            //#  and it makes no difference for arrays of primitives &amp;#10;            //#  (like numeric indices or string keys).&amp;#10;            var tmp = [...arr];&amp;#10;            range(count).forEach(function() {&amp;#10;                if (tmp.length == 0)&amp;#10;                    //# refill array&amp;#10;                    tmp = [...arr];&amp;#10;                    results.push(tmp.splice(random.randint(tmp.length), 1));&amp;#10;            });&amp;#10;        }&amp;#10;        if (count == 1)&amp;#10;            return results[0];&amp;#10;            return results;&amp;#10;    }&amp;#10;}&amp;#10;&amp;#10;&amp;#10;&amp;#10;crdm_fit_gain = weighted_avg(crdm_q_gain) //# parameters for gains&amp;#10;crdm_fit_loss = weighted_avg(crdm_q_loss) //# parameters for losses&amp;#10;&amp;#10;//# global variables&amp;#10;alpha_gain = crdm_fit_gain[0];&amp;#10;alpha_loss = crdm_fit_loss[0];&amp;#10;beta_gain = crdm_fit_gain[1];&amp;#10;beta_loss = crdm_fit_loss[1];&amp;#10;prob = 0.5;&amp;#10;amb = 0; &amp;#10;crdm_steps = 4;&amp;#10;//# domain: gain = 1, loss = -1&amp;#10;&amp;#10;append_trial = function(trials, safe_sv, lott_sv, lott, safe, prob, amb, sv_half, domain) {&amp;#10;    //# appends trial info for presentation and output&amp;#10;    trials[&quot;crdm_safe_sv&quot;].append(safe_sv);&amp;#10;    trials[&quot;crdm_lott_sv&quot;].append(safe_sv);&amp;#10;    trials[&quot;crdm_lott&quot;].append(lott);&amp;#10;    trials[&quot;crdm_sure_amt&quot;].append(safe);&amp;#10;    trials[&quot;crdm_lott_p&quot;].append(prob);&amp;#10;    trials[&quot;crdm_amb_lev&quot;].append(amb);&amp;#10;    trials[&quot;crdm_delta_sv&quot;].append(lott_sv - safe_sv);&amp;#10;    trials[&quot;crdm_domain&quot;].append(domain);&amp;#10;}&amp;#10;&amp;#10;lottery2sv = function(objective_value, alpha_risk_aversion, beta_ambiguity_aversion, probability, ambiguity) {&amp;#10;    //# converts lottery option value from money space --&gt; subjective value space&amp;#10;    //# domain considered where function is called&amp;#10;    return Math.sign(objective_value) * (probability - beta_ambiguity_aversion * (ambiguity/2)) &amp;#10;           * Math.pow(Math.abs(objective_value), alpha_risk_aversion);&amp;#10;}&amp;#10;&amp;#10;round2fiddy = function(number) {&amp;#10;    //# rounding all money values to nearest $0.50&amp;#10;    return Math.round(number * 2)/2;&amp;#10;}&amp;#10;&amp;#10;safe2sv = function(subjective_value, alpha) { //# deprecated&amp;#10;    //# converts safe option value from money space --&gt; subjective value space&amp;#10;    return Math.sign(subjective_value) * Math.pow(Math.abs(subjective_value), alpha);&amp;#10;}&amp;#10;&amp;#10;sort_it = function(arr) {&amp;#10;    //# sort ascending (used for SVs)&amp;#10;    arr.sort(function(a, b){return a - b});&amp;#10;}&amp;#10;&amp;#10;sv2money = function(subjective_value, domain, alpha, beta, prob, amb) { &amp;#10;    //# based on whether you provide beta, converts each value in the &amp;#10;    //#  subjective value (safe &amp; lottery) range --&gt; money spaces&amp;#10;    var money;&amp;#10;    if (beta === undefined) { //# beta isn't used for safe money&amp;#10;        //# compute safe money using inverse of SV formula&amp;#10;        //#  gain - money(V) = 1*SV**1/alpha&amp;#10;        //#  loss - money(V) = -1*SV**1/alpha&amp;#10;        money = round2fiddy(domain * Math.pow(Math.abs(subjective_value), 1/alpha)); &amp;#10;    } else {&amp;#10;        //# compute lottery money using inverse of SV formula&amp;#10;        //#  gain - money(V) = 1*(SV/P-B*A/2)**1/alpha&amp;#10;        //#  loss - money(V) = -1*(SV/P-B*A/2)**1/alpha&amp;#10;        money = round2fiddy(domain * Math.pow(Math.abs(subjective_value)/(prob - beta * amb/2), 1/alpha));&amp;#10;    }&amp;#10;    //# constrains min and max lottery $ and ensure correct sign for gain/loss&amp;#10;    money = domain * Math.min(50, Math.max(0.5, Math.abs(money)));&amp;#10;    return money&amp;#10;}&amp;#10;&amp;#10;make_sample_sv_ranges = function(domain, alpha, beta, prob, amb, steps) {&amp;#10;    //# calculates SVdeltas and corresponding monetary values&amp;#10;    var sv_max = domain * lottery2sv(50, alpha, beta, prob, amb); //# maximum possible lottery value ($ --&gt; SV space)&amp;#10;    var sv_min = 0; //# domain * safe2sv(0.5, alpha); //#minimum possible lottery value ($ --&gt; SV space)&amp;#10;    var sv_half = sv_max/2; //# SV of trial halfway between 0 and max lottery gain (true center)&amp;#10;    var step_size = (sv_max - sv_min)/(2 * steps - 1);&amp;#10;    var space = arange(sv_min, sv_max + step_size/2, step_size);&amp;#10;    return [space, sv_half];&amp;#10;}&amp;#10;&amp;#10;crdm_trials_dict = {&quot;crdm_safe_sv&quot;:[], &quot;crdm_lott_sv&quot;:[], &quot;crdm_lott&quot;:[], &quot;crdm_sure_amt&quot;:[], //# dict for trial variables&amp;#10;                    &quot;crdm_lott_p&quot;:[], &quot;crdm_amb_lev&quot;:[], &quot;crdm_delta_sv&quot;:[], &quot;crdm_domain&quot;:[]};&amp;#10;&amp;#10;generate_trials = function(trials, domain, alpha, beta, steps) {&amp;#10;    //# creates trial schedule for each domain (gain/loss)&amp;#10;    var amb_space = [0.24, 0.5, 0.74]; //# possible ambiguity values&amp;#10;    var prob_space = [0.13, 0.25, 0.38, 0.5, 0.75]; //# possible probability values&amp;#10;    var trials_per = 9; //# number of trials per unique prob/amb option&amp;#10;    var choice_idxs = [0,1,2,3,3.5,4,5,6,7];&amp;#10;    var delta_idx = range(8); //# index of trials_remaining_per_sv_delta array&amp;#10;&amp;#10;    prob_space.forEach(function(prob) {&amp;#10;        //# non-ambiguity trials&amp;#10;        var tmp = make_sample_sv_ranges(domain, alpha, beta, prob, 0, steps);&amp;#10;        var svs = tmp[0]; //# get list of SV quadrants&amp;#10;        var sv_half = tmp[1]; //# get SV_half&amp;#10;        range(trials_per).forEach(function(_, tidx) { //# for each of 9 trials per prob&amp;#10;            var choice_idx = choice_idxs[tidx]; //# current sample index&amp;#10;            if (choice_idx != parseInt(choice_idx)) { //# if not an integer&amp;#10;                var inty = parseInt(choice_idx); //# turn it into integer&amp;#10;                choice_idx = random.randint(inty, inty + 2); //# randomly sample within two steps&amp;#10;            }&amp;#10;            var subspace_sv = svs[choice_idx]; //# specific random SV for curr quad&amp;#10;            var lott = sv2money(subspace_sv, domain, alpha, beta, prob, 0); //# specific lottery $ for curr quad&amp;#10;            var safe = sv2money(sv_half, domain, alpha); //# specific safe $ for curr quad&amp;#10;            append_trial(trials, sv_half, subspace_sv, lott, safe, prob, 0, sv_half, domain); //# save to trials dict&amp;#10;        });&amp;#10;&amp;#10;    });&amp;#10;&amp;#10;    amb_space.forEach(function(amb) {&amp;#10;        //# ambiguity trials&amp;#10;        var tmp = make_sample_sv_ranges(domain, alpha, beta, 0.5, amb, steps);&amp;#10;        var svs = tmp[0]; //# get list of SV quadrants&amp;#10;        var sv_half = tmp[1]; //# get SV_half&amp;#10;        range(trials_per).forEach(function(_, tidx) { //# for each of 9 trials per amb&amp;#10;            var choice_idx = choice_idxs[tidx]; //# current sample index&amp;#10;            if (choice_idx != parseInt(choice_idx)) { //# if not an integer&amp;#10;                var inty = parseInt(choice_idx); //# turn it into integer&amp;#10;                choice_idx = random.randint(inty, inty + 2); //# randomly sample within two steps&amp;#10;            }&amp;#10;            var subspace_sv = svs[choice_idx]; //# specific random SV for curr quad&amp;#10;            var lott = sv2money(subspace_sv, domain, alpha, beta, 0.5, amb); //# specific lottery $ for curr quad&amp;#10;            var safe = sv2money(sv_half, domain, alpha); //# specific safe $ for curr quad&amp;#10;            append_trial(trials, sv_half, subspace_sv, lott, safe, 0.5, amb, sv_half, domain); //# save to trials dict&amp;#10;        });&amp;#10;&amp;#10;    });&amp;#10;}&amp;#10;&amp;#10;//# generate schedule for each domain&amp;#10;generate_trials(crdm_trials_dict, 1, alpha_gain, beta_gain, crdm_steps); //# gain trials&amp;#10;generate_trials(crdm_trials_dict, -1, alpha_loss, beta_loss, crdm_steps); //# loss trials" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="crdm_schedule_gen_JS" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="crdm_ricardo_gen_JS" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;[alpha_pos, beta_pos] = [post_mean_gain[0], post_mean_gain[1]];&amp;#10;[alpha_neg, beta_neg] = [post_mean_loss[0], post_mean_loss[1]];&amp;#10;p_options = [0.13, 0.25, 0.38, 0.5, 0.75];&amp;#10;amb_options = [0.24, 0.5, 0.74];&amp;#10;amb_prob = 0.5;&amp;#10;A_null = 0.0;&amp;#10;Vmax = 50.0;&amp;#10;Vmin = (- 50.0);&amp;#10;p_options = [0.75, 0.5, 0.38, 0.25, 0.13];&amp;#10;amb_options = [0.24, 0.5, 0.74];&amp;#10;A_null = 0.0;&amp;#10;Vmax = 50.0;&amp;#10;Vmin = (- 50.0);&amp;#10;empty_trials = {&quot;category&quot;: [], &quot;p_reward&quot;: [], &quot;ambiguity&quot;: [], &quot;value_reward&quot;: [], &quot;SV_reward&quot;: [], &quot;value_safe&quot;: [], &quot;SV_safe&quot;: []};&amp;#10;ordered_keys = empty_trials.keys();&amp;#10;function flatten(l) {&amp;#10;    var flat_list;&amp;#10;    flat_list = [];&amp;#10;    for (var sublist, _pj_c = 0, _pj_a = l, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        sublist = _pj_a[_pj_c];&amp;#10;        for (var item, _pj_f = 0, _pj_d = sublist, _pj_e = _pj_d.length; (_pj_f &lt; _pj_e); _pj_f += 1) {&amp;#10;            item = _pj_d[_pj_f];&amp;#10;            flat_list = (flat_list + [item]);&amp;#10;        }&amp;#10;    }&amp;#10;    return flat_list;&amp;#10;}&amp;#10;function order_keys(dict, keys) {&amp;#10;    var ordered_dict;&amp;#10;    ordered_dict = {};&amp;#10;    for (var k, _pj_c = 0, _pj_a = keys, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        k = _pj_a[_pj_c];&amp;#10;        if (_pj.in_es6(k, dict.keys())) {&amp;#10;            ordered_dict[k] = dict[k];&amp;#10;        }&amp;#10;    }&amp;#10;    return ordered_dict;&amp;#10;}&amp;#10;function round_number(number) {&amp;#10;    var number_to_50;&amp;#10;    number_to_50 = (util.round((number * 2)) / 2);&amp;#10;    if ((number_to_50 === 0)) {&amp;#10;        return 0.5;&amp;#10;    } else {&amp;#10;        return number_to_50;&amp;#10;    }&amp;#10;}&amp;#10;function round_to_50(dict) {&amp;#10;    var cols, rounded_col;&amp;#10;    cols = [&quot;value_safe&quot;, &quot;value_reward&quot;];&amp;#10;    for (var c, _pj_c = 0, _pj_a = cols, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        c = _pj_a[_pj_c];&amp;#10;        rounded_col = [];&amp;#10;        for (var v, _pj_f = 0, _pj_d = dict[c], _pj_e = _pj_d.length; (_pj_f &lt; _pj_e); _pj_f += 1) {&amp;#10;            v = _pj_d[_pj_f];&amp;#10;            rounded_col = (rounded_col + [round_number(v)]);&amp;#10;        }&amp;#10;        dict[c] = rounded_col;&amp;#10;    }&amp;#10;    return dict;&amp;#10;}&amp;#10;function value_repeat(value, length) {&amp;#10;    var list_repeat;&amp;#10;    list_repeat = [];&amp;#10;    for (var i, _pj_c = 0, _pj_a = util.range(length), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        i = _pj_a[_pj_c];&amp;#10;        list_repeat = (list_repeat + [value]);&amp;#10;    }&amp;#10;    return list_repeat;&amp;#10;}&amp;#10;function dict_merge(list_dict) {&amp;#10;    var merged_dict, value;&amp;#10;    merged_dict = list_dict[0].copy();&amp;#10;    for (var d, _pj_c = 0, _pj_a = list_dict.slice(1), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        d = _pj_a[_pj_c];&amp;#10;        for (var key, _pj_f = 0, _pj_d = d, _pj_e = _pj_d.length; (_pj_f &lt; _pj_e); _pj_f += 1) {&amp;#10;            key = _pj_d[_pj_f];&amp;#10;            value = d[key];&amp;#10;            merged_dict[key] = (merged_dict[key] + value);&amp;#10;        }&amp;#10;    }&amp;#10;    return merged_dict;&amp;#10;}&amp;#10;function get_extr_rows(p_options, domain = &quot;gain&quot;) {&amp;#10;    var V, category, extr;&amp;#10;    extr = empty_trials.copy();&amp;#10;    category = ((domain === &quot;gain&quot;) ? &quot;Extr_pos&quot; : &quot;Extr_neg&quot;);&amp;#10;    V = value_repeat(Vmax, p_options.length);&amp;#10;    if ((domain === &quot;loss&quot;)) {&amp;#10;        V = value_repeat(Vmin, p_options.length);&amp;#10;    }&amp;#10;    extr = {&quot;category&quot;: value_repeat(category, p_options.length), &quot;p_reward&quot;: p_options, &quot;ambiguity&quot;: value_repeat(0.0, p_options.length), &quot;value_reward&quot;: V};&amp;#10;    return extr;&amp;#10;}&amp;#10;function add_ambig(trials, amb_options) {&amp;#10;    var V, amb_trials, final_dict, prob_amb;&amp;#10;    prob_amb = 0.5;&amp;#10;    V = value_repeat(trials[&quot;value_reward&quot;][0], amb_options.length);&amp;#10;    amb_trials = {&quot;p_reward&quot;: value_repeat(prob_amb, amb_options.length), &quot;value_reward&quot;: V, &quot;ambiguity&quot;: amb_options};&amp;#10;    final_dict = {};&amp;#10;    for (var k, _pj_c = 0, _pj_a = (set(trials) &amp; set(amb_trials)), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        k = _pj_a[_pj_c];&amp;#10;        final_dict[k] = (trials[k] + amb_trials[k]);&amp;#10;    }&amp;#10;    final_dict[&quot;category&quot;] = value_repeat(trials[&quot;category&quot;][0], final_dict[&quot;value_reward&quot;].slice(0).length);&amp;#10;    return final_dict;&amp;#10;}&amp;#10;function add_SV(trials, alpha, beta, domain = &quot;gain&quot;) {&amp;#10;    var A, Amp, p, sv_reward, v;&amp;#10;    Amp = 1.0;&amp;#10;    if ((domain === &quot;loss&quot;)) {&amp;#10;        Amp = (- 1.0);&amp;#10;    }&amp;#10;    sv_reward = [];&amp;#10;    for (var idx, _pj_c = 0, _pj_a = util.range(trials[&quot;p_reward&quot;].length), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        idx = _pj_a[_pj_c];&amp;#10;        p = trials[&quot;p_reward&quot;][idx];&amp;#10;        v = trials[&quot;value_reward&quot;][idx];&amp;#10;        A = trials[&quot;ambiguity&quot;][idx];&amp;#10;        sv_reward = (sv_reward + [((p - ((beta * A) / 2)) * (Amp * Math.pow(Math.abs(v), alpha)))]);&amp;#10;    }&amp;#10;    trials[&quot;SV_reward&quot;] = sv_reward;&amp;#10;    return trials;&amp;#10;}&amp;#10;function add_Vsafe(trials, alpha, beta, domain = &quot;gain&quot;) {&amp;#10;    var Amp, sv_safe, value_safe;&amp;#10;    Amp = 1.0;&amp;#10;    if ((domain === &quot;loss&quot;)) {&amp;#10;        Amp = (- 1.0);&amp;#10;    }&amp;#10;    sv_safe = [];&amp;#10;    value_safe = [];&amp;#10;    for (var sv, _pj_c = 0, _pj_a = trials[&quot;SV_reward&quot;], _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        sv = _pj_a[_pj_c];&amp;#10;        sv_safe = (sv_safe + [(sv / 2)]);&amp;#10;        value_safe = (value_safe + [(Amp * Math.pow(Math.abs(sv), (1 / alpha)))]);&amp;#10;    }&amp;#10;    trials[&quot;SV_safe&quot;] = sv_safe;&amp;#10;    trials[&quot;value_safe&quot;] = value_safe;&amp;#10;    return trials;&amp;#10;}&amp;#10;function get_SE_trials(trials, alpha, beta, domain = &quot;gain&quot;) {&amp;#10;    var A, Amp, SE_trials, p, sv_reward, svf, svr, value_reward, value_safe;&amp;#10;    SE_trials = {};&amp;#10;    SE_trials[&quot;category&quot;] = value_repeat(&quot;SE_pos&quot;, trials[&quot;SV_safe&quot;].length);&amp;#10;    Amp = 1.0;&amp;#10;    if ((domain === &quot;loss&quot;)) {&amp;#10;        Amp = (- 1.0);&amp;#10;        SE_trials[&quot;category&quot;] = value_repeat(&quot;SE_neg&quot;, trials[&quot;SV_safe&quot;].length);&amp;#10;    }&amp;#10;    SE_trials[&quot;p_reward&quot;] = trials[&quot;p_reward&quot;];&amp;#10;    SE_trials[&quot;ambiguity&quot;] = trials[&quot;ambiguity&quot;];&amp;#10;    SE_trials[&quot;SV_safe&quot;] = trials[&quot;SV_safe&quot;];&amp;#10;    sv_reward = [];&amp;#10;    value_safe = [];&amp;#10;    value_reward = [];&amp;#10;    for (var idx, _pj_c = 0, _pj_a = util.range(trials[&quot;SV_reward&quot;].length), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        idx = _pj_a[_pj_c];&amp;#10;        svr = trials[&quot;SV_reward&quot;][idx];&amp;#10;        sv_reward = (sv_reward + [(svr / 2)]);&amp;#10;        svf = trials[&quot;SV_safe&quot;][idx];&amp;#10;        value_safe = (value_safe + [(Amp * Math.pow(Math.abs(svf), (1 / alpha)))]);&amp;#10;        p = trials[&quot;p_reward&quot;][idx];&amp;#10;        A = trials[&quot;ambiguity&quot;][idx];&amp;#10;        value_reward = (value_reward + [(Amp * Math.pow((Math.abs(svf) / (p - ((beta * A) / 2))), (1 / alpha)))]);&amp;#10;    }&amp;#10;    SE_trials[&quot;SV_reward&quot;] = sv_reward;&amp;#10;    SE_trials[&quot;value_safe&quot;] = value_safe;&amp;#10;    SE_trials[&quot;value_reward&quot;] = value_reward;&amp;#10;    return SE_trials;&amp;#10;}&amp;#10;function get_cent_SE_trials(SE_trials, alpha, beta, domain = &quot;gain&quot;) {&amp;#10;    var A, Amp, cent_SE, cent_SE_trial_minus2, cent_SE_trial_plus2, p, sv_reward, v, value_reward, value_reward_minus2, value_reward_plus2;&amp;#10;    cent_SE = {};&amp;#10;    cent_SE_trial_plus2 = SE_trials;&amp;#10;    cent_SE_trial_minus2 = SE_trials;&amp;#10;    value_reward_plus2 = [];&amp;#10;    value_reward_minus2 = [];&amp;#10;    for (var idx, _pj_c = 0, _pj_a = util.range(cent_SE_trial_plus2[&quot;value_reward&quot;].length), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        idx = _pj_a[_pj_c];&amp;#10;        value_reward = cent_SE_trial_plus2[&quot;value_reward&quot;][idx];&amp;#10;        value_reward_plus2 = (value_reward_plus2 + [(value_reward + 2.0)]);&amp;#10;        value_reward_minus2 = (value_reward_minus2 + [(value_reward - 2.0)]);&amp;#10;    }&amp;#10;    cent_SE_trial_plus2[&quot;value_reward&quot;] = value_reward_plus2;&amp;#10;    cent_SE_trial_minus2[&quot;value_reward&quot;] = value_reward_minus2;&amp;#10;    cent_SE = dict_merge([SE_trials, cent_SE_trial_plus2, cent_SE_trial_minus2]);&amp;#10;    Amp = 1.0;&amp;#10;    cent_SE[&quot;category&quot;] = value_repeat(&quot;Cent_SE_pos&quot;, cent_SE[&quot;value_reward&quot;].length);&amp;#10;    if ((domain === &quot;loss&quot;)) {&amp;#10;        Amp = (- 1.0);&amp;#10;        cent_SE[&quot;category&quot;] = value_repeat(&quot;Cent_SE_neg&quot;, cent_SE[&quot;value_reward&quot;].length);&amp;#10;    }&amp;#10;    sv_reward = [];&amp;#10;    for (var idx, _pj_c = 0, _pj_a = util.range(cent_SE[&quot;p_reward&quot;].length), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        idx = _pj_a[_pj_c];&amp;#10;        p = cent_SE[&quot;p_reward&quot;][idx];&amp;#10;        A = cent_SE[&quot;ambiguity&quot;][idx];&amp;#10;        v = cent_SE[&quot;value_reward&quot;][idx];&amp;#10;        sv_reward = (sv_reward + [(((p - ((beta * A) / 2)) * Amp) * Math.pow(Math.abs(v), alpha))]);&amp;#10;    }&amp;#10;    cent_SE[&quot;SV_reward&quot;] = sv_reward;&amp;#10;    return cent_SE;&amp;#10;}&amp;#10;function get_interm_trials(rows_extr, alpha, beta, num_steps = 2, domain = &quot;gain&quot;) {&amp;#10;    var A, Amp, SV_step, category, dict_list, full_int, interm, list_dict, list_x, p, reward, safe, step, sv, sv_reward, value_reward;&amp;#10;    full_int = {};&amp;#10;    SV_step = [];&amp;#10;    for (var idx, _pj_c = 0, _pj_a = util.range(rows_extr[&quot;SV_reward&quot;].length), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        idx = _pj_a[_pj_c];&amp;#10;        reward = rows_extr[&quot;SV_reward&quot;][idx];&amp;#10;        safe = rows_extr[&quot;SV_safe&quot;][idx];&amp;#10;        SV_step = (SV_step + [((reward - safe) / (num_steps + 1))]);&amp;#10;    }&amp;#10;    list_x = [];&amp;#10;    for (var i, _pj_c = 0, _pj_a = util.range(((- num_steps) - 1), (num_steps + 1)), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        i = _pj_a[_pj_c];&amp;#10;        if ((i !== 0)) {&amp;#10;            list_x = (list_x + [i]);&amp;#10;        }&amp;#10;    }&amp;#10;    list_dict = [];&amp;#10;    for (var x, _pj_c = 0, _pj_a = list_x, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        x = _pj_a[_pj_c];&amp;#10;        interm = {};&amp;#10;        Amp = 1.0;&amp;#10;        category = &quot;Int_pos&quot;;&amp;#10;        if ((domain === &quot;loss&quot;)) {&amp;#10;            Amp = (- 1.0);&amp;#10;            category = &quot;Int&quot;;&amp;#10;        }&amp;#10;        if ((x === ((- num_steps) - 1))) {&amp;#10;            category = &quot;Zero_Reward&quot;;&amp;#10;        }&amp;#10;        interm[&quot;category&quot;] = value_repeat(category, rows_extr[&quot;category&quot;].length);&amp;#10;        interm[&quot;p_reward&quot;] = rows_extr[&quot;p_reward&quot;];&amp;#10;        interm[&quot;ambiguity&quot;] = rows_extr[&quot;ambiguity&quot;];&amp;#10;        sv_reward = [];&amp;#10;        for (var idx, _pj_f = 0, _pj_d = util.range(SV_step.length), _pj_e = _pj_d.length; (_pj_f &lt; _pj_e); _pj_f += 1) {&amp;#10;            idx = _pj_d[_pj_f];&amp;#10;            safe = rows_extr[&quot;SV_safe&quot;][idx];&amp;#10;            step = SV_step[idx];&amp;#10;            sv_reward = (sv_reward + [(safe + (x * step))]);&amp;#10;        }&amp;#10;        interm[&quot;SV_reward&quot;] = sv_reward;&amp;#10;        interm[&quot;value_safe&quot;] = rows_extr[&quot;value_safe&quot;];&amp;#10;        interm[&quot;SV_safe&quot;] = rows_extr[&quot;SV_safe&quot;];&amp;#10;        value_reward = [];&amp;#10;        for (var idx, _pj_f = 0, _pj_d = util.range(interm[&quot;SV_reward&quot;].length), _pj_e = _pj_d.length; (_pj_f &lt; _pj_e); _pj_f += 1) {&amp;#10;            idx = _pj_d[_pj_f];&amp;#10;            sv = interm[&quot;SV_reward&quot;][idx];&amp;#10;            p = interm[&quot;p_reward&quot;][idx];&amp;#10;            A = interm[&quot;ambiguity&quot;][idx];&amp;#10;            value_reward = (value_reward + [(Amp * Math.pow((Math.abs(sv) / (p - ((beta * A) / 2))), (1 / alpha)))]);&amp;#10;        }&amp;#10;        interm[&quot;value_reward&quot;] = value_reward;&amp;#10;        list_dict = (list_dict + [interm]);&amp;#10;    }&amp;#10;    for (var k, _pj_c = 0, _pj_a = list_dict[0], _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        k = _pj_a[_pj_c];&amp;#10;        dict_list = [];&amp;#10;        for (var d, _pj_f = 0, _pj_d = list_dict, _pj_e = _pj_d.length; (_pj_f &lt; _pj_e); _pj_f += 1) {&amp;#10;            d = _pj_d[_pj_f];&amp;#10;            dict_list = (dict_list + [d[k]]);&amp;#10;        }&amp;#10;        full_int[k] = flatten(dict_list);&amp;#10;    }&amp;#10;    return full_int;&amp;#10;}&amp;#10;function gen_random_list(len) {&amp;#10;    var random_list;&amp;#10;    random_list = [];&amp;#10;    for (var i, _pj_c = 0, _pj_a = util.range(len), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        i = _pj_a[_pj_c];&amp;#10;        random_list = (random_list + [util.round(Math.random.random())]);&amp;#10;    }&amp;#10;    return random_list;&amp;#10;}&amp;#10;function pavlovia_dict(dict, domain = &quot;gain&quot;) {&amp;#10;    var a, column_order, crdm_amb_lev, crdm_img, crdm_lott_bot, crdm_lott_p, crdm_lott_top, crdm_nonzero_side, loc, nb_trials, p, random_list, side, v;&amp;#10;    nb_trials = dict[&quot;value_safe&quot;].length;&amp;#10;    column_order = [&quot;crdm_sure_amt&quot;, &quot;crdm_sure_p&quot;, &quot;crdm_lott_top&quot;, &quot;crdm_lott_bot&quot;, &quot;crdm_lott_p&quot;, &quot;crdm_amb_lev&quot;, &quot;crdm_domain&quot;, &quot;crdm_img&quot;, &quot;crdm_nonzero_side&quot;];&amp;#10;    crdm_trials = {};&amp;#10;    crdm_trials[&quot;crdm_sure_amt&quot;] = dict[&quot;value_safe&quot;];&amp;#10;    crdm_trials[&quot;crdm_sure_p&quot;] = value_repeat(100, nb_trials);&amp;#10;    random_list = gen_random_list(nb_trials);&amp;#10;    crdm_lott_top = [];&amp;#10;    crdm_lott_bot = [];&amp;#10;    crdm_nonzero_side = [];&amp;#10;    for (var idx, _pj_c = 0, _pj_a = util.range(random_list.length), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        idx = _pj_a[_pj_c];&amp;#10;        v = dict[&quot;value_reward&quot;][idx];&amp;#10;        loc = random_list[idx];&amp;#10;        if ((loc === 1)) {&amp;#10;            crdm_lott_top = (crdm_lott_top + [v]);&amp;#10;            crdm_lott_bot = (crdm_lott_bot + [0]);&amp;#10;            crdm_nonzero_side = (crdm_nonzero_side + [&quot;top&quot;]);&amp;#10;        } else {&amp;#10;            if ((loc === 0)) {&amp;#10;                crdm_lott_top = (crdm_lott_top + [0]);&amp;#10;                crdm_lott_bot = (crdm_lott_bot + [v]);&amp;#10;                crdm_nonzero_side = (crdm_nonzero_side + [&quot;bottom&quot;]);&amp;#10;                crdm_trials[&quot;crdm_lott_top&quot;] = crdm_lott_top;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    crdm_trials[&quot;crdm_lott_bot&quot;] = crdm_lott_bot;&amp;#10;    crdm_trials[&quot;crdm_nonzero_side&quot;] = crdm_nonzero_side;&amp;#10;    crdm_lott_p = [];&amp;#10;    crdm_amb_lev = [];&amp;#10;    for (var idx, _pj_c = 0, _pj_a = util.range(dict[&quot;p_reward&quot;].length), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        idx = _pj_a[_pj_c];&amp;#10;        p = dict[&quot;p_reward&quot;][idx];&amp;#10;        crdm_lott_p = (crdm_lott_p + [util.round((100 * p))]);&amp;#10;        a = dict[&quot;ambiguity&quot;][idx];&amp;#10;        crdm_amb_lev = (crdm_amb_lev + [util.round((100 * a))]);&amp;#10;    }&amp;#10;    crdm_trials[&quot;crdm_lott_p&quot;] = crdm_lott_p;&amp;#10;    crdm_trials[&quot;crdm_amb_lev&quot;] = crdm_amb_lev;&amp;#10;    crdm_img = [];&amp;#10;    for (var idx, _pj_c = 0, _pj_a = util.range(crdm_trials[&quot;crdm_lott_p&quot;].length), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        idx = _pj_a[_pj_c];&amp;#10;        p = crdm_trials[&quot;crdm_lott_p&quot;][idx];&amp;#10;        a = crdm_trials[&quot;crdm_amb_lev&quot;][idx];&amp;#10;        side = crdm_trials[&quot;crdm_nonzero_side&quot;][idx];&amp;#10;        if ((a &gt; 0)) {&amp;#10;            crdm_img = (crdm_img + [((&quot;ambig_&quot; + a.toString()) + &quot;.bmp&quot;)]);&amp;#10;        } else {&amp;#10;            if ((side === &quot;top&quot;)) {&amp;#10;                crdm_img = (crdm_img + [((&quot;risk_red_&quot; + p.toString()) + &quot;.bmp&quot;)]);&amp;#10;            } else {&amp;#10;                if ((side === &quot;bottom&quot;)) {&amp;#10;                    crdm_img = (crdm_img + [((&quot;risk_blue_&quot; + p.toString()) + &quot;.bmp&quot;)]);&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    crdm_trials[&quot;crdm_img&quot;] = crdm_img;&amp;#10;    crdm_trials[&quot;crdm_domain&quot;] = value_repeat(domain, nb_trials);&amp;#10;    crdm_trials = order_keys(crdm_trials, column_order);&amp;#10;    return crdm_trials;&amp;#10;}&amp;#10;function get_trials(p_options, amb_options, alpha, beta, ordered_keys = [], domain = &quot;gain&quot;) {&amp;#10;    var cent, interm, rows_extr, trials, trials_list;&amp;#10;    rows_extr = get_extr_rows(p_options, {&quot;domain&quot;: domain});&amp;#10;    rows_extr = add_ambig(rows_extr, amb_options);&amp;#10;    rows_extr = add_SV(rows_extr, alpha, beta, {&quot;domain&quot;: domain});&amp;#10;    rows_extr = add_Vsafe(rows_extr, alpha, beta, {&quot;domain&quot;: domain});&amp;#10;    rows_extr = order_keys(rows_extr, ordered_keys);&amp;#10;    cent = get_cent_SE_trials(get_SE_trials(rows_extr, alpha, beta, {&quot;domain&quot;: domain}), alpha, beta, {&quot;domain&quot;: domain});&amp;#10;    cent = order_keys(cent, ordered_keys);&amp;#10;    interm = get_interm_trials(rows_extr, alpha, beta, {&quot;domain&quot;: domain});&amp;#10;    interm = order_keys(interm, ordered_keys);&amp;#10;    trials_list = [];&amp;#10;    trials_list.push(rows_extr);&amp;#10;    trials_list.push(interm);&amp;#10;    trials_list.push(cent);&amp;#10;    trials = dict_merge(trials_list);&amp;#10;    return round_to_50(trials);&amp;#10;}&amp;#10;function get_element_by_col(my_dict, row_nb) {&amp;#10;    var row_dict;&amp;#10;    row_dict = dict.fromkeys(my_dict.keys());&amp;#10;    for (var c, _pj_c = 0, _pj_a = my_dict.keys(), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        c = _pj_a[_pj_c];&amp;#10;        row_dict[c] = my_dict[c][row_nb];&amp;#10;    }&amp;#10;    return row_dict;&amp;#10;}&amp;#10;function convert_list_dict(my_dict) {&amp;#10;    var my_list_dict, nb_trials, row_dict;&amp;#10;    my_list_dict = [];&amp;#10;    nb_trials = my_dict[next(iter(my_dict))].length;&amp;#10;    for (var row_nb, _pj_c = 0, _pj_a = util.range(nb_trials), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        row_nb = _pj_a[_pj_c];&amp;#10;        row_dict = dict.fromkeys(my_dict.keys());&amp;#10;        row_dict = get_element_by_col(my_dict, row_nb);&amp;#10;        my_list_dict = (my_list_dict + [row_dict]);&amp;#10;    }&amp;#10;    return my_list_dict;&amp;#10;}&amp;#10;trials_gain = get_trials(p_options, amb_options, alpha_pos, beta_pos, {&quot;ordered_keys&quot;: ordered_keys, &quot;domain&quot;: &quot;gain&quot;});&amp;#10;trials_loss = get_trials(p_options, amb_options, alpha_neg, beta_neg, {&quot;ordered_keys&quot;: ordered_keys, &quot;domain&quot;: &quot;loss&quot;});&amp;#10;crdm_trials_gain = pavlovia_dict(trials_gain, {&quot;domain&quot;: &quot;gain&quot;});&amp;#10;crdm_trials_loss = pavlovia_dict(trials_loss, {&quot;domain&quot;: &quot;loss&quot;});&amp;#10;crdm_trials = dict_merge([crdm_trials_gain, crdm_trials_loss]);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="alpha_pos, beta_pos = post_mean_gain[0], post_mean_gain[1] #parameters for gains&amp;#10;alpha_neg, beta_neg = post_mean_loss[0], post_mean_loss[1] #parameters for losses&amp;#10;&amp;#10;#important variables&amp;#10;p_options = [0.13, 0.25, 0.38, 0.5, 0.75] #possible probability values (lott)&amp;#10;amb_options = [0.24, 0.5, 0.74] #possible portions of probability obscured (lott)&amp;#10;amb_prob = 0.5 #probability for all ambiguity trials&amp;#10;A_null = 0.0 #zero ambiguity&amp;#10;Vmax = 50.0 #maximum possible payment&amp;#10;Vmin = -50.0 #minimum possible payment&amp;#10;&amp;#10;#create an empty dictionary for trials info&amp;#10;empty_trials = {'category': [],&amp;#10;                'p_reward': [],&amp;#10;                'ambiguity': [],&amp;#10;                'value_reward': [],&amp;#10;                'SV_reward': [],&amp;#10;                'value_safe': [],&amp;#10;                'SV_safe': []}&amp;#10;ordered_keys = empty_trials.keys() # used to organize dict by keys&amp;#10;&amp;#10;&amp;#10;###helper functions&amp;#10;def flatten(l):&amp;#10;    flat_list = []&amp;#10;    for sublist in l:&amp;#10;        for item in sublist:&amp;#10;            flat_list = flat_list + [item]&amp;#10;    return flat_list&amp;#10;&amp;#10;def order_keys(dict, &amp;#10;               keys):&amp;#10;    ordered_dict = {}&amp;#10;    for k in keys:&amp;#10;        if k in dict.keys():&amp;#10;            ordered_dict[k] = dict[k]&amp;#10;    return ordered_dict&amp;#10;&amp;#10;def round_number(number):&amp;#10;    number_to_50 = round(number * 2) / 2&amp;#10;    if number_to_50 == 0:&amp;#10;        return 0.50&amp;#10;    else:&amp;#10;        return number_to_50&amp;#10;&amp;#10;def round_to_50(dict):&amp;#10;    cols = ['value_safe', 'value_reward']&amp;#10;    for c in cols:&amp;#10;        rounded_col = []&amp;#10;        for v in dict[c]:&amp;#10;            rounded_col = rounded_col + [round_number(v)]&amp;#10;        dict[c] = rounded_col&amp;#10;    return dict&amp;#10;&amp;#10;def value_repeat(value,length):&amp;#10;    list_repeat = []&amp;#10;    for i in range(length):&amp;#10;        list_repeat = list_repeat + [value]&amp;#10;    return list_repeat&amp;#10;&amp;#10;def dict_merge(list_dict):&amp;#10;    merged_dict = list_dict[0].copy()&amp;#10;    for d in list_dict[1:]:&amp;#10;        for key in d:&amp;#10;            value = d[key]&amp;#10;            merged_dict[key] = merged_dict[key] + value&amp;#10;    return merged_dict&amp;#10;&amp;#10;###########FUNCTIONS############&amp;#10;&amp;#10;&amp;#10;def get_extr_rows(p_options, &amp;#10;                  domain='gain'):&amp;#10;    #creates extreme positive gains and losses&amp;#10;    extr = empty_trials.copy()&amp;#10;    category = 'Extr_pos' if domain == 'gain' else 'Extr_neg'&amp;#10;    V = value_repeat(Vmax, len(p_options)) #list of values with same length as p_options&amp;#10;    if domain == 'loss':&amp;#10;            V = value_repeat(Vmin, len(p_options))&amp;#10;    extr = {'category': value_repeat(category, len(p_options)),&amp;#10;            'p_reward': p_options,&amp;#10;            'ambiguity': value_repeat(0.0, len(p_options)),&amp;#10;            'value_reward': V}&amp;#10;    return extr&amp;#10;&amp;#10;&amp;#10;def add_ambig(trials, &amp;#10;              amb_options):&amp;#10;    #adds ambiguity trials&amp;#10;    amb_prob = 0.5&amp;#10;    V = value_repeat(trials['value_reward'][0], len(amb_options))&amp;#10;    amb_trials = {'p_reward': value_repeat(amb_prob, len(amb_options)),&amp;#10;                  'value_reward': V,&amp;#10;                  'ambiguity': amb_options}&amp;#10;    final_dict = {}&amp;#10;    for k in set(trials) &amp; set(amb_trials):&amp;#10;        final_dict[k] = trials[k] + amb_trials[k]&amp;#10;    final_dict['category'] = value_repeat(trials['category'][0], len(final_dict['value_reward'][:]))&amp;#10;    return final_dict&amp;#10;&amp;#10;&amp;#10;def add_SV(trials, &amp;#10;           alpha, &amp;#10;           beta, &amp;#10;           domain='gain'):&amp;#10;    #adds subjective value (SV) given Ss alpha and beta&amp;#10;    Amp = 1.0&amp;#10;    if domain == 'loss':&amp;#10;          Amp = -1.0&amp;#10;    sv_reward = []&amp;#10;    for idx in range(len(trials['p_reward'])):&amp;#10;        p = trials['p_reward'][idx]&amp;#10;        v = trials['value_reward'][idx]&amp;#10;        A = trials['ambiguity'][idx]&amp;#10;        sv_reward = sv_reward + [(p - (beta * A / 2)) * (Amp * abs(v)**alpha)]&amp;#10;    trials['SV_reward'] = sv_reward&amp;#10;    return trials &amp;#10;&amp;#10;&amp;#10;def add_Vsafe(trials, &amp;#10;              alpha, &amp;#10;              beta, &amp;#10;              domain='gain'):&amp;#10;    #adds Vsafe and its SV&amp;#10;    Amp = 1.0 &amp;#10;    if domain == 'loss':&amp;#10;        Amp = -1.0&amp;#10;    sv_safe = []&amp;#10;    value_safe = []&amp;#10;    for sv in trials['SV_reward']:&amp;#10;        sv_safe = sv_safe + [sv/2]&amp;#10;        value_safe = value_safe + [Amp * (abs(sv))**(1/alpha)]&amp;#10;    trials['SV_safe'] = sv_safe&amp;#10;    trials['value_safe'] = value_safe&amp;#10;    return trials&amp;#10;&amp;#10;&amp;#10;def get_SE_trials (trials, &amp;#10;                   alpha, &amp;#10;                   beta, &amp;#10;                   domain='gain'):&amp;#10;    #create trials of Subjective Equality (SE)&amp;#10;    SE_trials = {}&amp;#10;    SE_trials['category'] = value_repeat('SE_pos', len(trials['SV_safe']))&amp;#10;    Amp = 1.0 &amp;#10;    if domain == 'loss':&amp;#10;        Amp = -1.0&amp;#10;        SE_trials['category'] = value_repeat('SE_neg', len(trials['SV_safe']))&amp;#10;    SE_trials['p_reward'] = trials['p_reward']&amp;#10;    SE_trials['ambiguity'] = trials['ambiguity']&amp;#10;    SE_trials['SV_safe'] = trials['SV_safe']&amp;#10;    sv_reward = []&amp;#10;    value_safe = []&amp;#10;    value_reward = []&amp;#10;    for idx in range(len(trials['SV_reward'])):&amp;#10;        svr = trials['SV_reward'][idx]&amp;#10;        sv_reward = sv_reward + [svr / 2]&amp;#10;        svf = trials['SV_safe'][idx]&amp;#10;        value_safe = value_safe + [Amp * (abs(svf))**(1/alpha)]&amp;#10;        p = trials['p_reward'][idx]&amp;#10;        A = trials['ambiguity'][idx]&amp;#10;        value_reward = value_reward + [Amp * (abs(svf) / ((p) - (beta * A / 2)))**(1/alpha)]&amp;#10;    SE_trials['SV_reward'] = sv_reward&amp;#10;    SE_trials['value_safe'] = value_safe&amp;#10;    SE_trials['value_reward'] = value_reward&amp;#10;    return SE_trials&amp;#10;&amp;#10;&amp;#10;def get_cent_SE_trials(SE_trials, &amp;#10;                       alpha, &amp;#10;                       beta, &amp;#10;                       domain = 'gain'):&amp;#10;    cent_SE = {}&amp;#10;    cent_SE_trial_plus2 = SE_trials&amp;#10;    cent_SE_trial_minus2 = SE_trials&amp;#10;    value_reward_plus2 = []&amp;#10;    value_reward_minus2 = []&amp;#10;    for idx in range(len(cent_SE_trial_plus2['value_reward'])):&amp;#10;        value_reward = cent_SE_trial_plus2['value_reward'][idx]&amp;#10;        value_reward_plus2 = value_reward_plus2 + [value_reward + 2.0]&amp;#10;        value_reward_minus2 = value_reward_minus2 + [value_reward - 2.0]&amp;#10;    cent_SE_trial_plus2['value_reward'] = value_reward_plus2&amp;#10;    cent_SE_trial_minus2['value_reward'] = value_reward_minus2&amp;#10;    cent_SE = dict_merge([SE_trials, cent_SE_trial_plus2, cent_SE_trial_minus2]) #merge dictionaries while keeping values in list&amp;#10;    Amp = 1.0 &amp;#10;    cent_SE['category'] = value_repeat('Cent_SE_pos', len(cent_SE['value_reward']))&amp;#10;    if domain == 'loss':&amp;#10;        Amp = -1.0&amp;#10;        cent_SE['category'] = value_repeat('Cent_SE_neg', len(cent_SE['value_reward']))&amp;#10;    sv_reward = []&amp;#10;    for idx in range(len(cent_SE['p_reward'])):&amp;#10;        p = cent_SE['p_reward'][idx]&amp;#10;        A = cent_SE['ambiguity'][idx]&amp;#10;        v = cent_SE['value_reward'][idx]&amp;#10;        sv_reward = sv_reward + [(p-beta * A / 2) * Amp * abs(v)**alpha]&amp;#10;    cent_SE['SV_reward'] = sv_reward&amp;#10;    return cent_SE&amp;#10;&amp;#10;&amp;#10;def get_interm_trials(rows_extr, &amp;#10;                      alpha, &amp;#10;                      beta,&amp;#10;                      num_steps=2, &amp;#10;                      domain='gain'):&amp;#10;    full_int = {}&amp;#10;    SV_step = []&amp;#10;    for idx in range(len(rows_extr['SV_reward'])):&amp;#10;        reward = rows_extr['SV_reward'][idx]&amp;#10;        safe = rows_extr['SV_safe'][idx]&amp;#10;        SV_step = SV_step + [(reward-safe) / (num_steps + 1)]&amp;#10;    list_x = []&amp;#10;    for i in range(-num_steps - 1, num_steps + 1):&amp;#10;        if i != 0:&amp;#10;            list_x = list_x + [i]&amp;#10;    list_dict = []&amp;#10;    for x in list_x:&amp;#10;        interm = {}&amp;#10;        Amp = 1.0&amp;#10;        category = 'Int_pos'&amp;#10;        if domain == 'loss':&amp;#10;            Amp = -1.0&amp;#10;            category = 'Int'&amp;#10;        if x == -num_steps - 1:&amp;#10;            category = 'Zero_Reward'&amp;#10;        interm['category'] = value_repeat(category, len(rows_extr['category']))&amp;#10;        interm['p_reward'] = rows_extr['p_reward']&amp;#10;        interm['ambiguity'] = rows_extr['ambiguity']&amp;#10;        sv_reward = []&amp;#10;        for idx in range(len(SV_step)):&amp;#10;            safe = rows_extr['SV_safe'][idx]&amp;#10;            step = SV_step[idx]&amp;#10;            sv_reward = sv_reward + [safe + x * step]&amp;#10;        interm['SV_reward'] = sv_reward&amp;#10;        interm['value_safe'] = rows_extr['value_safe']&amp;#10;        interm['SV_safe'] = rows_extr['SV_safe']&amp;#10;&amp;#10;        value_reward = []&amp;#10;        for idx in range(len(interm['SV_reward'])):&amp;#10;            sv = interm['SV_reward'][idx]&amp;#10;            p = interm['p_reward'][idx]&amp;#10;            A = interm['ambiguity'][idx]&amp;#10;            value_reward = value_reward + [Amp * (abs(sv) / ((p) - (beta * A / 2)))**(1/alpha)]&amp;#10;        interm['value_reward'] = value_reward&amp;#10;        list_dict = list_dict + [interm]&amp;#10;    for k in list_dict[0]:&amp;#10;        dict_list = []&amp;#10;        for d in list_dict:&amp;#10;            dict_list = dict_list + [d[k]]&amp;#10;        full_int[k] = flatten(dict_list)&amp;#10;    return full_int&amp;#10;&amp;#10;&amp;#10;def gen_random_list(len):&amp;#10;    random_list = []&amp;#10;    for i in range(len):&amp;#10;        random_list = random_list + [round(random.random())]&amp;#10;    return random_list&amp;#10;&amp;#10;&amp;#10;def pavlovia_dict(dict,&amp;#10;                  domain='gain'):&amp;#10;    nb_trials = len(dict['value_safe'])&amp;#10;    column_order = ['crdm_sure_amt', 'crdm_sure_p', 'crdm_lott_top', 'crdm_lott_bot', 'crdm_lott_p', &amp;#10;                    'crdm_amb_lev', 'crdm_domain', 'crdm_img', 'crdm_nonzero_side']&amp;#10;    crdm_trials = {}&amp;#10;    crdm_trials['crdm_sure_amt'] = dict['value_safe']&amp;#10;    crdm_trials['crdm_sure_p'] = value_repeat(100, nb_trials)&amp;#10;    random_list = gen_random_list(nb_trials) # assign randomly top or bottom&amp;#10;    crdm_lott_top = []&amp;#10;    crdm_lott_bot = []&amp;#10;    crdm_nonzero_side = []&amp;#10;    for idx in range(len(random_list)):&amp;#10;        v = dict['value_reward'][idx]&amp;#10;        loc = random_list[idx]&amp;#10;        if loc == 1:&amp;#10;            crdm_lott_top = crdm_lott_top + [v]&amp;#10;            crdm_lott_bot = crdm_lott_bot + [0]&amp;#10;            crdm_nonzero_side = crdm_nonzero_side + ['top']&amp;#10;        elif loc == 0:&amp;#10;            crdm_lott_top = crdm_lott_top + [0]&amp;#10;            crdm_lott_bot = crdm_lott_bot + [v]&amp;#10;            crdm_nonzero_side = crdm_nonzero_side + ['bottom']&amp;#10;            crdm_trials['crdm_lott_top'] = crdm_lott_top&amp;#10;    crdm_trials['crdm_lott_bot'] = crdm_lott_bot&amp;#10;    crdm_trials['crdm_nonzero_side'] = crdm_nonzero_side&amp;#10;    crdm_lott_p = []&amp;#10;    crdm_amb_lev = []&amp;#10;    for idx in range(len(dict['p_reward'])):&amp;#10;        p = dict['p_reward'][idx]&amp;#10;        crdm_lott_p = crdm_lott_p + [round(100 * p)]&amp;#10;        a = dict['ambiguity'][idx]&amp;#10;        crdm_amb_lev = crdm_amb_lev + [round(100 * a)]&amp;#10;    crdm_trials['crdm_lott_p'] = crdm_lott_p&amp;#10;    crdm_trials['crdm_amb_lev'] = crdm_amb_lev   &amp;#10;    crdm_img = []&amp;#10;    for idx in range(len(crdm_trials['crdm_lott_p'])):&amp;#10;        p = crdm_trials['crdm_lott_p'][idx]&amp;#10;        a = crdm_trials['crdm_amb_lev'][idx]&amp;#10;        side = crdm_trials['crdm_nonzero_side'][idx]&amp;#10;        if a &gt; 0:&amp;#10;            crdm_img = crdm_img + ['ambig_' + str(a) + '.bmp']&amp;#10;        elif side == 'top':&amp;#10;            crdm_img = crdm_img + ['risk_red_' + str(p) + '.bmp']&amp;#10;        elif side == 'bottom':&amp;#10;            crdm_img = crdm_img + ['risk_blue_' + str(p) + '.bmp']&amp;#10;    crdm_trials['crdm_img'] = crdm_img&amp;#10;    crdm_trials['crdm_domain'] = value_repeat(domain, nb_trials)&amp;#10;    crdm_trials = order_keys(crdm_trials, column_order)&amp;#10;    return crdm_trials&amp;#10;&amp;#10;&amp;#10;def get_trials(p_options, &amp;#10;               amb_options, &amp;#10;               alpha, &amp;#10;               beta, &amp;#10;               ordered_keys=[], &amp;#10;               domain='gain'):&amp;#10;    rows_extr = get_extr_rows(p_options, domain=domain)&amp;#10;    rows_extr = add_ambig(rows_extr, amb_options)&amp;#10;    rows_extr = add_SV(rows_extr, alpha, beta, domain=domain)&amp;#10;    rows_extr = add_Vsafe(rows_extr, alpha,beta, domain=domain)&amp;#10;    rows_extr = order_keys(rows_extr, ordered_keys)&amp;#10;    #Subjective equality trials SE_neg == get_SE_trials(rows_extr, alpha, beta, domain='loss')&amp;#10;    #cent contains SE_neg within it... SE_neg not needed later on&amp;#10;    cent = get_cent_SE_trials(get_SE_trials(rows_extr, alpha, beta, domain=domain), alpha, beta, domain=domain)&amp;#10;    cent = order_keys(cent,ordered_keys)&amp;#10;    interm = get_interm_trials(rows_extr, alpha, beta, domain=domain)&amp;#10;    interm = order_keys(interm, ordered_keys)&amp;#10;    trials_list = [] #concatenate dictionaries&amp;#10;    trials_list.append(rows_extr)&amp;#10;    trials_list.append(interm)&amp;#10;    trials_list.append(cent)&amp;#10;    trials = dict_merge(trials_list)&amp;#10;    return round_to_50(trials)&amp;#10;&amp;#10;&amp;#10;def get_element_by_col(my_dict, row_nb):&amp;#10;    row_dict = dict.fromkeys(my_dict.keys())&amp;#10;    for c in my_dict.keys():&amp;#10;        row_dict[c] = my_dict[c][row_nb]&amp;#10;    return row_dict&amp;#10;&amp;#10;&amp;#10;def convert_list_dict(my_dict):&amp;#10;    my_list_dict = []&amp;#10;    nb_trials = len(my_dict[next(iter(my_dict))])&amp;#10;    for row_nb in range(nb_trials):&amp;#10;        row_dict = dict.fromkeys(my_dict.keys())&amp;#10;        row_dict = get_element_by_col(my_dict,row_nb)&amp;#10;        my_list_dict = my_list_dict + [row_dict]&amp;#10;    return my_list_dict&amp;#10;&amp;#10;#############################&amp;#10;&amp;#10;# round value_reward and value_safe to nearest 50 cents&amp;#10;trials_gain = get_trials(p_options, amb_options, alpha_pos, beta_pos, ordered_keys=ordered_keys, domain='gain')&amp;#10;trials_loss = get_trials(p_options, amb_options, alpha_neg, beta_neg, ordered_keys=ordered_keys, domain='loss')&amp;#10;&amp;#10;crdm_trials_gain = pavlovia_dict(trials_gain, domain='gain')&amp;#10;crdm_trials_loss = pavlovia_dict(trials_loss, domain='loss')&amp;#10;crdm_trials = dict_merge([crdm_trials_gain, crdm_trials_loss])" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="crdm_ricardo_gen_JS" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="crdm_santiago_py" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="import math&amp;#10;import matplotlib.pyplot as plt&amp;#10;import numpy as np&amp;#10;import os&amp;#10;import pandas as pd&amp;#10;&amp;#10;###Functions###############&amp;#10;&amp;#10;def get_extreme(p_options, &amp;#10;                domain='gain'): &amp;#10;    ###Obtains extreme gain/loss for each probability&amp;#10;    &quot;&quot;&quot;&amp;#10;    Inputs: &amp;#10;        - p_options = list of probability values (float)&amp;#10;    Output:&amp;#10;        - dict containing highest possible gain or loss for each probability ($50 or -$50)&amp;#10;    &quot;&quot;&quot;&amp;#10;    extr = {}&amp;#10;    V = Vmax #default gain domain (max gain)&amp;#10;    if domain == 'loss': #loss domain &amp;#10;        V = Vmin #assign min value (max loss)&amp;#10;    for p in p_options: #iterate through probability levels&amp;#10;        extr[p] = V #assign max value (gain) or min value (loss) for each probability&amp;#10;    return extr&amp;#10;&amp;#10;def get_extr_df(extr_dict, &amp;#10;                domain='gain'):&amp;#10;    ###Create DataFrame of extreme values for gain/loss trial probabilities&amp;#10;    &quot;&quot;&quot;&amp;#10;    Inputs:&amp;#10;        - extr_dict = dict containing highest possible gain or loss for each probability ($50 or -$50) &amp;#10;    Output:&amp;#10;        - Dataframe containing column of extreme values for all trials&amp;#10;    &quot;&quot;&quot;&amp;#10;    df_app = pd.DataFrame(extr_dict.items(), #all columns names and values&amp;#10;                          columns=['p_reward', 'value_reward']) #add extra columns&amp;#10;    Extr_df = pd.concat([empty_df, df_app], ignore_index=True)&amp;#10;    category = 'Extr_pos'&amp;#10;    if domain == 'loss':&amp;#10;        category = 'Extr_neg'&amp;#10;    Extr_df['category'] = category&amp;#10;    Extr_df['ambiguity'] = A_null&amp;#10;    return Extr_df&amp;#10;&amp;#10;def add_ambig_extr(df, &amp;#10;                   amb_options, &amp;#10;                   domain='gain'):&amp;#10;    ###Add ambiguity trials to df&amp;#10;    &quot;&quot;&quot;&amp;#10;    Inputs:&amp;#10;        - df&amp;#10;        - amb_options = list of possible ambiguity values&amp;#10;    Output:&amp;#10;        - Dataframe with appended ambiguity max values&amp;#10;    &quot;&quot;&quot;&amp;#10;    amb_dict = {amb_prob: amb_options}&amp;#10;    df_app = pd.DataFrame(amb_dict.items(), &amp;#10;                          columns=['p_reward', 'ambiguity'])&amp;#10;    df_app = df_app.explode('ambiguity') #flatten ambiguity column&amp;#10;    df_app['category'] = df['category'] &amp;#10;    if domain == 'gain': #gain domain&amp;#10;        df_app['value_reward'] = Vmax #Max gain = $50&amp;#10;    else: #loss domain&amp;#10;        df_app['value_reward'] = Vmin #Max loss = -$50&amp;#10;    df = pd.concat([df, df_app], ignore_index=True)&amp;#10;    return df&amp;#10;&amp;#10;def append_SVreward(df, &amp;#10;                    alpha, &amp;#10;                    beta, &amp;#10;                    domain='gain'):&amp;#10;    ###Calculate SV of lotteries given Ss alpha and beta&amp;#10;    &quot;&quot;&quot;&amp;#10;    Inputs:&amp;#10;        - df&amp;#10;        - alpha&amp;#10;        - beta&amp;#10;    Output:&amp;#10;        - Dataframe contain new SV reward values&amp;#10;    &quot;&quot;&quot;&amp;#10;    Amp = 1.0&amp;#10;    if domain == 'loss':&amp;#10;        Amp = -1.0&amp;#10;    df['SV_reward'] = (df['p_reward'] - beta * df['ambiguity']/2) * Amp * (abs(df['value_reward']))**alpha&amp;#10;    return df&amp;#10;&amp;#10;def append_Vsafe(df, &amp;#10;                 alpha, &amp;#10;                 beta, &amp;#10;                 domain='gain'): &amp;#10;    ###Calculate SV of safe options given Ss alpha and beta&amp;#10;    &quot;&quot;&quot;&amp;#10;    Inputs:&amp;#10;        - df&amp;#10;        - alpha&amp;#10;        - beta&amp;#10;    Output:&amp;#10;        - Dataframe&amp;#10;    &quot;&quot;&quot;&amp;#10;    Amp = 1.0&amp;#10;    if domain == 'loss':&amp;#10;        Amp = -1.0&amp;#10;    df['SV_New_Safe'] = 0.5 * df['SV_reward']&amp;#10;    df['value_lott_SE'] = Amp * (abs(df['SV_New_Safe']) / (df['p_reward'] - beta * df['ambiguity']/2))**(1/alpha)&amp;#10;    df['value_safe'] = Amp * (abs(df['SV_New_Safe']))**(1/alpha)&amp;#10;    return df&amp;#10;&amp;#10;def calculate_value_reward(df, &amp;#10;                           alpha, &amp;#10;                           beta,&amp;#10;                           domain='gain'):&amp;#10;    ###Calculate value of lotteries for new SV with same SVdelta&amp;#10;    &quot;&quot;&quot;&amp;#10;    Inputs:&amp;#10;        - df&amp;#10;        - alpha&amp;#10;        - beta&amp;#10;    Output:&amp;#10;        - Dataframe&amp;#10;    &quot;&quot;&quot;&amp;#10;    new_rows = []&amp;#10;    for index, row in df.iterrows():&amp;#10;        SV = row['SV_reward'] &amp;#10;        value_safe = row['value_safe'] &amp;#10;        p = row['p_reward']&amp;#10;        A = row['ambiguity'] &amp;#10;        if A != 0:&amp;#10;            p = 0.50&amp;#10;        if domain == 'gain':&amp;#10;            if SV &lt; 0.0: &amp;#10;                continue    &amp;#10;            value_reward = (SV / (p - beta * A / 2))**(1/alpha)&amp;#10;            if (value_reward &lt; 100) and (value_reward &gt;= 0.0):&amp;#10;                new_rows.append({'category': row['category'], 'SV_reward': SV, 'p_reward': p, 'ambiguity': A, 'value_safe': value_safe, 'value_reward': value_reward}) &amp;#10;                #calculated values are used to create new dictionary for each combination, and collected in new rows list &amp;#10;                new_df = pd.DataFrame(new_rows, columns=['category', 'p_reward','ambiguity', 'value_reward', 'SV_reward', 'value_safe']) #new DF from list&amp;#10;                new_df = new_df.round(2)&amp;#10;        else: #loss domain&amp;#10;            if SV &gt; 0.0: &amp;#10;                continue    &amp;#10;            value_reward = -((abs(SV) / (p - beta * A / 2))**(1/alpha))&amp;#10;            if (value_reward &gt;- 100) and (value_reward &lt;= 0.0):&amp;#10;                new_rows.append({'category': row['category'], 'SV_reward': SV, 'p_reward': p, 'ambiguity': A, 'value_safe': value_safe, 'value_reward': value_reward}) &amp;#10;                new_df = pd.DataFrame(new_rows, columns=['category', 'p_reward', 'ambiguity', 'value_reward', 'SV_reward', 'value_safe'])&amp;#10;                new_df = new_df.round(2) &amp;#10;    return new_df&amp;#10;&amp;#10;def determine_nonzero_side(row):&amp;#10;    ###Determine nonzero side of lottery&amp;#10;    &quot;&quot;&quot;&amp;#10;    Inputs:&amp;#10;        - row = current row values for each column&amp;#10;    Output:&amp;#10;        - String containing &quot;top&quot; or &quot;bottom&quot;&amp;#10;    &quot;&quot;&quot;&amp;#10;    if row['crdm_lott_top'] != 0.00: #current trial lottery top is not zero&amp;#10;        return 'top' #red is non-zero side&amp;#10;    else:&amp;#10;        return 'bottom' #blue is non-zero side&amp;#10;&amp;#10;def determine_risk_image_file(row):&amp;#10;    ###Selects lottery image&amp;#10;    &quot;&quot;&quot;&amp;#10;    Inputs:&amp;#10;        - row = current row values for each column&amp;#10;    Output:&amp;#10;        - f[0] or f[1] = risk trial image filename&amp;#10;    &quot;&quot;&quot;&amp;#10;    for p, f in risk_images.items():&amp;#10;        if row['crdm_lott_p'] == p and row['crdm_nonzero_side'] == 'top':&amp;#10;            return  f[1] #2nd idx for red&amp;#10;        elif row['crdm_lott_p'] == p and row['crdm_nonzero_side'] == 'bottom':&amp;#10;            return f[0] #1st idx dict for blue&amp;#10;&amp;#10;def get_interm(df, &amp;#10;               df_safe_pos, &amp;#10;               beta,&amp;#10;               alpha, &amp;#10;               num_steps=2, &amp;#10;               domain='gain'):&amp;#10;    Amp = 1.0&amp;#10;    if domain == 'loss':&amp;#10;        Amp = -1.0&amp;#10;    df_return = pd.DataFrame([], columns=list(df))&amp;#10;    df['SVrange'] = df['SV_reward'] - df['SV_New_Safe']&amp;#10;    df['SVstep'] =  df['SVrange']/(num_steps + 1)&amp;#10;    list_x = [i for i in range(-num_steps - 1, num_steps + 1) if i != 0]&amp;#10;    for x in list_x:&amp;#10;        df_int = df[['category', 'p_reward', 'ambiguity']].copy()&amp;#10;        if x == -num_steps - 1:&amp;#10;            df_int['category'] = 'Zero_Reward'&amp;#10;        df_int['SV_reward'] = df['SV_New_Safe'] + x * df['SVstep']&amp;#10;        df_int['value_reward'] = Amp*(abs(df_int['SV_reward']) / (df_int['p_reward'] - beta * df_int['ambiguity']/2))**(1/alpha)&amp;#10;        df_int = pd.merge(df_int, df_safe_pos, on=['p_reward','ambiguity'])&amp;#10;        df_return = pd.concat([df_return, df_int], ignore_index=True)&amp;#10;    return df_return&amp;#10;&amp;#10;########################&amp;#10;&amp;#10;&amp;#10;subid = expInfo['participant'] #subject id&amp;#10;p_options = [0.13, 0.25, 0.38, 0.5, 0.75] #possible probability values (lott)&amp;#10;amb_options = [0.24, 0.5, 0.74] #possible portions of probability obscured (lott)&amp;#10;amb_prob = 0.5 #probability for all ambiguity trials&amp;#10;A_null = 0.0 #zero ambiguity&amp;#10;Vmax = 50.0 #maximum possible payment&amp;#10;Vmin = -50.0 #minimum possible payment&amp;#10;Vsafe_pos = 5.0 #old safe option in positive trials&amp;#10;Vsafe_neg = -5.0 #old safe option in negative trials&amp;#10;desired_trials = 72 #number of trials needed for each domain&amp;#10;empty_df = pd.DataFrame([], columns=['category', 'p_reward', 'value_reward']) #template df&amp;#10;&amp;#10;amb_images = {} #ambiguity images filesnames&amp;#10;risk_images = {} #risk images filesnames&amp;#10;for img_type in [&quot;amb_images&quot;, &quot;risk_images&quot;]: #flexibly obtain image filenames for ambiguity and risk trials&amp;#10;    if img_type == &quot;amb_images&quot;: #ambiguity trial images&amp;#10;        for option in amb_options:&amp;#10;            amb_images[int(option*100)] = [&quot;ambig_{0}.bmp&quot;.format(str(int(option*100)))]&amp;#10;    else: #risk trial images&amp;#10;        for option in p_options:&amp;#10;            risk_images[int(option*100)] = [&quot;risk_blue_{0}.bmp&quot;.format(str(int(option*100))), &amp;#10;                                            &quot;risk_red_{0}.bmp&quot;.format(str(int(option*100)))]    &amp;#10;&amp;#10;&amp;#10;###GAIN DOMAIN###&amp;#10;extrpos = get_extreme(p_options) #dict of extreme gain values for each probability ($50)&amp;#10;post_mean_gain = rg.get_post_mean(np.exp(g_log_post), g_sets.param) #posterior mean for gain&amp;#10;alpha_pos, beta_pos = post_mean_gain[0], post_mean_gain[1] #parameters for gains&amp;#10;df_pos = get_extr_df(extrpos)&amp;#10;df_pos = add_ambig_extr(df_pos, amb_options)&amp;#10;df_pos = append_SVreward(df_pos, alpha_pos, beta_pos) #append SV of lottery trials to df&amp;#10;df_pos = append_Vsafe(df_pos, alpha_pos, beta_pos) #append SV of safe trials to df&amp;#10;#Safe option dataframe for merging multiple dataframes&amp;#10;df_safe_pos = df_pos[['p_reward', 'ambiguity', 'SV_New_Safe', 'value_lott_SE', 'value_safe']].copy()&amp;#10;#Define trials of subjective equality (SE)&amp;#10;df_SE_pos = df_pos[['category', 'p_reward', 'ambiguity', 'value_lott_SE', 'SV_New_Safe']].copy()&amp;#10;df_SE_pos['category'] = 'SE_pos'&amp;#10;df_SE_pos = df_SE_pos.rename(columns={'value_lott_SE': 'value_reward'})&amp;#10;df_SE_pos['value_safe'] = df_safe_pos['value_safe']&amp;#10;df_SE_pos = df_SE_pos.rename(columns={'SV_New_Safe': 'SV_reward'})&amp;#10;#Center around trial of subjective equality&amp;#10;df_cent_pos = df_SE_pos.copy()&amp;#10;df_cent_pos['category'] = 'Cent_SE_pos'&amp;#10;df_adjusted_pos = df_cent_pos.copy()&amp;#10;df_adjusted_pos['value_reward'] = df_adjusted_pos['value_reward'] + 2.0&amp;#10;df_adjusted_neg = df_cent_pos.copy()&amp;#10;df_adjusted_neg['value_reward'] = df_adjusted_neg['value_reward'] - 2.0&amp;#10;df_cent_pos = pd.concat([df_cent_pos, df_adjusted_pos, df_adjusted_neg], ignore_index=True)&amp;#10;df_cent_pos = append_SVreward(df_cent_pos, alpha_pos, beta_pos) #centered SE DF&amp;#10;&amp;#10;df_intpos_temp = df_pos.copy()&amp;#10;df_intpos_temp['category'] = 'Int_pos'&amp;#10;df_int_pos = get_interm(df_intpos_temp, df_safe_pos, beta_pos, alpha_pos, num_steps=2)&amp;#10;&amp;#10;df_Trials_gains = pd.concat([df_pos, df_int_pos, df_cent_pos], ignore_index=True) #concatenate three dataframes&amp;#10;df_Trials_gains['SV_New_Safe'] = df_Trials_gains['value_safe']**alpha_pos&amp;#10;df_Trials_gains['deltaSV'] = df_Trials_gains['SV_reward'] - df_Trials_gains['SV_New_Safe']&amp;#10;df_Trials_gains = df_Trials_gains.drop(columns=['value_lott_SE'])&amp;#10;&amp;#10;#Convert selected columns to numeric values to be able to round&amp;#10;columns_to_convert = ['value_reward', 'value_safe', 'SV_reward', 'SV_New_Safe', 'deltaSV']&amp;#10;df_Trials_gains[columns_to_convert] = df_Trials_gains[columns_to_convert].apply(pd.to_numeric, errors='coerce')&amp;#10;df_Trials_gains = df_Trials_gains.round(2)&amp;#10;&amp;#10;if len(df_Trials_gains) &lt; desired_trials: #current number fewer than desired number of trials&amp;#10;    trials_needed = desired_trials - len(df_Trials_gains) #calculate number of extra trials for each category (gains and losses)&amp;#10;    trials_needed_gains = math.ceil(trials_needed)  #round up to nearest integer&amp;#10;    additional_trials_gains = df_pos.sample(n=trials_needed_gains, replace=True) #add new trials from extremes &amp;#10;    df_Trials_gains = pd.concat([df_Trials_gains, additional_trials_gains], ignore_index=True) # Concatenate extra trials to existing DataFrame&amp;#10;    df_Trials_gains = df_Trials_gains.drop(columns=['value_lott_SE'])&amp;#10;if len(df_Trials_gains) &gt; desired_trials: #current number greater than desired number of trials&amp;#10;    trials_to_delete = len(df_Trials_gains) - desired_trials&amp;#10;    rows_to_delete = df_Trials_gains[df_Trials_gains['category'] == 'Cent_SE_pos'].sample(n=trials_to_delete) #randomly sample rows to delete&amp;#10;    df_Trials_gains = df_Trials_gains.drop(rows_to_delete.index) #remove sampled rows from DataFrame&amp;#10;&amp;#10;df_Trials_gains['value_reward'] = df_Trials_gains['value_reward'].apply(lambda x: round(x * 2) / 2) #round to nearest 50 cents&amp;#10;df_Trials_gains['value_safe'] = df_Trials_gains['value_safe'].apply(lambda x: round(x * 2) / 2)&amp;#10;#Update value_safe and value_reward when it's 0. Note that the SV_reward for those trials will stay as previously calculate as 0.0&amp;#10;df_Trials_gains.loc[df_Trials_gains['value_safe']==0, 'value_safe'] = 0.5&amp;#10;df_Trials_gains.loc[df_Trials_gains['value_reward']==0, 'value_reward'] = 0.5&amp;#10;&amp;#10;#Format to match previous PsychoPy input csv and add lott_top and lott_bot values&amp;#10;crdm_trials_gains = df_Trials_gains.copy()&amp;#10;crdm_trials_gains['category'] = 'gain'&amp;#10;crdm_trials_gains = crdm_trials_gains.sort_values('p_reward', ascending=True).reset_index(drop=True)&amp;#10;crdm_trials_gains = crdm_trials_gains.drop(columns=['SV_reward', 'SV_New_Safe', 'deltaSV'])&amp;#10;crdm_trials_gains['ambiguity'] = (crdm_trials_gains['ambiguity'] * 100).astype(int)&amp;#10;crdm_trials_gains['p_reward'] = (crdm_trials_gains['p_reward'] * 100).astype(int)&amp;#10;crdm_trials_gains = crdm_trials_gains.rename(columns={'value_safe': 'crdm_sure_amt',&amp;#10;                                                      'value_reward': 'crdm_lott',&amp;#10;                                                      'ambiguity': 'crdm_amb_lev',&amp;#10;                                                      'p_reward': 'crdm_lott_p', &amp;#10;                                                      'category': 'crdm_domain'})&amp;#10;crdm_trials_gains['crdm_sure_p'] = 100&amp;#10;column_order = ['crdm_sure_amt', 'crdm_sure_p', 'crdm_lott', 'crdm_lott_p', 'crdm_amb_lev', 'crdm_domain'] #reordering columns&amp;#10;crdm_trials_gains = crdm_trials_gains[column_order]&amp;#10;crdm_trials_gains = crdm_trials_gains.sort_values(by=['crdm_lott_p', 'crdm_amb_lev'], ascending=[True, True])&amp;#10;zero_ambiguity_rows = crdm_trials_gains[crdm_trials_gains['crdm_amb_lev'] == 0] #find rows with zero 'crdm_amb_lev'&amp;#10;non_zero_ambiguity_rows = crdm_trials_gains[crdm_trials_gains['crdm_amb_lev'] != 0] #find rows with nonzero 'crdm_amb_lev'&amp;#10;crdm_trials_gains = pd.concat([zero_ambiguity_rows, non_zero_ambiguity_rows], ignore_index=True) #join zero ambiguity trials first&amp;#10;random_assignments = np.random.choice(['crdm_lott_top', 'crdm_lott_bot'], size=len(crdm_trials_gains))&amp;#10;crdm_trials_gains['crdm_lott_top'] = np.where(random_assignments == 'crdm_lott_top', crdm_trials_gains['crdm_lott'], 0)&amp;#10;crdm_trials_gains['crdm_lott_bot'] = np.where(random_assignments == 'crdm_lott_bot', crdm_trials_gains['crdm_lott'], 0)&amp;#10;column_order = ['crdm_sure_amt', 'crdm_sure_p', 'crdm_lott_top', 'crdm_lott_bot', 'crdm_lott_p', 'crdm_amb_lev', 'crdm_domain']&amp;#10;crdm_trials_gain = crdm_trials_gains[column_order]&amp;#10;&amp;#10;&amp;#10;&amp;#10;###LOSS DOMAIN###&amp;#10;extrneg = get_extreme(p_options, domain='loss')&amp;#10;post_mean_loss = rl.get_post_mean(np.exp(l_log_post), l_sets.param)&amp;#10;alpha_neg, beta_neg = post_mean_loss[0], post_mean_loss[1]&amp;#10;df_neg = get_extr_df(extrneg, domain='loss')&amp;#10;df_neg = add_ambig_extr(df_neg, amb_options, domain='loss')&amp;#10;df_neg = append_SVreward(df_neg, alpha_neg, beta_neg, domain='loss')&amp;#10;df_neg = append_Vsafe(df_neg, alpha_neg, beta_neg, domain='loss')&amp;#10;df_safe_neg = df_neg[['p_reward', 'ambiguity', 'SV_New_Safe', 'value_lott_SE', 'value_safe']].copy()&amp;#10;df_SE_neg = df_neg[['category', 'p_reward', 'ambiguity', 'value_lott_SE', 'SV_New_Safe']].copy()&amp;#10;df_SE_neg['category'] = 'SE_neg'&amp;#10;df_SE_neg = df_SE_neg.rename(columns={'value_lott_SE': 'value_reward'})&amp;#10;df_SE_neg['value_safe'] = df_safe_neg['value_safe']&amp;#10;df_SE_neg = df_SE_neg.rename(columns={'SV_New_Safe': 'SV_reward'})&amp;#10;df_cent_neg = df_SE_neg.copy()&amp;#10;df_cent_neg['category'] = 'Cent_SE_neg'&amp;#10;df1_adjusted_pos = df_cent_neg.copy()&amp;#10;df1_adjusted_pos['value_reward'] = df1_adjusted_pos['value_reward'] + 2.0&amp;#10;df1_adjusted_neg = df_cent_neg.copy()&amp;#10;df1_adjusted_neg['value_reward'] = df1_adjusted_neg['value_reward'] - 2.0&amp;#10;df_cent_neg = pd.concat([df_cent_neg, df1_adjusted_pos, df1_adjusted_neg], ignore_index=True)&amp;#10;df_cent_neg = append_SVreward(df_cent_neg, alpha_neg, beta_neg, domain='loss')&amp;#10;&amp;#10;df_intneg_temp = df_neg.copy()&amp;#10;df_intneg_temp['category'] = 'Int_neg'&amp;#10;df_int_neg = get_interm(df_intneg_temp, df_safe_neg, beta_neg, alpha_neg, num_steps=2, domain='loss')&amp;#10;&amp;#10;df_Trials_losses = pd.concat([df_neg,df_cent_neg, df_int_neg], ignore_index=True)&amp;#10;df_Trials_losses['SV_New_Safe'] = -abs(df_Trials_gains['value_safe'])**alpha_pos&amp;#10;df_Trials_losses['deltaSV'] = df_Trials_losses['SV_reward'] - df_Trials_losses['SV_New_Safe']&amp;#10;df_Trials_losses = df_Trials_losses.drop(columns=['value_lott_SE'])&amp;#10;#df_Trials_losses = df_Trials_losses.round(2)&amp;#10;&amp;#10;columns_to_convert = ['value_reward', 'value_safe', 'SV_reward']&amp;#10;df_Trials_losses[columns_to_convert] = df_Trials_losses[columns_to_convert].apply(pd.to_numeric, errors='coerce')&amp;#10;df_Trials_losses = df_Trials_losses.round(2)&amp;#10;&amp;#10;if len(df_Trials_losses) &lt; desired_trials:&amp;#10;    trials_needed = desired_trials - len(df_Trials_losses)&amp;#10;    trials_needed_losses = math.floor(trials_needed)&amp;#10;    additional_trials_losses = df_neg.sample(n=trials_needed_gains, replace=True)&amp;#10;    df_Trials_losses = pd.concat([df_Trials_losses, additional_trials_losses], ignore_index=True)&amp;#10;    df_Trials_losses = df_Trials_losses.drop(columns=['value_lott_SE'])&amp;#10;if len(df_Trials_losses) &gt; desired_trials:&amp;#10;    trials_to_delete = len(df_Trials_losses) - desired_trials&amp;#10;    rows_to_delete = df_Trials_losses[df_Trials_losses['category'] == 'Cent_SE_neg'].sample(n=trials_to_delete)&amp;#10;    df_Trials_losses = df_Trials_losses.drop(rows_to_delete.index)&amp;#10;&amp;#10;df_Trials_losses = df_Trials_losses.reset_index(drop=True)&amp;#10;df_Trials_losses['value_reward'] = df_Trials_losses['value_reward'].apply(lambda x: round(x * 2) / 2)&amp;#10;df_Trials_losses['value_safe'] = df_Trials_losses['value_safe'].apply(lambda x: round(x * 2) / 2)&amp;#10;df_Trials_losses.loc[df_Trials_losses['value_safe']==0, 'value_safe'] = -0.5&amp;#10;df_Trials_losses.loc[df_Trials_losses['value_reward']==0, 'value_reward'] = -0.5&amp;#10;&amp;#10;crdm_trials_losses = df_Trials_losses.copy()&amp;#10;crdm_trials_losses = crdm_trials_losses.sort_values('p_reward', ascending=True).reset_index(drop=True)&amp;#10;crdm_trials_losses['category'] = 'loss'&amp;#10;crdm_trials_losses = crdm_trials_losses.drop(columns=['SV_reward', 'SV_New_Safe', 'deltaSV'])&amp;#10;crdm_trials_losses['ambiguity'] = (crdm_trials_losses['ambiguity'] * 100).astype(int)&amp;#10;crdm_trials_losses['p_reward'] = (crdm_trials_losses['p_reward'] * 100).astype(int)&amp;#10;crdm_trials_losses = crdm_trials_losses.rename(columns={'value_safe': 'crdm_sure_amt',&amp;#10;                                                        'value_reward': 'crdm_lott',&amp;#10;                                                        'ambiguity': 'crdm_amb_lev',&amp;#10;                                                        'p_reward': 'crdm_lott_p', &amp;#10;                                                        'category': 'crdm_domain'})&amp;#10;crdm_trials_losses['crdm_sure_p'] = 100&amp;#10;column_order = ['crdm_sure_amt', 'crdm_sure_p', 'crdm_lott', 'crdm_lott_p', 'crdm_amb_lev', 'crdm_domain']&amp;#10;crdm_trials_losses = crdm_trials_losses[column_order]&amp;#10;crdm_trials_losses = crdm_trials_losses.sort_values(by=['crdm_lott_p', 'crdm_amb_lev'], ascending=[True,True])&amp;#10;zero_ambiguity_rows_loss = crdm_trials_losses[crdm_trials_losses['crdm_amb_lev'] == 0]&amp;#10;non_zero_ambiguity_rows_loss = crdm_trials_losses[crdm_trials_losses['crdm_amb_lev'] != 0]&amp;#10;crdm_trials_losses = pd.concat([zero_ambiguity_rows_loss, non_zero_ambiguity_rows_loss], ignore_index=True)&amp;#10;random_assignments = np.random.choice(['crdm_lott_top', 'crdm_lott_bot'], size=len(crdm_trials_losses))&amp;#10;crdm_trials_losses['crdm_lott_top'] = np.where(random_assignments == 'crdm_lott_top', crdm_trials_losses['crdm_lott'], 0)&amp;#10;crdm_trials_losses['crdm_lott_bot'] = np.where(random_assignments == 'crdm_lott_bot', crdm_trials_losses['crdm_lott'], 0)&amp;#10;column_order = ['crdm_sure_amt', 'crdm_sure_p', 'crdm_lott_top', 'crdm_lott_bot', 'crdm_lott_p', 'crdm_amb_lev', 'crdm_domain']&amp;#10;crdm_trials_loss = crdm_trials_losses[column_order]&amp;#10;&amp;#10;&amp;#10;#Join GAIN &amp; LOSS DataFrames and format for trial input CSV&amp;#10;crdm_trials = pd.concat([crdm_trials_gain, crdm_trials_loss], ignore_index=True)&amp;#10;crdm_trials['crdm_nonzero_side'] = crdm_trials.apply(determine_nonzero_side, axis=1) #create &quot;crdm_nonzero_side&amp;#10;crdm_trials['crdm_img'] = crdm_trials.apply(determine_risk_image_file, axis=1) #create 'crdm_img' column&amp;#10;column_order = ['crdm_sure_amt', 'crdm_sure_p', 'crdm_lott_top', 'crdm_lott_bot', 'crdm_lott_p', 'crdm_amb_lev', 'crdm_domain', 'crdm_img', 'crdm_nonzero_side']&amp;#10;crdm_trials = crdm_trials[column_order]&amp;#10;&amp;#10;#Save adaptive CSV to subject-specific folder&amp;#10;crdm_trials_csv = 'data/{0}/session{1}/{0}-{1}_ADOtrials.csv'.format(subid, expInfo['session']) #csv location/format&amp;#10;crdm_trials.to_csv(crdm_trials_csv, float_format='%.2f', index=False) #saving csv" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="crdm_santiago_py" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="crdm_pract2_feedback">
      <RoutineSettingsComponent name="crdm_pract2_feedback" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_pract2_feedback" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="crdm_pract2_feedback_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((crdm_pract2_key === undefined)) {&amp;#10;    crdm_msg2 = &quot;NO RESPONSE&quot;;&amp;#10;} else {&amp;#10;    if (crdm_pract2_sure_key) {&amp;#10;        crdm_msg2 = (&quot;CERTAIN $&quot; + format(crdm_sure_amt2.toString()));&amp;#10;    } else {&amp;#10;        crdm_msg2 = &quot;LOTTERY&quot;;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if len(crdm_pract2_key) == 0: #Ss did not respond&amp;#10;    crdm_msg2 = &quot;NO RESPONSE&quot;&amp;#10;elif crdm_pract2_sure_key: #Ss chose sure amt&amp;#10;    crdm_msg2 = &quot;CERTAIN $&quot; + str(format(crdm_sure_amt2))&amp;#10;else: #Ss chose lottery&amp;#10;    crdm_msg2 = &quot;LOTTERY&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="crdm_pract2_feedback_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="crdm_pract2_feedback_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_pract2_feedback_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$crdm_msg2" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="crdm_pract2_conf">
      <RoutineSettingsComponent name="crdm_pract2_conf" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_pract2_conf" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="crdm_pract2_conf_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((crdm_pract2_key === undefined))  {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;conf1_color = [0, 0, 0];&amp;#10;conf2_color = [0, 0, 0];&amp;#10;conf3_color = [0, 0, 0];&amp;#10;conf4_color = [0, 0, 0];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#Ss did not respond&amp;#10;if len(crdm_pract2_key) == 0: &amp;#10;    continueRoutine = False&amp;#10;&amp;#10;#set default gray for all four response boxes&amp;#10;conf1_color = [0, 0, 0] &amp;#10;conf2_color = [0, 0, 0]&amp;#10;conf3_color = [0, 0, 0]&amp;#10;conf4_color = [0, 0, 0]" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="#resp is received&amp;#10;crdm_pract_conf_key = crdm_pract2_conf_resp.keys&amp;#10;if len(crdm_pract_conf_key) == 1:&amp;#10;    #not at all confident&amp;#10;    if crdm_pract_conf_key == &quot;1&quot;:&amp;#10;        #change box color to indicate selection&amp;#10;        conf1_color = &quot;darkgray&quot; &amp;#10;        conf2_color = [0,0,0]&amp;#10;        conf3_color = [0,0,0]&amp;#10;        conf4_color = [0,0,0]&amp;#10;    #less confident&amp;#10;    elif crdm_pract_conf_key == &quot;2&quot;: &amp;#10;        conf1_color = [0,0,0]&amp;#10;        conf2_color = &quot;darkgray&quot;&amp;#10;        conf3_color = [0,0,0]&amp;#10;        conf4_color = [0,0,0]&amp;#10;    #somewhat confident&amp;#10;    elif crdm_pract_conf_key == &quot;3&quot;: &amp;#10;        conf1_color = [0,0,0]&amp;#10;        conf2_color = [0,0,0]&amp;#10;        conf3_color = &quot;darkgray&quot;&amp;#10;        conf4_color = [0,0,0]&amp;#10;    #very confident&amp;#10;    elif crdm_pract_conf_key == &quot;4&quot;: &amp;#10;        conf1_color = [0,0,0]&amp;#10;        conf2_color = [0,0,0]&amp;#10;        conf3_color = [0,0,0]&amp;#10;        conf4_color = &quot;darkgray&quot;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="crdm_pract_conf_key = crdm_pract2_conf_resp.keys;&amp;#10;if (!(crdm_pract_conf_key == undefined) &amp;&amp; (crdm_pract_conf_key.length === 1)) {&amp;#10;    if ((crdm_pract_conf_key === &quot;1&quot;)) {&amp;#10;        conf1_color = &quot;darkgray&quot;;&amp;#10;        conf2_color = [0, 0, 0];&amp;#10;        conf3_color = [0, 0, 0];&amp;#10;        conf4_color = [0, 0, 0];&amp;#10;    } else {&amp;#10;        if ((crdm_pract_conf_key === &quot;2&quot;)) {&amp;#10;            conf1_color = [0, 0, 0];&amp;#10;            conf2_color = &quot;darkgray&quot;;&amp;#10;            conf3_color = [0, 0, 0];&amp;#10;            conf4_color = [0, 0, 0];&amp;#10;        } else {&amp;#10;            if ((crdm_pract_conf_key === &quot;3&quot;)) {&amp;#10;                conf1_color = [0, 0, 0];&amp;#10;                conf2_color = [0, 0, 0];&amp;#10;                conf3_color = &quot;darkgray&quot;;&amp;#10;                conf4_color = [0, 0, 0];&amp;#10;            } else {&amp;#10;                if ((crdm_pract_conf_key === &quot;4&quot;)) {&amp;#10;                    conf1_color = [0, 0, 0];&amp;#10;                    conf2_color = [0, 0, 0];&amp;#10;                    conf3_color = [0, 0, 0];&amp;#10;                    conf4_color = &quot;darkgray&quot;;&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="conf1_color = [0, 0, 0];&amp;#10;conf2_color = [0, 0, 0];&amp;#10;conf3_color = [0, 0, 0];&amp;#10;conf4_color = [0, 0, 0];&amp;#10;&amp;#10;crdm_conf1.setFillColor(new util.Color(conf1_color), false);&amp;#10;crdm_conf2.setFillColor(new util.Color(conf2_color), false);&amp;#10;crdm_conf3.setFillColor(new util.Color(conf3_color), false);&amp;#10;crdm_conf4.setFillColor(new util.Color(conf4_color), false);&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="crdm_pract2_conf_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="crdm_pract2_conf_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_pract2_conf_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="How confident are you in your choice?" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="crdm_pract2_conf1" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$conf1_color" valType="color" updates="set every frame" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="10" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="crdm_pract2_conf1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.6, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="crdm_pract2_conf1_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_pract2_conf1_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.6, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Not at all&amp;#10;confident&amp;#10;&amp;#10;1" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="crdm_pract2_conf2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$conf2_color" valType="color" updates="set every frame" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="10" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="crdm_pract2_conf2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.2, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="crdm_pract2_conf2_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_pract2_conf2_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.2, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Less&amp;#10;confident&amp;#10;&amp;#10;2" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="crdm_pract2_conf3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$conf3_color" valType="color" updates="set every frame" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="10" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="crdm_pract2_conf3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.2, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="crdm_pract2_conf3_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_pract2_conf3_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.2, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Somewhat&amp;#10;confident&amp;#10;&amp;#10;3" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="crdm_pract2_conf4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$conf4_color" valType="color" updates="set every frame" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="10" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="crdm_pract2_conf4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.6, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="crdm_pract2_conf4_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_pract2_conf4_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.6, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Very&amp;#10;confident&amp;#10;&amp;#10;4" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="crdm_pract2_conf_resp" plugin="None">
        <Param val="'1', '2', '3', '4'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="crdm_pract2_conf_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="crdm_pract2_trial">
      <RoutineSettingsComponent name="crdm_pract2_trial" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_pract2_trial" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="crdm_pract2_trial_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="#position of certain amount option&amp;#10;crdm_sure_pos2 = [] &amp;#10;crdm_sure_resp2 = []&amp;#10;crdm_crdm_msg2 = &quot;&quot;&amp;#10;&amp;#10;#stimuli positions and respective responses&amp;#10;#left/right screen locations&amp;#10;crdm_pos2 = [[-0.5, 0], [0.5, 0]] &amp;#10;crdm_resp2 = [&quot;1&quot;, &quot;2&quot;] #1 = left, 2 = right" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="crdm_sure_pos2 = [];&amp;#10;crdm_sure_resp2 = [];&amp;#10;crdm_crdm_msg2 = &quot;&quot;;&amp;#10;crdm_pos2 = [[(- 0.5), 0], [0.5, 0]];&amp;#10;crdm_resp2 = [&quot;1&quot;, &quot;2&quot;];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="my_loop = eval(crdm_practice_loop2_name);&amp;#10;crdm_idx2 = random.randint(0, 1);&amp;#10;crdm_sure_pos2 = crdm_pos2[crdm_idx2];&amp;#10;crdm_sure_resp2 = crdm_resp2[crdm_idx2];" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="my_loop = eval(crdm_practice_loop2_name)&amp;#10;&amp;#10;#random index for certain outcome position and response&amp;#10;crdm_idx2 = random.randint(0,1) &amp;#10;crdm_sure_pos2 = crdm_pos2[crdm_idx2] &amp;#10;crdm_sure_resp2 = crdm_resp2[crdm_idx2]" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="crdm_pract2_key = crdm_pract2_trial_resp.keys;&amp;#10;crdm_pract2_sure_key = crdm_pract2_trial_resp.corr;&amp;#10;my_loop.addData(&quot;crdm_trial_type&quot;, &quot;practice2&quot;);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="crdm_pract2_key = crdm_pract2_trial_resp.keys&amp;#10;crdm_pract2_sure_key = crdm_pract2_trial_resp.corr&amp;#10;&amp;#10;my_loop.addData(&quot;crdm_trial_type&quot;, &quot;practice2&quot;)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="crdm_pract2_trial_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="crdm_pract2_trial_img" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$&quot;images/&quot; + crdm_img2" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="crdm_pract2_trial_img" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="crdm_pract2_trial_lott_top_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_pract2_trial_lott_top_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(&quot;$&quot;+str(format(crdm_lott_top2)))" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_pract2_trial_lott_bot_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_pract2_trial_lott_bot_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(&quot;$&quot;+str(format(crdm_lott_bot2)))" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_pract2_trial_sure_amt_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_pract2_trial_sure_amt_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="crdm_sure_pos2" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(&quot;$&quot;+str(format(crdm_sure_amt2)))&amp;#10;" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="GRFX_fix2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="[0,0,0]" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="[0,0,0]" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="GRFX_fix2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(2, 2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="crdm_pract2_trial_cue" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-1.0000, 1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, 1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="crdm_pract2_trial_cue" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.04, 0.04)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <KeyboardComponent name="crdm_pract2_trial_resp" plugin="None">
        <Param val="'1', '2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$crdm_sure_resp2" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="crdm_pract2_trial_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="crdm_pract2_iti">
      <RoutineSettingsComponent name="crdm_pract2_iti" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_pract2_iti" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="crdm_pract2_iti_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (!(crdm_pract2_trials.thisTrialN == undefined) &amp;&amp; (crdm_pract2_trials.thisTrialN === 5)) {&amp;#10;    continueRoutine = false;&amp;#10;}" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#3 CRDM practice trials&amp;#10;if crdm_pract2_trials.thisTrialN == 5:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="crdm_pract2_iti_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="crdm_pract2_iti_poly" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="crdm_pract2_iti_poly" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.05, 0.05)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="crdm_pract1_instr">
      <RoutineSettingsComponent name="crdm_pract1_instr" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_pract1_instr" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="crdm_pract1_instr_name_txt" plugin="None">
        <Param val="0.7098, 0.2941, -0.7490" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_pract1_instr_name_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="* Risk &amp; Ambiguity Task *" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_pract1_instr_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_pract1_instr_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="In this first section, you will only be asked to indicate your choice between the certain outcome and the lottery. You will not be asked to rate your choice confidence.&amp;#10;&amp;#10;When the green circle appears, indicate your decision by pressing YELLOW for the left option and GREEN for the right option. &amp;#10;&amp;#10;Let's practice!" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.25" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_pract1_instr_space_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_pract1_instr_space_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press SPACE to begin." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="crdm_pract1_instr_key" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="crdm_pract1_instr_key" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="crdm_bonus">
      <RoutineSettingsComponent name="crdm_bonus" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="crdm_bonus" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="crdm_bonus_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="exp = [];&amp;#10;choice = [];&amp;#10;money = [];&amp;#10;trial_img = [];&amp;#10;top = [];&amp;#10;bottom = [];&amp;#10;outcome = [];&amp;#10;nonzero_side = [];&amp;#10;domain = [];&amp;#10;sure_amt = &quot;&quot;;&amp;#10;earnings_text = &quot;&quot;;&amp;#10;choice_text = &quot;&quot;;&amp;#10;outcome_color = [0, 0, 0];&amp;#10;chip_color = [0, 0, 0];&amp;#10;chip_text = &quot;&quot;;&amp;#10;choice_outcome = &quot;&quot;;&amp;#10;money_outcome = &quot;&quot;;&amp;#10;idx = Number.parseInt((random.random() * crdm_earnings.length));&amp;#10;[choice, money, sure_amt, trial_img, top, bottom, outcome, nonzero_side, domain] = crdm_earnings[idx];&amp;#10;money = format(money);&amp;#10;my_loop.addData(&quot;crdm_bonus_choice&quot;, choice);&amp;#10;my_loop.addData(&quot;crdm_bonus_amt&quot;, money);&amp;#10;red_nonzero = false;&amp;#10;if ((nonzero_side === &quot;top&quot;)) {&amp;#10;    red_nonzero = true;&amp;#10;}&amp;#10;if ((choice === &quot;sure&quot;)) {&amp;#10;    choice_text = &quot;*CERTAIN*&quot;;&amp;#10;    outcome_color = [0.7098, 0.2941, (- 0.749)];&amp;#10;    chip_color = [0, 0, 0];&amp;#10;    chip_text = &quot;&quot;;&amp;#10;    choice_outcome = (&quot;$&quot; + money.toString());&amp;#10;    money_outcome = &quot;&quot;;&amp;#10;} else {&amp;#10;    choice_text = &quot;*PLAY THE LOTTERY*&quot;;&amp;#10;    if ((red_nonzero === true)) {&amp;#10;        if (((outcome === 1) &amp;&amp; (domain === &quot;gain&quot;))) {&amp;#10;            outcome_color = [0.9608, 0.0039, (- 0.1059)];&amp;#10;            chip_color = [0.9608, 0.0039, (- 0.1059)];&amp;#10;            choice_outcome = &quot;A red chip&quot;;&amp;#10;            chip_text = &quot;was drawn and the outcome was&quot;;&amp;#10;            money_outcome = (&quot;$&quot; + money.toString());&amp;#10;        } else {&amp;#10;            if (((outcome === 1) &amp;&amp; (domain === &quot;loss&quot;))) {&amp;#10;                outcome_color = [(- 0.2157), 0.1686, 0.8588];&amp;#10;                chip_color = [(- 0.2157), 0.1686, 0.8588];&amp;#10;                choice_outcome = &quot;A blue chip&quot;;&amp;#10;                chip_text = &quot;was drawn and the outcome was&quot;;&amp;#10;                money_outcome = (&quot;$&quot; + money.toString());&amp;#10;            } else {&amp;#10;                if (((outcome === 0) &amp;&amp; (domain === &quot;gain&quot;))) {&amp;#10;                    outcome_color = [(- 0.2157), 0.1686, 0.8588];&amp;#10;                    chip_color = [(- 0.2157), 0.1686, 0.8588];&amp;#10;                    choice_outcome = &quot;A blue chip&quot;;&amp;#10;                    chip_text = &quot;was drawn and the outcome was&quot;;&amp;#10;                    money_outcome = (&quot;$&quot; + money.toString());&amp;#10;                } else {&amp;#10;                    if (((outcome === 0) &amp;&amp; (domain === &quot;loss&quot;))) {&amp;#10;                        outcome_color = [0.9608, 0.0039, (- 0.1059)];&amp;#10;                        chip_color = [0.9608, 0.0039, (- 0.1059)];&amp;#10;                        choice_outcome = &quot;A red chip&quot;;&amp;#10;                        chip_text = &quot;was drawn and the outcome was&quot;;&amp;#10;                        money_outcome = (&quot;$&quot; + money.toString());&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    } else {&amp;#10;        if (((outcome === 1) &amp;&amp; (domain === &quot;gain&quot;))) {&amp;#10;            outcome_color = [(- 0.2157), 0.1686, 0.8588];&amp;#10;            chip_color = [(- 0.2157), 0.1686, 0.8588];&amp;#10;            choice_outcome = &quot;A blue chip&quot;;&amp;#10;            chip_text = &quot;was drawn and the outcome was&quot;;&amp;#10;            money_outcome = (&quot;$&quot; + money.toString());&amp;#10;        } else {&amp;#10;            if (((outcome === 1) &amp;&amp; (domain === &quot;loss&quot;))) {&amp;#10;                outcome_color = [0.9608, 0.0039, (- 0.1059)];&amp;#10;                chip_color = [0.9608, 0.0039, (- 0.1059)];&amp;#10;                choice_outcome = &quot;A red chip&quot;;&amp;#10;                chip_text = &quot;was drawn and the outcome was&quot;;&amp;#10;                money_outcome = (&quot;$&quot; + money.toString());&amp;#10;            } else {&amp;#10;                if (((outcome === 0) &amp;&amp; (domain === &quot;gain&quot;))) {&amp;#10;                    outcome_color = [0.9608, 0.0039, (- 0.1059)];&amp;#10;                    chip_color = [0.9608, 0.0039, (- 0.1059)];&amp;#10;                    choice_outcome = &quot;A red chip&quot;;&amp;#10;                    chip_text = &quot;was drawn and the outcome was&quot;;&amp;#10;                    money_outcome = (&quot;$&quot; + money.toString());&amp;#10;                } else {&amp;#10;                    if (((outcome === 0) &amp;&amp; (domain === &quot;loss&quot;))) {&amp;#10;                        outcome_color = [(- 0.2157), 0.1686, 0.8588];&amp;#10;                        chip_color = [(- 0.2157), 0.1686, 0.8588];&amp;#10;                        choice_outcome = &quot;A blue chip&quot;;&amp;#10;                        chip_text = &quot;was drawn and the outcome was&quot;;&amp;#10;                        money_outcome = (&quot;$&quot; + money.toString());&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="exp = []&amp;#10;choice = []&amp;#10;money = [] &amp;#10;trial_img = []&amp;#10;top = [] &amp;#10;bottom = [] &amp;#10;outcome = [] &amp;#10;nonzero_side = []&amp;#10;domain = []&amp;#10;sure_amt = &quot;&quot;&amp;#10;earnings_text = &quot;&quot;&amp;#10;choice_text = &quot;&quot;&amp;#10;outcome_color = [0,0,0]&amp;#10;chip_color = [0,0,0]&amp;#10;chip_text = &quot;&quot;&amp;#10;choice_outcome = &quot;&quot;&amp;#10;money_outcome = &quot;&quot;&amp;#10;&amp;#10;#indexing examples&amp;#10;#certain chosen - (&quot;sure&quot;, crdm_sure_amt, crdm_sure_amt, crdm_img, crdm_lott_top, crdm_lott_bot, -1, crdm_nonzero_side, crdm_domain)&amp;#10;#lotto chosen, win top - (&quot;lott&quot;, crdm_lott_top, crdm_sure_amt, crdm_img, crdm_lott_top, crdm_lott_bot, lott_outcome, crdm_nonzero_side, crdm_domain)&amp;#10;#lotto chosen, win bottom - (&quot;lott&quot;, crdm_lott_bot, crdm_sure_amt, crdm_img, crdm_lott_top, crdm_lott_bot, lott_outcome, crdm_nonzero_side, crdm_domain)&amp;#10;&amp;#10;idx = int(random.random() * len(crdm_earnings)) &amp;#10;choice, money, sure_amt, trial_img, top, bottom, outcome, nonzero_side, domain = crdm_earnings[idx]&amp;#10;money = format(money)&amp;#10;my_loop.addData(&quot;crdm_bonus_choice&quot;, choice)&amp;#10;my_loop.addData(&quot;crdm_bonus_amt&quot;, money)&amp;#10;&amp;#10;red_nonzero = False&amp;#10;#top is always red, bottom is always blue&amp;#10;if nonzero_side == &quot;top&quot;: &amp;#10;    red_nonzero = True&amp;#10;&amp;#10;#text for bonus payment screen&amp;#10;if choice == &quot;sure&quot;: #Ss chose sure amt&amp;#10;    choice_text = &quot;*CERTAIN*&quot;&amp;#10;    outcome_color = [0.7098, 0.2941, -0.7490]&amp;#10;    chip_color = [0,0,0]&amp;#10;    chip_text = &quot;&quot;&amp;#10;    choice_outcome = &quot;$&quot; + str(money)&amp;#10;    money_outcome = &quot;&quot;&amp;#10;    &amp;#10;else: #Ss chose lottery&amp;#10;    choice_text = &quot;*PLAY THE LOTTERY*&quot;&amp;#10;    if red_nonzero == True: #red (top) is nonzero side&amp;#10;        if outcome == 1 and domain == &quot;gain&quot;: #Ss won the lotto on gain trial&amp;#10;            outcome_color = [0.9608, 0.0039, -0.1059]&amp;#10;            chip_color = [0.9608, 0.0039, -0.1059]&amp;#10;            choice_outcome = &quot;A red chip&quot; #blue chip is drawn and is winning side (+$ == win some money)&amp;#10;            chip_text = &quot;was drawn and the outcome was&quot;&amp;#10;            money_outcome = &quot;$&quot;+str(money)&amp;#10;        elif outcome == 1 and domain == &quot;loss&quot;: #Ss won the lotto on loss trial&amp;#10;            outcome_color = [-0.2157, 0.1686, 0.8588]&amp;#10;            chip_color = [-0.2157, 0.1686, 0.8588]&amp;#10;            choice_outcome = &quot;A blue chip&quot; #blue chip is drawn and is winning side ($0 == lose no money)&amp;#10;            chip_text = &quot;was drawn and the outcome was&quot;&amp;#10;            money_outcome = &quot;$&quot;+str(money)&amp;#10;        elif outcome == 0 and domain == &quot;gain&quot;: #Ss lost lotto on gain trial&amp;#10;            outcome_color = [-0.2157, 0.1686, 0.8588]&amp;#10;            chip_color = [-0.2157, 0.1686, 0.8588]&amp;#10;            choice_outcome = &quot;A blue chip&quot; #blue chip is drawn and is losing side ($0 == win no money)&amp;#10;            chip_text = &quot;was drawn and the outcome was&quot;&amp;#10;            money_outcome = &quot;$&quot;+str(money)&amp;#10;        elif outcome == 0 and domain == &quot;loss&quot;: #Ss lost lotto on gloss trial&amp;#10;            outcome_color = [0.9608, 0.0039, -0.1059]&amp;#10;            chip_color = [0.9608, 0.0039, -0.1059]&amp;#10;            choice_outcome = &quot;A red chip&quot; #red chip is drawn and is losing side (-$ == lose some money)&amp;#10;            chip_text = &quot;was drawn and the outcome was&quot;&amp;#10;            money_outcome = &quot;$&quot;+str(money)&amp;#10;    else: #blue (bottom) is nonzero side&amp;#10;        if outcome == 1 and domain == &quot;gain&quot;: #Ss won the lotto on gain trial&amp;#10;            outcome_color = [-0.2157, 0.1686, 0.8588]&amp;#10;            chip_color = [-0.2157, 0.1686, 0.8588]&amp;#10;            choice_outcome = &quot;A blue chip&quot; #blue chip is drawn and is winning side (+$ == win some money)&amp;#10;            chip_text = &quot;was drawn and the outcome was&quot;&amp;#10;            money_outcome = &quot;$&quot;+str(money)&amp;#10;        elif outcome == 1 and domain == &quot;loss&quot;: #Ss won the lotto on loss trial&amp;#10;            outcome_color = [0.9608, 0.0039, -0.1059]&amp;#10;            chip_color = [0.9608, 0.0039, -0.1059]&amp;#10;            choice_outcome = &quot;A red chip&quot; #red chip is drawn and is winning side ($0 == lose no money)&amp;#10;            chip_text = &quot;was drawn and the outcome was&quot;&amp;#10;            money_outcome = &quot;$&quot;+str(money)&amp;#10;        elif outcome == 0 and domain == &quot;gain&quot;: #Ss lost lotto on gain trial&amp;#10;            outcome_color = [0.9608, 0.0039, -0.1059]&amp;#10;            chip_color = [0.9608, 0.0039, -0.1059]&amp;#10;            choice_outcome = &quot;A red chip&quot; #red chip is drawn and is losing side ($0 == win no money)&amp;#10;            chip_text = &quot;was drawn and the outcome was&quot;&amp;#10;            money_outcome = &quot;$&quot;+str(money)&amp;#10;        elif outcome == 0 and domain == &quot;loss&quot;: #Ss lost lotto on gloss trial&amp;#10;            outcome_color = [-0.2157, 0.1686, 0.8588]&amp;#10;            chip_color = [-0.2157, 0.1686, 0.8588]&amp;#10;            choice_outcome = &quot;A blue chip&quot; #blue chip is drawn and is losing side (-$ == lose some money)&amp;#10;            chip_text = &quot;was drawn and the outcome was&quot;&amp;#10;            money_outcome = &quot;$&quot;+str(money)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="crdm_bonus_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="crdm_bonus_thanks_txt" plugin="None">
        <Param val="0.7098, 0.2941, -0.7490" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_bonus_thanks_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Your randomly selected *bonus earnings trial* is from the&amp;#10;Risk &amp; Ambiguity Task!" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.35" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_bonus_lott_top" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_bonus_lott_top" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.6, 0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(&quot;$&quot;+str(format(top)))" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="crdm_bonus_img" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$&quot;images/&quot; + trial_img" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="crdm_bonus_img" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.6, -0.1)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="crdm_bonus_lott_bot" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_bonus_lott_bot" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.6, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(&quot;$&quot;+str(format(bottom)))" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_bonus_sure_amt_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_bonus_sure_amt_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.375, -0.1)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(&quot;$&quot;+str(format(sure_amt)))" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_bonus_prompt_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="num" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_bonus_prompt_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.2, 0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="num" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="num" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="num" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="In this trial, you chose:" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_bonus_choice_text_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_bonus_choice_text_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.2, 0.1)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$choice_text" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_bonus_choice_outcome_txt" plugin="None">
        <Param val="$outcome_color" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_bonus_choice_outcome_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.2, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$choice_outcome" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_bonus_drawn_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_bonus_drawn_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.2, -0.1)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$chip_text" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="crdm_bonus_chip_poly" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$chip_color" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$chip_color" valType="color" updates="set every repeat" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="crdm_bonus_chip_poly" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.075, 0.075)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="crdm_bonus_winnings_txt" plugin="None">
        <Param val="0.7098, 0.2941, -0.7490" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_bonus_winnings_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.2, -0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$money_outcome" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="crdm_bonus_space_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="crdm_bonus_space_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press SPACE to end." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="crdm_bonus_resp" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="crdm_bonus_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="crdm_instr1"/>
    <Routine name="crdm_instr2"/>
    <Routine name="crdm_instr3"/>
    <Routine name="crdm_instr4"/>
    <Routine name="crdm_instr5"/>
    <Routine name="crdm_instr6"/>
    <Routine name="crdm_instr7"/>
    <Routine name="crdm_instr8"/>
    <Routine name="crdm_pract1_instr"/>
    <Routine name="crdm_pract_init_fix"/>
    <LoopInitiator loopType="TrialHandler" name="crdm_pract1_trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('crdm_sure_amt1', 5), ('crdm_sure_p1', 100), ('crdm_lott_top1', 20), ('crdm_lott_bot1', 0), ('crdm_lott_p1', 13), ('crdm_amb_lev1', 0), ('crdm_domain1', 'gain'), ('crdm_img1', 'risk_red_13.bmp'), ('crdm_nonzero_side1', 'top')]), OrderedDict([('crdm_sure_amt1', 5), ('crdm_sure_p1', 100), ('crdm_lott_top1', 0), ('crdm_lott_bot1', 50), ('crdm_lott_p1', 25), ('crdm_amb_lev1', 0), ('crdm_domain1', 'gain'), ('crdm_img1', 'risk_blue_25.bmp'), ('crdm_nonzero_side1', 'bottom')]), OrderedDict([('crdm_sure_amt1', 5), ('crdm_sure_p1', 100), ('crdm_lott_top1', 40), ('crdm_lott_bot1', 0), ('crdm_lott_p1', 50), ('crdm_amb_lev1', 74), ('crdm_domain1', 'gain'), ('crdm_img1', 'ambig_74.bmp'), ('crdm_nonzero_side1', 'top')]), OrderedDict([('crdm_sure_amt1', -5), ('crdm_sure_p1', 100), ('crdm_lott_top1', 0), ('crdm_lott_bot1', -8), ('crdm_lott_p1', 75), ('crdm_amb_lev1', 0), ('crdm_domain1', 'loss'), ('crdm_img1', 'risk_blue_75.bmp'), ('crdm_nonzero_side1', 'bottom')]), OrderedDict([('crdm_sure_amt1', -5), ('crdm_sure_p1', 100), ('crdm_lott_top1', -20), ('crdm_lott_bot1', 0), ('crdm_lott_p1', 75), ('crdm_amb_lev1', 0), ('crdm_domain1', 'loss'), ('crdm_img1', 'risk_red_75.bmp'), ('crdm_nonzero_side1', 'top')]), OrderedDict([('crdm_sure_amt1', -5), ('crdm_sure_p1', 100), ('crdm_lott_top1', 0), ('crdm_lott_bot1', -40), ('crdm_lott_p1', 75), ('crdm_amb_lev1', 0), ('crdm_domain1', 'loss'), ('crdm_img1', 'risk_blue_75.bmp'), ('crdm_nonzero_side1', 'bottom')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="crdm_practice1.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="crdm_pract1_trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="crdm_pract1_trial"/>
    <Routine name="crdm_pract1_feedback"/>
    <LoopTerminator name="crdm_pract1_trials"/>
    <Routine name="crdm_qp_instr"/>
    <LoopInitiator loopType="TrialHandler" name="crdm_questplus_trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('crdm_trial_type', 'gain'), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_type', 'gain'), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_type', 'gain'), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_type', 'gain'), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_type', 'gain'), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_type', 'gain'), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_type', 'gain'), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_type', 'gain'), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_type', 'gain'), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_type', 'gain'), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_type', 'gain'), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_type', 'gain'), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_type', 'gain'), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_type', 'gain'), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_type', 'gain'), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_type', 'gain'), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_type', 'gain'), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_type', 'gain'), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_type', 'gain'), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_type', 'gain'), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_type', 'loss'), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_type', 'loss'), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_type', 'loss'), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_type', 'loss'), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_type', 'loss'), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_type', 'loss'), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_type', 'loss'), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_type', 'loss'), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_type', 'loss'), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_type', 'loss'), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_type', 'loss'), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_type', 'loss'), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_type', 'loss'), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_type', 'loss'), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_type', 'loss'), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_type', 'loss'), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_type', 'loss'), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_type', 'loss'), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_type', 'loss'), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_type', 'loss'), ('crdm_nonzero_side', 'bottom')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="crdm_questplus_trials.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="crdm_questplus_trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="crdm_questplus"/>
    <Routine name="crdm_qp_feedback"/>
    <LoopTerminator name="crdm_questplus_trials"/>
    <Routine name="crdm_schedule_gen"/>
    <Routine name="crdm_pract2_instr"/>
    <Routine name="crdm_pract_init_fix"/>
    <LoopInitiator loopType="TrialHandler" name="crdm_pract2_trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('crdm_sure_amt2', 5), ('crdm_sure_p2', 100), ('crdm_lott_top2', 20), ('crdm_lott_bot2', 0), ('crdm_lott_p2', 13), ('crdm_amb_lev2', 0), ('crdm_domain2', 'gain'), ('crdm_img2', 'risk_red_13.bmp'), ('crdm_nonzero_side2', 'top')]), OrderedDict([('crdm_sure_amt2', 5), ('crdm_sure_p2', 100), ('crdm_lott_top2', 0), ('crdm_lott_bot2', 50), ('crdm_lott_p2', 25), ('crdm_amb_lev2', 0), ('crdm_domain2', 'gain'), ('crdm_img2', 'risk_blue_25.bmp'), ('crdm_nonzero_side2', 'bottom')]), OrderedDict([('crdm_sure_amt2', 5), ('crdm_sure_p2', 100), ('crdm_lott_top2', 40), ('crdm_lott_bot2', 0), ('crdm_lott_p2', 50), ('crdm_amb_lev2', 74), ('crdm_domain2', 'gain'), ('crdm_img2', 'ambig_74.bmp'), ('crdm_nonzero_side2', 'top')]), OrderedDict([('crdm_sure_amt2', -5), ('crdm_sure_p2', 100), ('crdm_lott_top2', 0), ('crdm_lott_bot2', -8), ('crdm_lott_p2', 75), ('crdm_amb_lev2', 0), ('crdm_domain2', 'loss'), ('crdm_img2', 'risk_blue_75.bmp'), ('crdm_nonzero_side2', 'bottom')]), OrderedDict([('crdm_sure_amt2', -5), ('crdm_sure_p2', 100), ('crdm_lott_top2', -20), ('crdm_lott_bot2', 0), ('crdm_lott_p2', 75), ('crdm_amb_lev2', 0), ('crdm_domain2', 'loss'), ('crdm_img2', 'risk_red_75.bmp'), ('crdm_nonzero_side2', 'top')]), OrderedDict([('crdm_sure_amt2', -5), ('crdm_sure_p2', 100), ('crdm_lott_top2', 0), ('crdm_lott_bot2', -40), ('crdm_lott_p2', 75), ('crdm_amb_lev2', 0), ('crdm_domain2', 'loss'), ('crdm_img2', 'risk_blue_75.bmp'), ('crdm_nonzero_side2', 'bottom')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="crdm_practice2.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="crdm_pract2_trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="crdm_pract2_trial"/>
    <Routine name="crdm_pract2_feedback"/>
    <Routine name="crdm_pract2_conf"/>
    <Routine name="crdm_pract2_iti"/>
    <LoopTerminator name="crdm_pract2_trials"/>
    <Routine name="crdm_trial_instr"/>
    <Routine name="crdm_init_fix"/>
    <LoopInitiator loopType="TrialHandler" name="crdm_trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('crdm_trial_idx', 0), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 1), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 2), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 3), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 4), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 5), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 6), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 7), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 8), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 9), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 10), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 11), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 12), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 13), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 14), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 15), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 16), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 17), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 18), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 19), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 20), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 21), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 22), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 23), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 24), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 25), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 26), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 27), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 28), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 29), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 30), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 31), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 32), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 33), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 34), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 35), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 36), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 37), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 38), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 39), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 40), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 41), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 42), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 43), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 44), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 45), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 46), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 47), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 48), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 49), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 50), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 51), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 52), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 53), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 54), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 55), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 56), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 57), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 58), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 59), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 60), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 61), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 62), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 63), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 64), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 65), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 66), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 67), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 68), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 69), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 70), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 71), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 72), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 73), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 74), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 75), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 76), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 77), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 78), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 79), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 80), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 81), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 82), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 83), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 84), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 85), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 86), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 87), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 88), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 89), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 90), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 91), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 92), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 93), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 94), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 95), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 96), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 97), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 98), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 99), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 100), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 101), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 102), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 103), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 104), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 105), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 106), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 107), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 108), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 109), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 110), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 111), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 112), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 113), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 114), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 115), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 116), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 117), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 118), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 119), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 120), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 121), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 122), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 123), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 124), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 125), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 126), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 127), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 128), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 129), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 130), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 131), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 132), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 133), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 134), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 135), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 136), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 137), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 138), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 139), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 140), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 141), ('crdm_nonzero_side', 'bottom')]), OrderedDict([('crdm_trial_idx', 142), ('crdm_nonzero_side', 'top')]), OrderedDict([('crdm_trial_idx', 143), ('crdm_nonzero_side', 'bottom')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="crdm_gen_trials_idx.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="crdm_trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="crdm_trial"/>
    <Routine name="crdm_feedback"/>
    <Routine name="crdm_conf"/>
    <Routine name="crdm_trials_iti"/>
    <LoopTerminator name="crdm_trials"/>
    <Routine name="crdm_end"/>
    <Routine name="crdm_bonus"/>
  </Flow>
</PsychoPy2experiment>
